{
	"id": "a4cdd124844959c81f76ca88b849b465",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyToken.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract RPS {\n\n    event Commit(address player);\n    event Reveal(address player, Weapon weapon);\n\n    enum Stage {\n        FirstCommit,\n        SecondCommit,\n        FirstReveal,\n        SecondReveal,\n        FinishGame\n    }\n\n    enum Weapon {\n        None,\n        Rock,\n        Paper,\n        Scissors\n    }\n\n    address public player1;\n    address public player2;\n    Weapon public weaponOfPlayer1;\n    Weapon public weaponOfPlayer2;\n    bytes32 public player1Hash;\n    bytes32 public player2Hash;\n\n    address public winner;\n\n    Stage public stage = Stage.FirstCommit;\n    \n    mapping(Weapon => mapping(Weapon => uint8)) private map;\n\n    constructor() {\n        map[Weapon.Rock][Weapon.Rock] = 0;\n        map[Weapon.Scissors][Weapon.Scissors] = 0;\n        map[Weapon.Paper][Weapon.Paper] = 0;\n        map[Weapon.Rock][Weapon.Scissors] = 1;\n        map[Weapon.Paper][Weapon.Rock] = 1;\n        map[Weapon.Scissors][Weapon.Paper] = 1;\n        map[Weapon.Rock][Weapon.Paper] = 2;\n        map[Weapon.Paper][Weapon.Scissors] = 2;\n        map[Weapon.Scissors][Weapon.Rock] = 2;\n\n        newGame();\n    }\n\n    function newGame() public {\n        winner = address(0x0);\n        player1 = address(0x0);\n        player2 = address(0x0);\n\n        player1Hash = 0x0;\n        player2Hash = 0x0;\n\n        weaponOfPlayer1 = Weapon.None;\n        weaponOfPlayer2 = Weapon.None;\n\n        stage = Stage.FirstCommit;\n    }\n    \n    modifier isJoinable() {\n        require(player1 == address(0) || player2 == address(0),\n                \"The room is full.\"\n        );\n        _;\n    }\n    \n    modifier isPlayer() {\n        require(msg.sender == player1 || msg.sender == player2,\n                \"You are not playing this game.\"\n        );\n        _;\n    }\n    \n    modifier isCorrectChoice(Weapon weapon) {\n        require(weapon == Weapon.Rock || weapon == Weapon.Paper || weapon == Weapon.Scissors, \"invalid weapon\");\n        _;\n    }\n\n    modifier isAlreadyIn() {\n        require(\n            msg.sender != player1 &&\n                msg.sender != player2\n        );\n        _;\n    }\n    \n    // Functions\n     \n    function join() isAlreadyIn external\n        isJoinable()\n    {\n        if (player1 == address(0)) {\n            player1 = msg.sender;\n            \n        } else\n            player2 = msg.sender;\n    }\n    \n    function makeChoice(bytes32 hash) isPlayer public {\n        require(stage == Stage.FirstCommit || stage == Stage.SecondCommit);\n\n        if (msg.sender == player1\n                        && player1Hash == 0x0) {\n            player1Hash = hash;\n        } else if (msg.sender == player2\n                        && player2Hash == 0x0) {\n            player2Hash = hash;\n        } else {\n            revert(\"Players have already commited\");\n        }\n\n        emit Commit(msg.sender);\n\n        if(stage == Stage.FirstCommit) stage = Stage.SecondCommit;\n\n        else stage = Stage.FirstReveal;\n    }\n\n    function reveal(Weapon weapon, uint32 salt) isPlayer public  \n        isCorrectChoice(weapon)\n    {\n        require(stage == Stage.FirstReveal || stage == Stage.SecondReveal, \"incorrect stage\");\n\n        bytes32 calculatedHash = sha256(\n            bytes.concat(\n                bytes(Strings.toString(uint256(weapon))),\n                bytes(Strings.toString(salt))\n            )\n        );\n\n        if (weapon == Weapon.None) {\n            revert(\"incorrect weapon\");\n        }\n\n        if (msg.sender == player1\n                    && calculatedHash == player1Hash) {\n            weaponOfPlayer1 = weapon;\n            emit Reveal(msg.sender, weapon);\n            stage = Stage.SecondReveal;\n        } else if (msg.sender == player2\n                    && calculatedHash == player2Hash) {\n            weaponOfPlayer2 = weapon;\n            emit Reveal(msg.sender, weapon);\n            stage = Stage.FinishGame;\n        } else {\n            revert(\"incorrect weapon\");\n        }\n    }\n    \n    function endgame() public isPlayer {\n        require(stage == Stage.FinishGame, \"incorrect stage\");\n\n        int8 result = int8(map[weaponOfPlayer1][weaponOfPlayer2]);\n        \n        if (result == 0 || result == 1) {\n            winner = player1;\n        } else {\n            winner = player2;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH24 0xADC79BB987DE03049C655529ACBF51A3F7D36BB14C89A2D2 0xF7 SWAP1 INVALID 0xE5 0x4D PUSH1 0x64 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "188:2065:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205377adc79bb987de03049c655529acbf51a3f7d36bb14c89a2d2f790fee54d6064736f6c63430008110033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xEB 0x2D ISZERO 0x5C 0xC7 EXTCODEHASH 0xBF DIV RETURN PUSH6 0x1B35566C3612 SGT SMOD PUSH9 0x4F46E0E4F511E6D6A6 PUSH2 0x33AD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "202:12302:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200deb2d155cc73fbf04f3651b35566c36121307684f46e0e4f511e6d6a66133ad64736f6c63430008110033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyToken.sol": {
				"RPS": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "Commit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum RPS.Weapon",
									"name": "weapon",
									"type": "uint8"
								}
							],
							"name": "Reveal",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "endgame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "join",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "hash",
									"type": "bytes32"
								}
							],
							"name": "makeChoice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newGame",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player1Hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "player2Hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum RPS.Weapon",
									"name": "weapon",
									"type": "uint8"
								},
								{
									"internalType": "uint32",
									"name": "salt",
									"type": "uint32"
								}
							],
							"name": "reveal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"internalType": "enum RPS.Stage",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weaponOfPlayer1",
							"outputs": [
								{
									"internalType": "enum RPS.Weapon",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weaponOfPlayer2",
							"outputs": [
								{
									"internalType": "enum RPS.Weapon",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyToken.sol\":126:4352  contract RPS {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyToken.sol\":684:701  Stage.FirstCommit */\n  0x00\n    /* \"contracts/MyToken.sol\":663:701  Stage public stage = Stage.FirstCommit */\n  0x04\n  exp(0x0100, 0x14)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":774:1232  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"contracts/MyToken.sol\":830:831  0 */\n  0x00\n    /* \"contracts/MyToken.sol\":798:801  map */\n  0x05\n    /* \"contracts/MyToken.sol\":798:814  map[Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":802:813  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":798:814  map[Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  tag_8\n  tag_3\n  jump\t// in\ntag_8:\ntag_7:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  tag_10\n  tag_3\n  jump\t// in\ntag_10:\ntag_9:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":798:827  map[Weapon.Rock][Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":815:826  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":798:827  map[Weapon.Rock][Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  tag_12\n  tag_3\n  jump\t// in\ntag_12:\ntag_11:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  tag_14\n  tag_3\n  jump\t// in\ntag_14:\ntag_13:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":798:831  map[Weapon.Rock][Weapon.Rock] = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":881:882  0 */\n  0x00\n    /* \"contracts/MyToken.sol\":841:844  map */\n  0x05\n    /* \"contracts/MyToken.sol\":841:861  map[Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":845:860  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":841:861  map[Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_3\n  jump\t// in\ntag_16:\ntag_15:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_3\n  jump\t// in\ntag_18:\ntag_17:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":841:878  map[Weapon.Scissors][Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":862:877  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":841:878  map[Weapon.Scissors][Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_3\n  jump\t// in\ntag_20:\ntag_19:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_3\n  jump\t// in\ntag_22:\ntag_21:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":841:882  map[Weapon.Scissors][Weapon.Scissors] = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":926:927  0 */\n  0x00\n    /* \"contracts/MyToken.sol\":892:895  map */\n  0x05\n    /* \"contracts/MyToken.sol\":892:909  map[Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":896:908  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":892:909  map[Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_3\n  jump\t// in\ntag_24:\ntag_23:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_3\n  jump\t// in\ntag_26:\ntag_25:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":892:923  map[Weapon.Paper][Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":910:922  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":892:923  map[Weapon.Paper][Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_3\n  jump\t// in\ntag_28:\ntag_27:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_3\n  jump\t// in\ntag_30:\ntag_29:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":892:927  map[Weapon.Paper][Weapon.Paper] = 0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":973:974  1 */\n  0x01\n    /* \"contracts/MyToken.sol\":937:940  map */\n  0x05\n    /* \"contracts/MyToken.sol\":937:953  map[Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":941:952  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":937:953  map[Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_3\n  jump\t// in\ntag_32:\ntag_31:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_34\n  tag_3\n  jump\t// in\ntag_34:\ntag_33:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":937:970  map[Weapon.Rock][Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":954:969  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":937:970  map[Weapon.Rock][Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  tag_36\n  tag_3\n  jump\t// in\ntag_36:\ntag_35:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  tag_38\n  tag_3\n  jump\t// in\ntag_38:\ntag_37:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":937:974  map[Weapon.Rock][Weapon.Scissors] = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1017:1018  1 */\n  0x01\n    /* \"contracts/MyToken.sol\":984:987  map */\n  0x05\n    /* \"contracts/MyToken.sol\":984:1001  map[Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":988:1000  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":984:1001  map[Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  tag_40\n  tag_3\n  jump\t// in\ntag_40:\ntag_39:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_41\n  jumpi\n  tag_42\n  tag_3\n  jump\t// in\ntag_42:\ntag_41:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":984:1014  map[Weapon.Paper][Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":1002:1013  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":984:1014  map[Weapon.Paper][Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_43\n  jumpi\n  tag_44\n  tag_3\n  jump\t// in\ntag_44:\ntag_43:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_45\n  jumpi\n  tag_46\n  tag_3\n  jump\t// in\ntag_46:\ntag_45:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":984:1018  map[Weapon.Paper][Weapon.Rock] = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1065:1066  1 */\n  0x01\n    /* \"contracts/MyToken.sol\":1028:1031  map */\n  0x05\n    /* \"contracts/MyToken.sol\":1028:1048  map[Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":1032:1047  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":1028:1048  map[Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_47\n  jumpi\n  tag_48\n  tag_3\n  jump\t// in\ntag_48:\ntag_47:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_49\n  jumpi\n  tag_50\n  tag_3\n  jump\t// in\ntag_50:\ntag_49:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1028:1062  map[Weapon.Scissors][Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":1049:1061  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":1028:1062  map[Weapon.Scissors][Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_51\n  jumpi\n  tag_52\n  tag_3\n  jump\t// in\ntag_52:\ntag_51:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_53\n  jumpi\n  tag_54\n  tag_3\n  jump\t// in\ntag_54:\ntag_53:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":1028:1066  map[Weapon.Scissors][Weapon.Paper] = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1109:1110  2 */\n  0x02\n    /* \"contracts/MyToken.sol\":1076:1079  map */\n  0x05\n    /* \"contracts/MyToken.sol\":1076:1092  map[Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":1080:1091  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":1076:1092  map[Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_55\n  jumpi\n  tag_56\n  tag_3\n  jump\t// in\ntag_56:\ntag_55:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_57\n  jumpi\n  tag_58\n  tag_3\n  jump\t// in\ntag_58:\ntag_57:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1076:1106  map[Weapon.Rock][Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":1093:1105  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":1076:1106  map[Weapon.Rock][Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_59\n  jumpi\n  tag_60\n  tag_3\n  jump\t// in\ntag_60:\ntag_59:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_61\n  jumpi\n  tag_62\n  tag_3\n  jump\t// in\ntag_62:\ntag_61:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":1076:1110  map[Weapon.Rock][Weapon.Paper] = 2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1157:1158  2 */\n  0x02\n    /* \"contracts/MyToken.sol\":1120:1123  map */\n  0x05\n    /* \"contracts/MyToken.sol\":1120:1137  map[Weapon.Paper] */\n  0x00\n    /* \"contracts/MyToken.sol\":1124:1136  Weapon.Paper */\n  0x02\n    /* \"contracts/MyToken.sol\":1120:1137  map[Weapon.Paper] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_63\n  jumpi\n  tag_64\n  tag_3\n  jump\t// in\ntag_64:\ntag_63:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_65\n  jumpi\n  tag_66\n  tag_3\n  jump\t// in\ntag_66:\ntag_65:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1120:1154  map[Weapon.Paper][Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":1138:1153  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":1120:1154  map[Weapon.Paper][Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_67\n  jumpi\n  tag_68\n  tag_3\n  jump\t// in\ntag_68:\ntag_67:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_69\n  jumpi\n  tag_70\n  tag_3\n  jump\t// in\ntag_70:\ntag_69:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":1120:1158  map[Weapon.Paper][Weapon.Scissors] = 2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1204:1205  2 */\n  0x02\n    /* \"contracts/MyToken.sol\":1168:1171  map */\n  0x05\n    /* \"contracts/MyToken.sol\":1168:1188  map[Weapon.Scissors] */\n  0x00\n    /* \"contracts/MyToken.sol\":1172:1187  Weapon.Scissors */\n  0x03\n    /* \"contracts/MyToken.sol\":1168:1188  map[Weapon.Scissors] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_71\n  jumpi\n  tag_72\n  tag_3\n  jump\t// in\ntag_72:\ntag_71:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_73\n  jumpi\n  tag_74\n  tag_3\n  jump\t// in\ntag_74:\ntag_73:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/MyToken.sol\":1168:1201  map[Weapon.Scissors][Weapon.Rock] */\n  0x00\n    /* \"contracts/MyToken.sol\":1189:1200  Weapon.Rock */\n  0x01\n    /* \"contracts/MyToken.sol\":1168:1201  map[Weapon.Scissors][Weapon.Rock] */\n  0x03\n  dup2\n  gt\n  iszero\n  tag_75\n  jumpi\n  tag_76\n  tag_3\n  jump\t// in\ntag_76:\ntag_75:\n  0x03\n  dup2\n  gt\n  iszero\n  tag_77\n  jumpi\n  tag_78\n  tag_3\n  jump\t// in\ntag_78:\ntag_77:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/MyToken.sol\":1168:1205  map[Weapon.Scissors][Weapon.Rock] = 2 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1216:1225  newGame() */\n  tag_79\n    /* \"contracts/MyToken.sol\":1216:1223  newGame */\n  shl(0x20, tag_80)\n    /* \"contracts/MyToken.sol\":1216:1225  newGame() */\n  0x20\n  shr\n  jump\t// in\ntag_79:\n    /* \"contracts/MyToken.sol\":126:4352  contract RPS {... */\n  jump(tag_81)\n    /* \"contracts/MyToken.sol\":1238:1536  function newGame() public {... */\ntag_80:\n    /* \"contracts/MyToken.sol\":1291:1294  0x0 */\n  0x00\n    /* \"contracts/MyToken.sol\":1274:1280  winner */\n  0x04\n  0x00\n    /* \"contracts/MyToken.sol\":1274:1295  winner = address(0x0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1323:1326  0x0 */\n  0x00\n    /* \"contracts/MyToken.sol\":1305:1312  player1 */\n  dup1\n  0x00\n    /* \"contracts/MyToken.sol\":1305:1327  player1 = address(0x0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1355:1358  0x0 */\n  0x00\n    /* \"contracts/MyToken.sol\":1337:1344  player2 */\n  0x01\n  0x00\n    /* \"contracts/MyToken.sol\":1337:1359  player2 = address(0x0) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1384:1387  0x0 */\n  0x00\n    /* \"contracts/MyToken.sol\":1370:1387  player1Hash = 0x0 */\n  dup1\n  shl\n    /* \"contracts/MyToken.sol\":1370:1381  player1Hash */\n  0x02\n    /* \"contracts/MyToken.sol\":1370:1387  player1Hash = 0x0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1411:1414  0x0 */\n  0x00\n    /* \"contracts/MyToken.sol\":1397:1414  player2Hash = 0x0 */\n  dup1\n  shl\n    /* \"contracts/MyToken.sol\":1397:1408  player2Hash */\n  0x03\n    /* \"contracts/MyToken.sol\":1397:1414  player2Hash = 0x0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1443:1454  Weapon.None */\n  0x00\n    /* \"contracts/MyToken.sol\":1425:1440  weaponOfPlayer1 */\n  0x01\n  0x14\n    /* \"contracts/MyToken.sol\":1425:1454  weaponOfPlayer1 = Weapon.None */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_83\n  jumpi\n  tag_84\n  tag_3\n  jump\t// in\ntag_84:\ntag_83:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1482:1493  Weapon.None */\n  0x00\n    /* \"contracts/MyToken.sol\":1464:1479  weaponOfPlayer2 */\n  0x01\n  0x15\n    /* \"contracts/MyToken.sol\":1464:1493  weaponOfPlayer2 = Weapon.None */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_85\n  jumpi\n  tag_86\n  tag_3\n  jump\t// in\ntag_86:\ntag_85:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1512:1529  Stage.FirstCommit */\n  0x00\n    /* \"contracts/MyToken.sol\":1504:1509  stage */\n  0x04\n  0x14\n    /* \"contracts/MyToken.sol\":1504:1529  stage = Stage.FirstCommit */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x04\n  dup2\n  gt\n  iszero\n  tag_87\n  jumpi\n  tag_88\n  tag_3\n  jump\t// in\ntag_88:\ntag_87:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyToken.sol\":1238:1536  function newGame() public {... */\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"contracts/MyToken.sol\":126:4352  contract RPS {... */\ntag_81:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyToken.sol\":126:4352  contract RPS {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb688a363\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xd8c4d9da\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xd8c4d9da\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfb93247f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfce55812\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0xb688a363\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd30895e4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x1884824c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x59a5f12d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7d03f5f3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9dd63d6b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa45332a7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xab4a6be1\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyToken.sol\":535:564  Weapon public weaponOfPlayer2 */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":472:494  address public player2 */\n    tag_4:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":1238:1536  function newGame() public {... */\n    tag_5:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/MyToken.sol\":4039:4350  function endgame() public isPlayer {... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/MyToken.sol\":570:596  bytes32 public player1Hash */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":3045:4029  function reveal(Weapon weapon, uint32 salt) isPlayer public  ... */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/MyToken.sol\":2233:2435  function join() isAlreadyIn external... */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/MyToken.sol\":663:701  Stage public stage = Stage.FirstCommit */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":444:466  address public player1 */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":500:529  Weapon public weaponOfPlayer1 */\n    tag_12:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":635:656  address public winner */\n    tag_13:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":602:628  bytes32 public player2Hash */\n    tag_14:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyToken.sol\":2445:3039  function makeChoice(bytes32 hash) isPlayer public {... */\n    tag_15:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/MyToken.sol\":535:564  Weapon public weaponOfPlayer2 */\n    tag_19:\n      0x01\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":472:494  address public player2 */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":1238:1536  function newGame() public {... */\n    tag_27:\n        /* \"contracts/MyToken.sol\":1291:1294  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1274:1280  winner */\n      0x04\n      0x00\n        /* \"contracts/MyToken.sol\":1274:1295  winner = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1323:1326  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1305:1312  player1 */\n      dup1\n      0x00\n        /* \"contracts/MyToken.sol\":1305:1327  player1 = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1355:1358  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1337:1344  player2 */\n      0x01\n      0x00\n        /* \"contracts/MyToken.sol\":1337:1359  player2 = address(0x0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1384:1387  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1370:1387  player1Hash = 0x0 */\n      dup1\n      shl\n        /* \"contracts/MyToken.sol\":1370:1381  player1Hash */\n      0x02\n        /* \"contracts/MyToken.sol\":1370:1387  player1Hash = 0x0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1411:1414  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1397:1414  player2Hash = 0x0 */\n      dup1\n      shl\n        /* \"contracts/MyToken.sol\":1397:1408  player2Hash */\n      0x03\n        /* \"contracts/MyToken.sol\":1397:1414  player2Hash = 0x0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1443:1454  Weapon.None */\n      0x00\n        /* \"contracts/MyToken.sol\":1425:1440  weaponOfPlayer1 */\n      0x01\n      0x14\n        /* \"contracts/MyToken.sol\":1425:1454  weaponOfPlayer1 = Weapon.None */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_61\n      jumpi\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n    tag_61:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1482:1493  Weapon.None */\n      0x00\n        /* \"contracts/MyToken.sol\":1464:1479  weaponOfPlayer2 */\n      0x01\n      0x15\n        /* \"contracts/MyToken.sol\":1464:1493  weaponOfPlayer2 = Weapon.None */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_64\n      jumpi\n      tag_65\n      tag_63\n      jump\t// in\n    tag_65:\n    tag_64:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1512:1529  Stage.FirstCommit */\n      0x00\n        /* \"contracts/MyToken.sol\":1504:1509  stage */\n      0x04\n      0x14\n        /* \"contracts/MyToken.sol\":1504:1529  stage = Stage.FirstCommit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      tag_67\n      tag_63\n      jump\t// in\n    tag_67:\n    tag_66:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":1238:1536  function newGame() public {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":4039:4350  function endgame() public isPlayer {... */\n    tag_29:\n        /* \"contracts/MyToken.sol\":1759:1766  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1755  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n      dup1\n      tag_69\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1784:1791  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1780  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n    tag_69:\n        /* \"contracts/MyToken.sol\":1737:1851  require(msg.sender == player1 || msg.sender == player2,... */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/MyToken.sol\":4101:4117  Stage.FinishGame */\n      0x04\n        /* \"contracts/MyToken.sol\":4092:4117  stage == Stage.FinishGame */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_74\n      jumpi\n      tag_75\n      tag_63\n      jump\t// in\n    tag_75:\n    tag_74:\n        /* \"contracts/MyToken.sol\":4092:4097  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4092:4117  stage == Stage.FinishGame */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_77\n      tag_63\n      jump\t// in\n    tag_77:\n    tag_76:\n      eq\n        /* \"contracts/MyToken.sol\":4084:4137  require(stage == Stage.FinishGame, \"incorrect stage\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/MyToken.sol\":4148:4159  int8 result */\n      0x00\n        /* \"contracts/MyToken.sol\":4167:4170  map */\n      0x05\n        /* \"contracts/MyToken.sol\":4167:4187  map[weaponOfPlayer1] */\n      0x00\n        /* \"contracts/MyToken.sol\":4171:4186  weaponOfPlayer1 */\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4167:4187  map[weaponOfPlayer1] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_81\n      jumpi\n      tag_82\n      tag_63\n      jump\t// in\n    tag_82:\n    tag_81:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      tag_84\n      tag_63\n      jump\t// in\n    tag_84:\n    tag_83:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyToken.sol\":4167:4204  map[weaponOfPlayer1][weaponOfPlayer2] */\n      0x00\n        /* \"contracts/MyToken.sol\":4188:4203  weaponOfPlayer2 */\n      0x01\n      0x15\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4167:4204  map[weaponOfPlayer1][weaponOfPlayer2] */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_63\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x03\n      dup2\n      gt\n      iszero\n      tag_87\n      jumpi\n      tag_88\n      tag_63\n      jump\t// in\n    tag_88:\n    tag_87:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":4148:4205  int8 result = int8(map[weaponOfPlayer1][weaponOfPlayer2]) */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":4238:4239  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":4228:4234  result */\n      dup2\n        /* \"contracts/MyToken.sol\":4228:4239  result == 0 */\n      0x00\n      signextend\n      eq\n        /* \"contracts/MyToken.sol\":4228:4254  result == 0 || result == 1 */\n      dup1\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":4253:4254  1 */\n      0x01\n        /* \"contracts/MyToken.sol\":4243:4249  result */\n      dup2\n        /* \"contracts/MyToken.sol\":4243:4254  result == 1 */\n      0x00\n      signextend\n      eq\n        /* \"contracts/MyToken.sol\":4228:4254  result == 0 || result == 1 */\n    tag_89:\n        /* \"contracts/MyToken.sol\":4224:4344  if (result == 0 || result == 1) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/MyToken.sol\":4279:4286  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":4270:4276  winner */\n      0x04\n      0x00\n        /* \"contracts/MyToken.sol\":4270:4286  winner = player1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":4224:4344  if (result == 0 || result == 1) {... */\n      jump(tag_91)\n    tag_90:\n        /* \"contracts/MyToken.sol\":4326:4333  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":4317:4323  winner */\n      0x04\n      0x00\n        /* \"contracts/MyToken.sol\":4317:4333  winner = player2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":4224:4344  if (result == 0 || result == 1) {... */\n    tag_91:\n        /* \"contracts/MyToken.sol\":4074:4350  {... */\n      pop\n        /* \"contracts/MyToken.sol\":4039:4350  function endgame() public isPlayer {... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":570:596  bytes32 public player1Hash */\n    tag_31:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":3045:4029  function reveal(Weapon weapon, uint32 salt) isPlayer public  ... */\n    tag_37:\n        /* \"contracts/MyToken.sol\":1759:1766  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1755  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n      dup1\n      tag_93\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1784:1791  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1780  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n    tag_93:\n        /* \"contracts/MyToken.sol\":1737:1851  require(msg.sender == player1 || msg.sender == player2,... */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap1\n      tag_72\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/MyToken.sol\":3131:3137  weapon */\n      dup2\n        /* \"contracts/MyToken.sol\":1947:1958  Weapon.Rock */\n      0x01\n        /* \"contracts/MyToken.sol\":1937:1958  weapon == Weapon.Rock */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_97\n      jumpi\n      tag_98\n      tag_63\n      jump\t// in\n    tag_98:\n    tag_97:\n        /* \"contracts/MyToken.sol\":1937:1943  weapon */\n      dup2\n        /* \"contracts/MyToken.sol\":1937:1958  weapon == Weapon.Rock */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_63\n      jump\t// in\n    tag_100:\n    tag_99:\n      eq\n        /* \"contracts/MyToken.sol\":1937:1984  weapon == Weapon.Rock || weapon == Weapon.Paper */\n      dup1\n      tag_101\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1972:1984  Weapon.Paper */\n      0x02\n        /* \"contracts/MyToken.sol\":1962:1984  weapon == Weapon.Paper */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_63\n      jump\t// in\n    tag_103:\n    tag_102:\n        /* \"contracts/MyToken.sol\":1962:1968  weapon */\n      dup2\n        /* \"contracts/MyToken.sol\":1962:1984  weapon == Weapon.Paper */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_104\n      jumpi\n      tag_105\n      tag_63\n      jump\t// in\n    tag_105:\n    tag_104:\n      eq\n        /* \"contracts/MyToken.sol\":1937:1984  weapon == Weapon.Rock || weapon == Weapon.Paper */\n    tag_101:\n        /* \"contracts/MyToken.sol\":1937:2013  weapon == Weapon.Rock || weapon == Weapon.Paper || weapon == Weapon.Scissors */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1998:2013  Weapon.Scissors */\n      0x03\n        /* \"contracts/MyToken.sol\":1988:2013  weapon == Weapon.Scissors */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      tag_108\n      tag_63\n      jump\t// in\n    tag_108:\n    tag_107:\n        /* \"contracts/MyToken.sol\":1988:1994  weapon */\n      dup2\n        /* \"contracts/MyToken.sol\":1988:2013  weapon == Weapon.Scissors */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_109\n      jumpi\n      tag_110\n      tag_63\n      jump\t// in\n    tag_110:\n    tag_109:\n      eq\n        /* \"contracts/MyToken.sol\":1937:2013  weapon == Weapon.Rock || weapon == Weapon.Paper || weapon == Weapon.Scissors */\n    tag_106:\n        /* \"contracts/MyToken.sol\":1929:2032  require(weapon == Weapon.Rock || weapon == Weapon.Paper || weapon == Weapon.Scissors, \"invalid weapon\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/MyToken.sol\":3170:3187  Stage.FirstReveal */\n      0x02\n        /* \"contracts/MyToken.sol\":3161:3187  stage == Stage.FirstReveal */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_115\n      jumpi\n      tag_116\n      tag_63\n      jump\t// in\n    tag_116:\n    tag_115:\n        /* \"contracts/MyToken.sol\":3161:3166  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":3161:3187  stage == Stage.FirstReveal */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_117\n      jumpi\n      tag_118\n      tag_63\n      jump\t// in\n    tag_118:\n    tag_117:\n      eq\n        /* \"contracts/MyToken.sol\":3161:3218  stage == Stage.FirstReveal || stage == Stage.SecondReveal */\n      dup1\n      tag_119\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":3200:3218  Stage.SecondReveal */\n      0x03\n        /* \"contracts/MyToken.sol\":3191:3218  stage == Stage.SecondReveal */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_63\n      jump\t// in\n    tag_121:\n    tag_120:\n        /* \"contracts/MyToken.sol\":3191:3196  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":3191:3218  stage == Stage.SecondReveal */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_63\n      jump\t// in\n    tag_123:\n    tag_122:\n      eq\n        /* \"contracts/MyToken.sol\":3161:3218  stage == Stage.FirstReveal || stage == Stage.SecondReveal */\n    tag_119:\n        /* \"contracts/MyToken.sol\":3153:3238  require(stage == Stage.FirstReveal || stage == Stage.SecondReveal, \"incorrect stage\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_80\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/MyToken.sol\":3249:3271  bytes32 calculatedHash */\n      0x00\n        /* \"contracts/MyToken.sol\":3274:3435  sha256(... */\n      0x02\n        /* \"contracts/MyToken.sol\":3330:3363  Strings.toString(uint256(weapon)) */\n      tag_126\n        /* \"contracts/MyToken.sol\":3355:3361  weapon */\n      dup6\n        /* \"contracts/MyToken.sol\":3347:3362  uint256(weapon) */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_127\n      jumpi\n      tag_128\n      tag_63\n      jump\t// in\n    tag_128:\n    tag_127:\n        /* \"contracts/MyToken.sol\":3330:3346  Strings.toString */\n      tag_129\n        /* \"contracts/MyToken.sol\":3330:3363  Strings.toString(uint256(weapon)) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/MyToken.sol\":3388:3410  Strings.toString(salt) */\n      tag_130\n        /* \"contracts/MyToken.sol\":3405:3409  salt */\n      dup6\n        /* \"contracts/MyToken.sol\":3388:3410  Strings.toString(salt) */\n      0xffffffff\n      and\n        /* \"contracts/MyToken.sol\":3388:3404  Strings.toString */\n      tag_129\n        /* \"contracts/MyToken.sol\":3388:3410  Strings.toString(salt) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/MyToken.sol\":3294:3425  bytes.concat(... */\n      add(0x20, mload(0x40))\n      tag_131\n      swap3\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyToken.sol\":3274:3435  sha256(... */\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"contracts/MyToken.sol\":3249:3435  bytes32 calculatedHash = sha256(... */\n      swap1\n      pop\n        /* \"contracts/MyToken.sol\":3460:3471  Weapon.None */\n      0x00\n        /* \"contracts/MyToken.sol\":3450:3471  weapon == Weapon.None */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_63\n      jump\t// in\n    tag_140:\n    tag_139:\n        /* \"contracts/MyToken.sol\":3450:3456  weapon */\n      dup5\n        /* \"contracts/MyToken.sol\":3450:3471  weapon == Weapon.None */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n      tag_142\n      tag_63\n      jump\t// in\n    tag_142:\n    tag_141:\n      sub\n        /* \"contracts/MyToken.sol\":3446:3524  if (weapon == Weapon.None) {... */\n      tag_143\n      jumpi\n        /* \"contracts/MyToken.sol\":3487:3513  revert(\"incorrect weapon\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken.sol\":3446:3524  if (weapon == Weapon.None) {... */\n    tag_143:\n        /* \"contracts/MyToken.sol\":3552:3559  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":3538:3559  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":3538:3548  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3538:3559  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":3538:3612  msg.sender == player1... */\n      dup1\n      iszero\n      tag_146\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":3601:3612  player1Hash */\n      sload(0x02)\n        /* \"contracts/MyToken.sol\":3583:3597  calculatedHash */\n      dup2\n        /* \"contracts/MyToken.sol\":3583:3612  calculatedHash == player1Hash */\n      eq\n        /* \"contracts/MyToken.sol\":3538:3612  msg.sender == player1... */\n    tag_146:\n        /* \"contracts/MyToken.sol\":3534:4023  if (msg.sender == player1... */\n      iszero\n      tag_147\n      jumpi\n        /* \"contracts/MyToken.sol\":3646:3652  weapon */\n      dup4\n        /* \"contracts/MyToken.sol\":3628:3643  weaponOfPlayer1 */\n      0x01\n      0x14\n        /* \"contracts/MyToken.sol\":3628:3652  weaponOfPlayer1 = weapon */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_63\n      jump\t// in\n    tag_149:\n    tag_148:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":3671:3697  Reveal(msg.sender, weapon) */\n      0x79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b\n        /* \"contracts/MyToken.sol\":3678:3688  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3690:3696  weapon */\n      dup6\n        /* \"contracts/MyToken.sol\":3671:3697  Reveal(msg.sender, weapon) */\n      mload(0x40)\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken.sol\":3719:3737  Stage.SecondReveal */\n      0x03\n        /* \"contracts/MyToken.sol\":3711:3716  stage */\n      0x04\n      0x14\n        /* \"contracts/MyToken.sol\":3711:3737  stage = Stage.SecondReveal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_153\n      tag_63\n      jump\t// in\n    tag_153:\n    tag_152:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":3534:4023  if (msg.sender == player1... */\n      jump(tag_154)\n    tag_147:\n        /* \"contracts/MyToken.sol\":3772:3779  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":3758:3779  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":3758:3768  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3758:3779  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":3758:3832  msg.sender == player2... */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":3821:3832  player2Hash */\n      sload(0x03)\n        /* \"contracts/MyToken.sol\":3803:3817  calculatedHash */\n      dup2\n        /* \"contracts/MyToken.sol\":3803:3832  calculatedHash == player2Hash */\n      eq\n        /* \"contracts/MyToken.sol\":3758:3832  msg.sender == player2... */\n    tag_155:\n        /* \"contracts/MyToken.sol\":3754:4023  if (msg.sender == player2... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/MyToken.sol\":3866:3872  weapon */\n      dup4\n        /* \"contracts/MyToken.sol\":3848:3863  weaponOfPlayer2 */\n      0x01\n      0x15\n        /* \"contracts/MyToken.sol\":3848:3872  weaponOfPlayer2 = weapon */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_157\n      jumpi\n      tag_158\n      tag_63\n      jump\t// in\n    tag_158:\n    tag_157:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":3891:3917  Reveal(msg.sender, weapon) */\n      0x79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b\n        /* \"contracts/MyToken.sol\":3898:3908  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":3910:3916  weapon */\n      dup6\n        /* \"contracts/MyToken.sol\":3891:3917  Reveal(msg.sender, weapon) */\n      mload(0x40)\n      tag_159\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken.sol\":3939:3955  Stage.FinishGame */\n      0x04\n        /* \"contracts/MyToken.sol\":3931:3936  stage */\n      dup1\n      0x14\n        /* \"contracts/MyToken.sol\":3931:3955  stage = Stage.FinishGame */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_161\n      tag_63\n      jump\t// in\n    tag_161:\n    tag_160:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":3754:4023  if (msg.sender == player2... */\n      jump(tag_162)\n    tag_156:\n        /* \"contracts/MyToken.sol\":3986:4012  revert(\"incorrect weapon\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_145\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken.sol\":3754:4023  if (msg.sender == player2... */\n    tag_162:\n        /* \"contracts/MyToken.sol\":3534:4023  if (msg.sender == player1... */\n    tag_154:\n        /* \"contracts/MyToken.sol\":3143:4029  {... */\n      pop\n        /* \"contracts/MyToken.sol\":1861:1862  _ */\n      pop\n        /* \"contracts/MyToken.sol\":3045:4029  function reveal(Weapon weapon, uint32 salt) isPlayer public  ... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2233:2435  function join() isAlreadyIn external... */\n    tag_39:\n        /* \"contracts/MyToken.sol\":2124:2131  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2110:2131  msg.sender != player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2110:2120  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2110:2131  msg.sender != player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyToken.sol\":2110:2172  msg.sender != player1 &&... */\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":2165:2172  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2151:2172  msg.sender != player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2151:2161  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2151:2172  msg.sender != player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyToken.sol\":2110:2172  msg.sender != player1 &&... */\n    tag_165:\n        /* \"contracts/MyToken.sol\":2089:2182  require(... */\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n        /* \"contracts/MyToken.sol\":1605:1606  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1586:1607  player1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1586:1593  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1586:1607  player1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1586:1632  player1 == address(0) || player2 == address(0) */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1630:1631  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":1611:1632  player2 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1611:1618  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1611:1632  player2 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1586:1632  player1 == address(0) || player2 == address(0) */\n    tag_168:\n        /* \"contracts/MyToken.sol\":1578:1679  require(player1 == address(0) || player2 == address(0),... */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/MyToken.sol\":2328:2329  0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2309:2330  player1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2309:2316  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2309:2330  player1 == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyToken.sol\":2305:2428  if (player1 == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"contracts/MyToken.sol\":2356:2366  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2346:2353  player1 */\n      0x00\n      dup1\n        /* \"contracts/MyToken.sol\":2346:2366  player1 = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2305:2428  if (player1 == address(0)) {... */\n      jump(tag_174)\n    tag_173:\n        /* \"contracts/MyToken.sol\":2418:2428  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2408:2415  player2 */\n      0x01\n      0x00\n        /* \"contracts/MyToken.sol\":2408:2428  player2 = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2305:2428  if (player1 == address(0)) {... */\n    tag_174:\n        /* \"contracts/MyToken.sol\":2233:2435  function join() isAlreadyIn external... */\n      jump\t// out\n        /* \"contracts/MyToken.sol\":663:701  Stage public stage = Stage.FirstCommit */\n    tag_41:\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":444:466  address public player1 */\n    tag_45:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":500:529  Weapon public weaponOfPlayer1 */\n    tag_48:\n      0x01\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":635:656  address public winner */\n    tag_51:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":602:628  bytes32 public player2Hash */\n    tag_54:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/MyToken.sol\":2445:3039  function makeChoice(bytes32 hash) isPlayer public {... */\n    tag_59:\n        /* \"contracts/MyToken.sol\":1759:1766  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1745:1755  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1745:1766  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n      dup1\n      tag_176\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":1784:1791  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":1770:1780  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":1770:1791  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":1745:1791  msg.sender == player1 || msg.sender == player2 */\n    tag_176:\n        /* \"contracts/MyToken.sol\":1737:1851  require(msg.sender == player1 || msg.sender == player2,... */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_72\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"contracts/MyToken.sol\":2522:2539  Stage.FirstCommit */\n      0x00\n        /* \"contracts/MyToken.sol\":2513:2539  stage == Stage.FirstCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_63\n      jump\t// in\n    tag_181:\n    tag_180:\n        /* \"contracts/MyToken.sol\":2513:2518  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":2513:2539  stage == Stage.FirstCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_63\n      jump\t// in\n    tag_183:\n    tag_182:\n      eq\n        /* \"contracts/MyToken.sol\":2513:2570  stage == Stage.FirstCommit || stage == Stage.SecondCommit */\n      dup1\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":2552:2570  Stage.SecondCommit */\n      0x01\n        /* \"contracts/MyToken.sol\":2543:2570  stage == Stage.SecondCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_63\n      jump\t// in\n    tag_186:\n    tag_185:\n        /* \"contracts/MyToken.sol\":2543:2548  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":2543:2570  stage == Stage.SecondCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_63\n      jump\t// in\n    tag_188:\n    tag_187:\n      eq\n        /* \"contracts/MyToken.sol\":2513:2570  stage == Stage.FirstCommit || stage == Stage.SecondCommit */\n    tag_184:\n        /* \"contracts/MyToken.sol\":2505:2571  require(stage == Stage.FirstCommit || stage == Stage.SecondCommit) */\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n        /* \"contracts/MyToken.sol\":2600:2607  player1 */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2586:2607  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2586:2596  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2586:2607  msg.sender == player1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":2586:2653  msg.sender == player1... */\n      dup1\n      iszero\n      tag_190\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":2650:2653  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2635:2653  player1Hash == 0x0 */\n      dup1\n      shl\n        /* \"contracts/MyToken.sol\":2635:2646  player1Hash */\n      sload(0x02)\n        /* \"contracts/MyToken.sol\":2635:2653  player1Hash == 0x0 */\n      eq\n        /* \"contracts/MyToken.sol\":2586:2653  msg.sender == player1... */\n    tag_190:\n        /* \"contracts/MyToken.sol\":2582:2890  if (msg.sender == player1... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/MyToken.sol\":2683:2687  hash */\n      dup1\n        /* \"contracts/MyToken.sol\":2669:2680  player1Hash */\n      0x02\n        /* \"contracts/MyToken.sol\":2669:2687  player1Hash = hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2582:2890  if (msg.sender == player1... */\n      jump(tag_192)\n    tag_191:\n        /* \"contracts/MyToken.sol\":2722:2729  player2 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2708:2729  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyToken.sol\":2708:2718  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2708:2729  msg.sender == player2 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyToken.sol\":2708:2775  msg.sender == player2... */\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n        /* \"contracts/MyToken.sol\":2772:2775  0x0 */\n      0x00\n        /* \"contracts/MyToken.sol\":2757:2775  player2Hash == 0x0 */\n      dup1\n      shl\n        /* \"contracts/MyToken.sol\":2757:2768  player2Hash */\n      sload(0x03)\n        /* \"contracts/MyToken.sol\":2757:2775  player2Hash == 0x0 */\n      eq\n        /* \"contracts/MyToken.sol\":2708:2775  msg.sender == player2... */\n    tag_193:\n        /* \"contracts/MyToken.sol\":2704:2890  if (msg.sender == player2... */\n      iszero\n      tag_194\n      jumpi\n        /* \"contracts/MyToken.sol\":2805:2809  hash */\n      dup1\n        /* \"contracts/MyToken.sol\":2791:2802  player2Hash */\n      0x03\n        /* \"contracts/MyToken.sol\":2791:2809  player2Hash = hash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2704:2890  if (msg.sender == player2... */\n      jump(tag_195)\n    tag_194:\n        /* \"contracts/MyToken.sol\":2840:2879  revert(\"Players have already commited\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyToken.sol\":2704:2890  if (msg.sender == player2... */\n    tag_195:\n        /* \"contracts/MyToken.sol\":2582:2890  if (msg.sender == player1... */\n    tag_192:\n        /* \"contracts/MyToken.sol\":2905:2923  Commit(msg.sender) */\n      0x599481bd81d46ea2372b7f45ab8900ac58961566f184806290d9ede4e0fc7641\n        /* \"contracts/MyToken.sol\":2912:2922  msg.sender */\n      caller\n        /* \"contracts/MyToken.sol\":2905:2923  Commit(msg.sender) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/MyToken.sol\":2946:2963  Stage.FirstCommit */\n      0x00\n        /* \"contracts/MyToken.sol\":2937:2963  stage == Stage.FirstCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_200\n      tag_63\n      jump\t// in\n    tag_200:\n    tag_199:\n        /* \"contracts/MyToken.sol\":2937:2942  stage */\n      0x04\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyToken.sol\":2937:2963  stage == Stage.FirstCommit */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_63\n      jump\t// in\n    tag_202:\n    tag_201:\n      sub\n        /* \"contracts/MyToken.sol\":2934:3032  if(stage == Stage.FirstCommit) stage = Stage.SecondCommit;... */\n      tag_203\n      jumpi\n        /* \"contracts/MyToken.sol\":2973:2991  Stage.SecondCommit */\n      0x01\n        /* \"contracts/MyToken.sol\":2965:2970  stage */\n      0x04\n      0x14\n        /* \"contracts/MyToken.sol\":2965:2991  stage = Stage.SecondCommit */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_204\n      jumpi\n      tag_205\n      tag_63\n      jump\t// in\n    tag_205:\n    tag_204:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2934:3032  if(stage == Stage.FirstCommit) stage = Stage.SecondCommit;... */\n      jump(tag_206)\n    tag_203:\n        /* \"contracts/MyToken.sol\":3015:3032  Stage.FirstReveal */\n      0x02\n        /* \"contracts/MyToken.sol\":3007:3012  stage */\n      0x04\n      0x14\n        /* \"contracts/MyToken.sol\":3007:3032  stage = Stage.FirstReveal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_207\n      jumpi\n      tag_208\n      tag_63\n      jump\t// in\n    tag_208:\n    tag_207:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyToken.sol\":2934:3032  if(stage == Stage.FirstCommit) stage = Stage.SecondCommit;... */\n    tag_206:\n        /* \"contracts/MyToken.sol\":2445:3039  function makeChoice(bytes32 hash) isPlayer public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":471:484  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:534  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":557:558  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      tag_210\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":548:553  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:547  Math.log10 */\n      tag_211\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:554  Math.log10(value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":537:558  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":520:558  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:592  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":606:612  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":595:613  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_215\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_215:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":572:613  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:638  uint256 ptr */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":753:759  length */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":749:751  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":745:760  add(32, length) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":737:743  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":733:761  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":726:761  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:799  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":819:824  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":958:966  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":946:951  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":942:956  mod(value, 10) */\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":937:967  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:935  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":924:968  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1012:1014  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1003:1014  value /= 10 */\n      dup6\n      dup2\n      tag_218\n      jumpi\n      tag_219\n      tag_220\n      jump\t// in\n    tag_219:\n    tag_218:\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1045:1046  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1041  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1036:1046  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n      tag_216\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1032:1053  if (value == 0) break */\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":788:1068  while (true) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1088:1094  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1081:1094  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":415:1111  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9942:9949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9975  uint256 result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9978:9979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9961:9979  uint256 result = 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10026:10032  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10022  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10017:10032  value >= 10**64 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10061:10067  10**64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10052:10067  value /= 10**64 */\n      dup4\n      dup2\n      tag_224\n      jumpi\n      tag_225\n      tag_220\n      jump\t// in\n    tag_225:\n    tag_224:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10095:10097  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10085:10097  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10013:10112  if (value >= 10**64) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10138:10144  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10134  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10129:10144  value >= 10**32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10173:10179  10**32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10164:10179  value /= 10**32 */\n      dup4\n      dup2\n      tag_227\n      jumpi\n      tag_228\n      tag_220\n      jump\t// in\n    tag_228:\n    tag_227:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10207:10209  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10197:10209  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10125:10224  if (value >= 10**32) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10250:10256  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10246  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10241:10256  value >= 10**16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10285:10291  10**16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10276:10291  value /= 10**16 */\n      dup4\n      dup2\n      tag_230\n      jumpi\n      tag_231\n      tag_220\n      jump\t// in\n    tag_231:\n    tag_230:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10319:10321  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10309:10321  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10237:10336  if (value >= 10**16) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10362:10367  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10358  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10353:10367  value >= 10**8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10396:10401  10**8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10387:10401  value /= 10**8 */\n      dup4\n      dup2\n      tag_233\n      jumpi\n      tag_234\n      tag_220\n      jump\t// in\n    tag_234:\n    tag_233:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10429:10430  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10419:10430  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10349:10445  if (value >= 10**8) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10471:10476  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10467  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10462:10476  value >= 10**4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10505:10510  10**4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10496:10510  value /= 10**4 */\n      dup4\n      dup2\n      tag_236\n      jumpi\n      tag_237\n      tag_220\n      jump\t// in\n    tag_237:\n    tag_236:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10538:10539  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10528:10539  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10458:10554  if (value >= 10**4) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10580:10585  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10576  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10571:10585  value >= 10**2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10614:10619  10**2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10605:10619  value /= 10**2 */\n      dup4\n      dup2\n      tag_239\n      jumpi\n      tag_240\n      tag_220\n      jump\t// in\n    tag_240:\n    tag_239:\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10647:10648  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10637:10648  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10567:10663  if (value >= 10**2) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10689:10694  10**1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10685  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10680:10694  value >= 10**1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10724:10725  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10714:10725  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10676:10740  if (value >= 10**1) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10766:10772  result */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":10759:10772  return result */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":9889:10779  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:187   */\n    tag_63:\n        /* \"#utility.yul\":55:132   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":52:53   */\n      0x00\n        /* \"#utility.yul\":45:133   */\n      mstore\n        /* \"#utility.yul\":152:156   */\n      0x21\n        /* \"#utility.yul\":149:150   */\n      0x04\n        /* \"#utility.yul\":142:157   */\n      mstore\n        /* \"#utility.yul\":176:180   */\n      0x24\n        /* \"#utility.yul\":173:174   */\n      0x00\n        /* \"#utility.yul\":166:181   */\n      revert\n        /* \"#utility.yul\":193:309   */\n    tag_242:\n        /* \"#utility.yul\":277:278   */\n      0x04\n        /* \"#utility.yul\":270:275   */\n      dup2\n        /* \"#utility.yul\":267:279   */\n      lt\n        /* \"#utility.yul\":257:303   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":283:301   */\n      tag_287\n      tag_63\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":257:303   */\n    tag_286:\n        /* \"#utility.yul\":193:309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":315:448   */\n    tag_243:\n        /* \"#utility.yul\":363:370   */\n      0x00\n        /* \"#utility.yul\":392:397   */\n      dup2\n        /* \"#utility.yul\":381:397   */\n      swap1\n      pop\n        /* \"#utility.yul\":398:442   */\n      tag_289\n        /* \"#utility.yul\":436:441   */\n      dup3\n        /* \"#utility.yul\":398:442   */\n      tag_242\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":315:448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":454:587   */\n    tag_244:\n        /* \"#utility.yul\":513:522   */\n      0x00\n        /* \"#utility.yul\":546:581   */\n      tag_291\n        /* \"#utility.yul\":575:580   */\n      dup3\n        /* \"#utility.yul\":546:581   */\n      tag_243\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":533:581   */\n      swap1\n      pop\n        /* \"#utility.yul\":454:587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:742   */\n    tag_245:\n        /* \"#utility.yul\":689:735   */\n      tag_293\n        /* \"#utility.yul\":729:734   */\n      dup2\n        /* \"#utility.yul\":689:735   */\n      tag_244\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":684:687   */\n      dup3\n        /* \"#utility.yul\":677:736   */\n      mstore\n        /* \"#utility.yul\":593:742   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":748:988   */\n    tag_21:\n        /* \"#utility.yul\":850:854   */\n      0x00\n        /* \"#utility.yul\":888:890   */\n      0x20\n        /* \"#utility.yul\":877:886   */\n      dup3\n        /* \"#utility.yul\":873:891   */\n      add\n        /* \"#utility.yul\":865:891   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:981   */\n      tag_295\n        /* \"#utility.yul\":978:979   */\n      0x00\n        /* \"#utility.yul\":967:976   */\n      dup4\n        /* \"#utility.yul\":963:980   */\n      add\n        /* \"#utility.yul\":954:960   */\n      dup5\n        /* \"#utility.yul\":901:981   */\n      tag_245\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":748:988   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":994:1120   */\n    tag_246:\n        /* \"#utility.yul\":1031:1038   */\n      0x00\n        /* \"#utility.yul\":1071:1113   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1064:1069   */\n      dup3\n        /* \"#utility.yul\":1060:1114   */\n      and\n        /* \"#utility.yul\":1049:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":994:1120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1126:1222   */\n    tag_247:\n        /* \"#utility.yul\":1163:1170   */\n      0x00\n        /* \"#utility.yul\":1192:1216   */\n      tag_298\n        /* \"#utility.yul\":1210:1215   */\n      dup3\n        /* \"#utility.yul\":1192:1216   */\n      tag_246\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1181:1216   */\n      swap1\n      pop\n        /* \"#utility.yul\":1126:1222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1346   */\n    tag_248:\n        /* \"#utility.yul\":1315:1339   */\n      tag_300\n        /* \"#utility.yul\":1333:1338   */\n      dup2\n        /* \"#utility.yul\":1315:1339   */\n      tag_247\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1310:1313   */\n      dup3\n        /* \"#utility.yul\":1303:1340   */\n      mstore\n        /* \"#utility.yul\":1228:1346   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1574   */\n    tag_25:\n        /* \"#utility.yul\":1445:1449   */\n      0x00\n        /* \"#utility.yul\":1483:1485   */\n      0x20\n        /* \"#utility.yul\":1472:1481   */\n      dup3\n        /* \"#utility.yul\":1468:1486   */\n      add\n        /* \"#utility.yul\":1460:1486   */\n      swap1\n      pop\n        /* \"#utility.yul\":1496:1567   */\n      tag_302\n        /* \"#utility.yul\":1564:1565   */\n      0x00\n        /* \"#utility.yul\":1553:1562   */\n      dup4\n        /* \"#utility.yul\":1549:1566   */\n      add\n        /* \"#utility.yul\":1540:1546   */\n      dup5\n        /* \"#utility.yul\":1496:1567   */\n      tag_248\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1352:1574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1580:1657   */\n    tag_249:\n        /* \"#utility.yul\":1617:1624   */\n      0x00\n        /* \"#utility.yul\":1646:1651   */\n      dup2\n        /* \"#utility.yul\":1635:1651   */\n      swap1\n      pop\n        /* \"#utility.yul\":1580:1657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1663:1781   */\n    tag_250:\n        /* \"#utility.yul\":1750:1774   */\n      tag_305\n        /* \"#utility.yul\":1768:1773   */\n      dup2\n        /* \"#utility.yul\":1750:1774   */\n      tag_249\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":1745:1748   */\n      dup3\n        /* \"#utility.yul\":1738:1775   */\n      mstore\n        /* \"#utility.yul\":1663:1781   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1787:2009   */\n    tag_33:\n        /* \"#utility.yul\":1880:1884   */\n      0x00\n        /* \"#utility.yul\":1918:1920   */\n      0x20\n        /* \"#utility.yul\":1907:1916   */\n      dup3\n        /* \"#utility.yul\":1903:1921   */\n      add\n        /* \"#utility.yul\":1895:1921   */\n      swap1\n      pop\n        /* \"#utility.yul\":1931:2002   */\n      tag_307\n        /* \"#utility.yul\":1999:2000   */\n      0x00\n        /* \"#utility.yul\":1988:1997   */\n      dup4\n        /* \"#utility.yul\":1984:2001   */\n      add\n        /* \"#utility.yul\":1975:1981   */\n      dup5\n        /* \"#utility.yul\":1931:2002   */\n      tag_250\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1787:2009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2096:2213   */\n    tag_252:\n        /* \"#utility.yul\":2205:2206   */\n      0x00\n        /* \"#utility.yul\":2202:2203   */\n      dup1\n        /* \"#utility.yul\":2195:2207   */\n      revert\n        /* \"#utility.yul\":2342:2452   */\n    tag_254:\n        /* \"#utility.yul\":2426:2427   */\n      0x04\n        /* \"#utility.yul\":2419:2424   */\n      dup2\n        /* \"#utility.yul\":2416:2428   */\n      lt\n        /* \"#utility.yul\":2406:2446   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2439:2440   */\n      dup1\n        /* \"#utility.yul\":2432:2444   */\n      revert\n        /* \"#utility.yul\":2406:2446   */\n    tag_312:\n        /* \"#utility.yul\":2342:2452   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2458:2619   */\n    tag_255:\n        /* \"#utility.yul\":2515:2520   */\n      0x00\n        /* \"#utility.yul\":2553:2559   */\n      dup2\n        /* \"#utility.yul\":2540:2560   */\n      calldataload\n        /* \"#utility.yul\":2531:2560   */\n      swap1\n      pop\n        /* \"#utility.yul\":2569:2613   */\n      tag_314\n        /* \"#utility.yul\":2607:2612   */\n      dup2\n        /* \"#utility.yul\":2569:2613   */\n      tag_254\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2458:2619   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2625:2718   */\n    tag_256:\n        /* \"#utility.yul\":2661:2668   */\n      0x00\n        /* \"#utility.yul\":2701:2711   */\n      0xffffffff\n        /* \"#utility.yul\":2694:2699   */\n      dup3\n        /* \"#utility.yul\":2690:2712   */\n      and\n        /* \"#utility.yul\":2679:2712   */\n      swap1\n      pop\n        /* \"#utility.yul\":2625:2718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2724:2844   */\n    tag_257:\n        /* \"#utility.yul\":2796:2819   */\n      tag_317\n        /* \"#utility.yul\":2813:2818   */\n      dup2\n        /* \"#utility.yul\":2796:2819   */\n      tag_256\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2789:2794   */\n      dup2\n        /* \"#utility.yul\":2786:2820   */\n      eq\n        /* \"#utility.yul\":2776:2838   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":2834:2835   */\n      0x00\n        /* \"#utility.yul\":2831:2832   */\n      dup1\n        /* \"#utility.yul\":2824:2836   */\n      revert\n        /* \"#utility.yul\":2776:2838   */\n    tag_318:\n        /* \"#utility.yul\":2724:2844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2850:2987   */\n    tag_258:\n        /* \"#utility.yul\":2895:2900   */\n      0x00\n        /* \"#utility.yul\":2933:2939   */\n      dup2\n        /* \"#utility.yul\":2920:2940   */\n      calldataload\n        /* \"#utility.yul\":2911:2940   */\n      swap1\n      pop\n        /* \"#utility.yul\":2949:2981   */\n      tag_320\n        /* \"#utility.yul\":2975:2980   */\n      dup2\n        /* \"#utility.yul\":2949:2981   */\n      tag_257\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2850:2987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2993:3487   */\n    tag_36:\n        /* \"#utility.yul\":3071:3077   */\n      0x00\n        /* \"#utility.yul\":3079:3085   */\n      dup1\n        /* \"#utility.yul\":3128:3130   */\n      0x40\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3107:3114   */\n      dup6\n        /* \"#utility.yul\":3103:3126   */\n      sub\n        /* \"#utility.yul\":3099:3131   */\n      slt\n        /* \"#utility.yul\":3096:3215   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3134:3213   */\n      tag_323\n      tag_252\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3096:3215   */\n    tag_322:\n        /* \"#utility.yul\":3254:3255   */\n      0x00\n        /* \"#utility.yul\":3279:3343   */\n      tag_324\n        /* \"#utility.yul\":3335:3342   */\n      dup6\n        /* \"#utility.yul\":3326:3332   */\n      dup3\n        /* \"#utility.yul\":3315:3324   */\n      dup7\n        /* \"#utility.yul\":3311:3333   */\n      add\n        /* \"#utility.yul\":3279:3343   */\n      tag_255\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3269:3343   */\n      swap3\n      pop\n        /* \"#utility.yul\":3225:3353   */\n      pop\n        /* \"#utility.yul\":3392:3394   */\n      0x20\n        /* \"#utility.yul\":3418:3470   */\n      tag_325\n        /* \"#utility.yul\":3462:3469   */\n      dup6\n        /* \"#utility.yul\":3453:3459   */\n      dup3\n        /* \"#utility.yul\":3442:3451   */\n      dup7\n        /* \"#utility.yul\":3438:3460   */\n      add\n        /* \"#utility.yul\":3418:3470   */\n      tag_258\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3408:3470   */\n      swap2\n      pop\n        /* \"#utility.yul\":3363:3480   */\n      pop\n        /* \"#utility.yul\":2993:3487   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3608   */\n    tag_259:\n        /* \"#utility.yul\":3576:3577   */\n      0x05\n        /* \"#utility.yul\":3569:3574   */\n      dup2\n        /* \"#utility.yul\":3566:3578   */\n      lt\n        /* \"#utility.yul\":3556:3602   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":3582:3600   */\n      tag_328\n      tag_63\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3556:3602   */\n    tag_327:\n        /* \"#utility.yul\":3493:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3745   */\n    tag_260:\n        /* \"#utility.yul\":3661:3668   */\n      0x00\n        /* \"#utility.yul\":3690:3695   */\n      dup2\n        /* \"#utility.yul\":3679:3695   */\n      swap1\n      pop\n        /* \"#utility.yul\":3696:3739   */\n      tag_330\n        /* \"#utility.yul\":3733:3738   */\n      dup3\n        /* \"#utility.yul\":3696:3739   */\n      tag_259\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3614:3745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3751:3882   */\n    tag_261:\n        /* \"#utility.yul\":3809:3818   */\n      0x00\n        /* \"#utility.yul\":3842:3876   */\n      tag_332\n        /* \"#utility.yul\":3870:3875   */\n      dup3\n        /* \"#utility.yul\":3842:3876   */\n      tag_260\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3829:3876   */\n      swap1\n      pop\n        /* \"#utility.yul\":3751:3882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3888:4035   */\n    tag_262:\n        /* \"#utility.yul\":3983:4028   */\n      tag_334\n        /* \"#utility.yul\":4022:4027   */\n      dup2\n        /* \"#utility.yul\":3983:4028   */\n      tag_261\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3978:3981   */\n      dup3\n        /* \"#utility.yul\":3971:4029   */\n      mstore\n        /* \"#utility.yul\":3888:4035   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4041:4279   */\n    tag_43:\n        /* \"#utility.yul\":4142:4146   */\n      0x00\n        /* \"#utility.yul\":4180:4182   */\n      0x20\n        /* \"#utility.yul\":4169:4178   */\n      dup3\n        /* \"#utility.yul\":4165:4183   */\n      add\n        /* \"#utility.yul\":4157:4183   */\n      swap1\n      pop\n        /* \"#utility.yul\":4193:4272   */\n      tag_336\n        /* \"#utility.yul\":4269:4270   */\n      0x00\n        /* \"#utility.yul\":4258:4267   */\n      dup4\n        /* \"#utility.yul\":4254:4271   */\n      add\n        /* \"#utility.yul\":4245:4251   */\n      dup5\n        /* \"#utility.yul\":4193:4272   */\n      tag_262\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4041:4279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4285:4407   */\n    tag_263:\n        /* \"#utility.yul\":4358:4382   */\n      tag_338\n        /* \"#utility.yul\":4376:4381   */\n      dup2\n        /* \"#utility.yul\":4358:4382   */\n      tag_249\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4351:4356   */\n      dup2\n        /* \"#utility.yul\":4348:4383   */\n      eq\n        /* \"#utility.yul\":4338:4401   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":4397:4398   */\n      0x00\n        /* \"#utility.yul\":4394:4395   */\n      dup1\n        /* \"#utility.yul\":4387:4399   */\n      revert\n        /* \"#utility.yul\":4338:4401   */\n    tag_339:\n        /* \"#utility.yul\":4285:4407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4413:4552   */\n    tag_264:\n        /* \"#utility.yul\":4459:4464   */\n      0x00\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4484:4504   */\n      calldataload\n        /* \"#utility.yul\":4475:4504   */\n      swap1\n      pop\n        /* \"#utility.yul\":4513:4546   */\n      tag_341\n        /* \"#utility.yul\":4540:4545   */\n      dup2\n        /* \"#utility.yul\":4513:4546   */\n      tag_263\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4413:4552   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4887   */\n    tag_58:\n        /* \"#utility.yul\":4617:4623   */\n      0x00\n        /* \"#utility.yul\":4666:4668   */\n      0x20\n        /* \"#utility.yul\":4654:4663   */\n      dup3\n        /* \"#utility.yul\":4645:4652   */\n      dup5\n        /* \"#utility.yul\":4641:4664   */\n      sub\n        /* \"#utility.yul\":4637:4669   */\n      slt\n        /* \"#utility.yul\":4634:4753   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4672:4751   */\n      tag_344\n      tag_252\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4634:4753   */\n    tag_343:\n        /* \"#utility.yul\":4792:4793   */\n      0x00\n        /* \"#utility.yul\":4817:4870   */\n      tag_345\n        /* \"#utility.yul\":4862:4869   */\n      dup5\n        /* \"#utility.yul\":4853:4859   */\n      dup3\n        /* \"#utility.yul\":4842:4851   */\n      dup6\n        /* \"#utility.yul\":4838:4860   */\n      add\n        /* \"#utility.yul\":4817:4870   */\n      tag_264\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4807:4870   */\n      swap2\n      pop\n        /* \"#utility.yul\":4763:4880   */\n      pop\n        /* \"#utility.yul\":4558:4887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4893:5062   */\n    tag_265:\n        /* \"#utility.yul\":4977:4988   */\n      0x00\n        /* \"#utility.yul\":5011:5017   */\n      dup3\n        /* \"#utility.yul\":5006:5009   */\n      dup3\n        /* \"#utility.yul\":4999:5018   */\n      mstore\n        /* \"#utility.yul\":5051:5055   */\n      0x20\n        /* \"#utility.yul\":5046:5049   */\n      dup3\n        /* \"#utility.yul\":5042:5056   */\n      add\n        /* \"#utility.yul\":5027:5056   */\n      swap1\n      pop\n        /* \"#utility.yul\":4893:5062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5068:5248   */\n    tag_266:\n        /* \"#utility.yul\":5208:5240   */\n      0x596f7520617265206e6f7420706c6179696e6720746869732067616d652e0000\n        /* \"#utility.yul\":5204:5205   */\n      0x00\n        /* \"#utility.yul\":5196:5202   */\n      dup3\n        /* \"#utility.yul\":5192:5206   */\n      add\n        /* \"#utility.yul\":5185:5241   */\n      mstore\n        /* \"#utility.yul\":5068:5248   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5254:5620   */\n    tag_267:\n        /* \"#utility.yul\":5396:5399   */\n      0x00\n        /* \"#utility.yul\":5417:5484   */\n      tag_349\n        /* \"#utility.yul\":5481:5483   */\n      0x1e\n        /* \"#utility.yul\":5476:5479   */\n      dup4\n        /* \"#utility.yul\":5417:5484   */\n      tag_265\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5410:5484   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5586   */\n      tag_350\n        /* \"#utility.yul\":5582:5585   */\n      dup3\n        /* \"#utility.yul\":5493:5586   */\n      tag_266\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5611:5613   */\n      0x20\n        /* \"#utility.yul\":5606:5609   */\n      dup3\n        /* \"#utility.yul\":5602:5614   */\n      add\n        /* \"#utility.yul\":5595:5614   */\n      swap1\n      pop\n        /* \"#utility.yul\":5254:5620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5626:6045   */\n    tag_72:\n        /* \"#utility.yul\":5792:5796   */\n      0x00\n        /* \"#utility.yul\":5830:5832   */\n      0x20\n        /* \"#utility.yul\":5819:5828   */\n      dup3\n        /* \"#utility.yul\":5815:5833   */\n      add\n        /* \"#utility.yul\":5807:5833   */\n      swap1\n      pop\n        /* \"#utility.yul\":5879:5888   */\n      dup2\n        /* \"#utility.yul\":5873:5877   */\n      dup2\n        /* \"#utility.yul\":5869:5889   */\n      sub\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5854:5863   */\n      dup4\n        /* \"#utility.yul\":5850:5867   */\n      add\n        /* \"#utility.yul\":5843:5890   */\n      mstore\n        /* \"#utility.yul\":5907:6038   */\n      tag_352\n        /* \"#utility.yul\":6033:6037   */\n      dup2\n        /* \"#utility.yul\":5907:6038   */\n      tag_267\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5899:6038   */\n      swap1\n      pop\n        /* \"#utility.yul\":5626:6045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6216   */\n    tag_268:\n        /* \"#utility.yul\":6191:6208   */\n      0x696e636f72726563742073746167650000000000000000000000000000000000\n        /* \"#utility.yul\":6187:6188   */\n      0x00\n        /* \"#utility.yul\":6179:6185   */\n      dup3\n        /* \"#utility.yul\":6175:6189   */\n      add\n        /* \"#utility.yul\":6168:6209   */\n      mstore\n        /* \"#utility.yul\":6051:6216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6222:6588   */\n    tag_269:\n        /* \"#utility.yul\":6364:6367   */\n      0x00\n        /* \"#utility.yul\":6385:6452   */\n      tag_355\n        /* \"#utility.yul\":6449:6451   */\n      0x0f\n        /* \"#utility.yul\":6444:6447   */\n      dup4\n        /* \"#utility.yul\":6385:6452   */\n      tag_265\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6378:6452   */\n      swap2\n      pop\n        /* \"#utility.yul\":6461:6554   */\n      tag_356\n        /* \"#utility.yul\":6550:6553   */\n      dup3\n        /* \"#utility.yul\":6461:6554   */\n      tag_268\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6579:6581   */\n      0x20\n        /* \"#utility.yul\":6574:6577   */\n      dup3\n        /* \"#utility.yul\":6570:6582   */\n      add\n        /* \"#utility.yul\":6563:6582   */\n      swap1\n      pop\n        /* \"#utility.yul\":6222:6588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6594:7013   */\n    tag_80:\n        /* \"#utility.yul\":6760:6764   */\n      0x00\n        /* \"#utility.yul\":6798:6800   */\n      0x20\n        /* \"#utility.yul\":6787:6796   */\n      dup3\n        /* \"#utility.yul\":6783:6801   */\n      add\n        /* \"#utility.yul\":6775:6801   */\n      swap1\n      pop\n        /* \"#utility.yul\":6847:6856   */\n      dup2\n        /* \"#utility.yul\":6841:6845   */\n      dup2\n        /* \"#utility.yul\":6837:6857   */\n      sub\n        /* \"#utility.yul\":6833:6834   */\n      0x00\n        /* \"#utility.yul\":6822:6831   */\n      dup4\n        /* \"#utility.yul\":6818:6835   */\n      add\n        /* \"#utility.yul\":6811:6858   */\n      mstore\n        /* \"#utility.yul\":6875:7006   */\n      tag_358\n        /* \"#utility.yul\":7001:7005   */\n      dup2\n        /* \"#utility.yul\":6875:7006   */\n      tag_269\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6867:7006   */\n      swap1\n      pop\n        /* \"#utility.yul\":6594:7013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7019:7183   */\n    tag_270:\n        /* \"#utility.yul\":7159:7175   */\n      0x696e76616c696420776561706f6e000000000000000000000000000000000000\n        /* \"#utility.yul\":7155:7156   */\n      0x00\n        /* \"#utility.yul\":7147:7153   */\n      dup3\n        /* \"#utility.yul\":7143:7157   */\n      add\n        /* \"#utility.yul\":7136:7176   */\n      mstore\n        /* \"#utility.yul\":7019:7183   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7189:7555   */\n    tag_271:\n        /* \"#utility.yul\":7331:7334   */\n      0x00\n        /* \"#utility.yul\":7352:7419   */\n      tag_361\n        /* \"#utility.yul\":7416:7418   */\n      0x0e\n        /* \"#utility.yul\":7411:7414   */\n      dup4\n        /* \"#utility.yul\":7352:7419   */\n      tag_265\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7345:7419   */\n      swap2\n      pop\n        /* \"#utility.yul\":7428:7521   */\n      tag_362\n        /* \"#utility.yul\":7517:7520   */\n      dup3\n        /* \"#utility.yul\":7428:7521   */\n      tag_270\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":7546:7548   */\n      0x20\n        /* \"#utility.yul\":7541:7544   */\n      dup3\n        /* \"#utility.yul\":7537:7549   */\n      add\n        /* \"#utility.yul\":7530:7549   */\n      swap1\n      pop\n        /* \"#utility.yul\":7189:7555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7561:7980   */\n    tag_113:\n        /* \"#utility.yul\":7727:7731   */\n      0x00\n        /* \"#utility.yul\":7765:7767   */\n      0x20\n        /* \"#utility.yul\":7754:7763   */\n      dup3\n        /* \"#utility.yul\":7750:7768   */\n      add\n        /* \"#utility.yul\":7742:7768   */\n      swap1\n      pop\n        /* \"#utility.yul\":7814:7823   */\n      dup2\n        /* \"#utility.yul\":7808:7812   */\n      dup2\n        /* \"#utility.yul\":7804:7824   */\n      sub\n        /* \"#utility.yul\":7800:7801   */\n      0x00\n        /* \"#utility.yul\":7789:7798   */\n      dup4\n        /* \"#utility.yul\":7785:7802   */\n      add\n        /* \"#utility.yul\":7778:7825   */\n      mstore\n        /* \"#utility.yul\":7842:7973   */\n      tag_364\n        /* \"#utility.yul\":7968:7972   */\n      dup2\n        /* \"#utility.yul\":7842:7973   */\n      tag_271\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":7834:7973   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7986:8084   */\n    tag_272:\n        /* \"#utility.yul\":8037:8043   */\n      0x00\n        /* \"#utility.yul\":8071:8076   */\n      dup2\n        /* \"#utility.yul\":8065:8077   */\n      mload\n        /* \"#utility.yul\":8055:8077   */\n      swap1\n      pop\n        /* \"#utility.yul\":7986:8084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8237   */\n    tag_273:\n        /* \"#utility.yul\":8191:8202   */\n      0x00\n        /* \"#utility.yul\":8228:8231   */\n      dup2\n        /* \"#utility.yul\":8213:8231   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8237   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8243:8489   */\n    tag_274:\n        /* \"#utility.yul\":8324:8325   */\n      0x00\n        /* \"#utility.yul\":8334:8447   */\n    tag_368:\n        /* \"#utility.yul\":8348:8354   */\n      dup4\n        /* \"#utility.yul\":8345:8346   */\n      dup2\n        /* \"#utility.yul\":8342:8355   */\n      lt\n        /* \"#utility.yul\":8334:8447   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":8433:8434   */\n      dup1\n        /* \"#utility.yul\":8428:8431   */\n      dup3\n        /* \"#utility.yul\":8424:8435   */\n      add\n        /* \"#utility.yul\":8418:8436   */\n      mload\n        /* \"#utility.yul\":8414:8415   */\n      dup2\n        /* \"#utility.yul\":8409:8412   */\n      dup5\n        /* \"#utility.yul\":8405:8416   */\n      add\n        /* \"#utility.yul\":8398:8437   */\n      mstore\n        /* \"#utility.yul\":8370:8372   */\n      0x20\n        /* \"#utility.yul\":8367:8368   */\n      dup2\n        /* \"#utility.yul\":8363:8373   */\n      add\n        /* \"#utility.yul\":8358:8373   */\n      swap1\n      pop\n        /* \"#utility.yul\":8334:8447   */\n      jump(tag_368)\n    tag_370:\n        /* \"#utility.yul\":8481:8482   */\n      0x00\n        /* \"#utility.yul\":8472:8478   */\n      dup5\n        /* \"#utility.yul\":8467:8470   */\n      dup5\n        /* \"#utility.yul\":8463:8479   */\n      add\n        /* \"#utility.yul\":8456:8483   */\n      mstore\n        /* \"#utility.yul\":8305:8489   */\n      pop\n        /* \"#utility.yul\":8243:8489   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8495:8881   */\n    tag_275:\n        /* \"#utility.yul\":8599:8602   */\n      0x00\n        /* \"#utility.yul\":8627:8665   */\n      tag_372\n        /* \"#utility.yul\":8659:8664   */\n      dup3\n        /* \"#utility.yul\":8627:8665   */\n      tag_272\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8681:8769   */\n      tag_373\n        /* \"#utility.yul\":8762:8768   */\n      dup2\n        /* \"#utility.yul\":8757:8760   */\n      dup6\n        /* \"#utility.yul\":8681:8769   */\n      tag_273\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8674:8769   */\n      swap4\n      pop\n        /* \"#utility.yul\":8778:8843   */\n      tag_374\n        /* \"#utility.yul\":8836:8842   */\n      dup2\n        /* \"#utility.yul\":8831:8834   */\n      dup6\n        /* \"#utility.yul\":8824:8828   */\n      0x20\n        /* \"#utility.yul\":8817:8822   */\n      dup7\n        /* \"#utility.yul\":8813:8829   */\n      add\n        /* \"#utility.yul\":8778:8843   */\n      tag_274\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8868:8874   */\n      dup1\n        /* \"#utility.yul\":8863:8866   */\n      dup5\n        /* \"#utility.yul\":8859:8875   */\n      add\n        /* \"#utility.yul\":8852:8875   */\n      swap2\n      pop\n        /* \"#utility.yul\":8603:8881   */\n      pop\n        /* \"#utility.yul\":8495:8881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:9314   */\n    tag_132:\n        /* \"#utility.yul\":9063:9066   */\n      0x00\n        /* \"#utility.yul\":9085:9178   */\n      tag_376\n        /* \"#utility.yul\":9174:9177   */\n      dup3\n        /* \"#utility.yul\":9165:9171   */\n      dup6\n        /* \"#utility.yul\":9085:9178   */\n      tag_275\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":9078:9178   */\n      swap2\n      pop\n        /* \"#utility.yul\":9195:9288   */\n      tag_377\n        /* \"#utility.yul\":9284:9287   */\n      dup3\n        /* \"#utility.yul\":9275:9281   */\n      dup5\n        /* \"#utility.yul\":9195:9288   */\n      tag_275\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9188:9288   */\n      swap2\n      pop\n        /* \"#utility.yul\":9305:9308   */\n      dup2\n        /* \"#utility.yul\":9298:9308   */\n      swap1\n      pop\n        /* \"#utility.yul\":8887:9314   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9320:9591   */\n    tag_134:\n        /* \"#utility.yul\":9450:9453   */\n      0x00\n        /* \"#utility.yul\":9472:9565   */\n      tag_379\n        /* \"#utility.yul\":9561:9564   */\n      dup3\n        /* \"#utility.yul\":9552:9558   */\n      dup5\n        /* \"#utility.yul\":9472:9565   */\n      tag_275\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9465:9565   */\n      swap2\n      pop\n        /* \"#utility.yul\":9582:9585   */\n      dup2\n        /* \"#utility.yul\":9575:9585   */\n      swap1\n      pop\n        /* \"#utility.yul\":9320:9591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9597:9740   */\n    tag_276:\n        /* \"#utility.yul\":9654:9659   */\n      0x00\n        /* \"#utility.yul\":9685:9691   */\n      dup2\n        /* \"#utility.yul\":9679:9692   */\n      mload\n        /* \"#utility.yul\":9670:9692   */\n      swap1\n      pop\n        /* \"#utility.yul\":9701:9734   */\n      tag_381\n        /* \"#utility.yul\":9728:9733   */\n      dup2\n        /* \"#utility.yul\":9701:9734   */\n      tag_263\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9597:9740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9746:10097   */\n    tag_138:\n        /* \"#utility.yul\":9816:9822   */\n      0x00\n        /* \"#utility.yul\":9865:9867   */\n      0x20\n        /* \"#utility.yul\":9853:9862   */\n      dup3\n        /* \"#utility.yul\":9844:9851   */\n      dup5\n        /* \"#utility.yul\":9840:9863   */\n      sub\n        /* \"#utility.yul\":9836:9868   */\n      slt\n        /* \"#utility.yul\":9833:9952   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":9871:9950   */\n      tag_384\n      tag_252\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":9833:9952   */\n    tag_383:\n        /* \"#utility.yul\":9991:9992   */\n      0x00\n        /* \"#utility.yul\":10016:10080   */\n      tag_385\n        /* \"#utility.yul\":10072:10079   */\n      dup5\n        /* \"#utility.yul\":10063:10069   */\n      dup3\n        /* \"#utility.yul\":10052:10061   */\n      dup6\n        /* \"#utility.yul\":10048:10070   */\n      add\n        /* \"#utility.yul\":10016:10080   */\n      tag_276\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10006:10080   */\n      swap2\n      pop\n        /* \"#utility.yul\":9962:10090   */\n      pop\n        /* \"#utility.yul\":9746:10097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10103:10269   */\n    tag_277:\n        /* \"#utility.yul\":10243:10261   */\n      0x696e636f727265637420776561706f6e00000000000000000000000000000000\n        /* \"#utility.yul\":10239:10240   */\n      0x00\n        /* \"#utility.yul\":10231:10237   */\n      dup3\n        /* \"#utility.yul\":10227:10241   */\n      add\n        /* \"#utility.yul\":10220:10262   */\n      mstore\n        /* \"#utility.yul\":10103:10269   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10275:10641   */\n    tag_278:\n        /* \"#utility.yul\":10417:10420   */\n      0x00\n        /* \"#utility.yul\":10438:10505   */\n      tag_388\n        /* \"#utility.yul\":10502:10504   */\n      0x10\n        /* \"#utility.yul\":10497:10500   */\n      dup4\n        /* \"#utility.yul\":10438:10505   */\n      tag_265\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10431:10505   */\n      swap2\n      pop\n        /* \"#utility.yul\":10514:10607   */\n      tag_389\n        /* \"#utility.yul\":10603:10606   */\n      dup3\n        /* \"#utility.yul\":10514:10607   */\n      tag_277\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":10632:10634   */\n      0x20\n        /* \"#utility.yul\":10627:10630   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      add\n        /* \"#utility.yul\":10616:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10275:10641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10647:11066   */\n    tag_145:\n        /* \"#utility.yul\":10813:10817   */\n      0x00\n        /* \"#utility.yul\":10851:10853   */\n      0x20\n        /* \"#utility.yul\":10840:10849   */\n      dup3\n        /* \"#utility.yul\":10836:10854   */\n      add\n        /* \"#utility.yul\":10828:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10900:10909   */\n      dup2\n        /* \"#utility.yul\":10894:10898   */\n      dup2\n        /* \"#utility.yul\":10890:10910   */\n      sub\n        /* \"#utility.yul\":10886:10887   */\n      0x00\n        /* \"#utility.yul\":10875:10884   */\n      dup4\n        /* \"#utility.yul\":10871:10888   */\n      add\n        /* \"#utility.yul\":10864:10911   */\n      mstore\n        /* \"#utility.yul\":10928:11059   */\n      tag_391\n        /* \"#utility.yul\":11054:11058   */\n      dup2\n        /* \"#utility.yul\":10928:11059   */\n      tag_278\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10920:11059   */\n      swap1\n      pop\n        /* \"#utility.yul\":10647:11066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11072:11422   */\n    tag_151:\n        /* \"#utility.yul\":11202:11206   */\n      0x00\n        /* \"#utility.yul\":11240:11242   */\n      0x40\n        /* \"#utility.yul\":11229:11238   */\n      dup3\n        /* \"#utility.yul\":11225:11243   */\n      add\n        /* \"#utility.yul\":11217:11243   */\n      swap1\n      pop\n        /* \"#utility.yul\":11253:11324   */\n      tag_393\n        /* \"#utility.yul\":11321:11322   */\n      0x00\n        /* \"#utility.yul\":11310:11319   */\n      dup4\n        /* \"#utility.yul\":11306:11323   */\n      add\n        /* \"#utility.yul\":11297:11303   */\n      dup6\n        /* \"#utility.yul\":11253:11324   */\n      tag_248\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11334:11415   */\n      tag_394\n        /* \"#utility.yul\":11411:11413   */\n      0x20\n        /* \"#utility.yul\":11400:11409   */\n      dup4\n        /* \"#utility.yul\":11396:11414   */\n      add\n        /* \"#utility.yul\":11387:11393   */\n      dup5\n        /* \"#utility.yul\":11334:11415   */\n      tag_245\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":11072:11422   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11428:11595   */\n    tag_279:\n        /* \"#utility.yul\":11568:11587   */\n      0x54686520726f6f6d2069732066756c6c2e000000000000000000000000000000\n        /* \"#utility.yul\":11564:11565   */\n      0x00\n        /* \"#utility.yul\":11556:11562   */\n      dup3\n        /* \"#utility.yul\":11552:11566   */\n      add\n        /* \"#utility.yul\":11545:11588   */\n      mstore\n        /* \"#utility.yul\":11428:11595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11601:11967   */\n    tag_280:\n        /* \"#utility.yul\":11743:11746   */\n      0x00\n        /* \"#utility.yul\":11764:11831   */\n      tag_397\n        /* \"#utility.yul\":11828:11830   */\n      0x11\n        /* \"#utility.yul\":11823:11826   */\n      dup4\n        /* \"#utility.yul\":11764:11831   */\n      tag_265\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":11757:11831   */\n      swap2\n      pop\n        /* \"#utility.yul\":11840:11933   */\n      tag_398\n        /* \"#utility.yul\":11929:11932   */\n      dup3\n        /* \"#utility.yul\":11840:11933   */\n      tag_279\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":11958:11960   */\n      0x20\n        /* \"#utility.yul\":11953:11956   */\n      dup3\n        /* \"#utility.yul\":11949:11961   */\n      add\n        /* \"#utility.yul\":11942:11961   */\n      swap1\n      pop\n        /* \"#utility.yul\":11601:11967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11973:12392   */\n    tag_171:\n        /* \"#utility.yul\":12139:12143   */\n      0x00\n        /* \"#utility.yul\":12177:12179   */\n      0x20\n        /* \"#utility.yul\":12166:12175   */\n      dup3\n        /* \"#utility.yul\":12162:12180   */\n      add\n        /* \"#utility.yul\":12154:12180   */\n      swap1\n      pop\n        /* \"#utility.yul\":12226:12235   */\n      dup2\n        /* \"#utility.yul\":12220:12224   */\n      dup2\n        /* \"#utility.yul\":12216:12236   */\n      sub\n        /* \"#utility.yul\":12212:12213   */\n      0x00\n        /* \"#utility.yul\":12201:12210   */\n      dup4\n        /* \"#utility.yul\":12197:12214   */\n      add\n        /* \"#utility.yul\":12190:12237   */\n      mstore\n        /* \"#utility.yul\":12254:12385   */\n      tag_400\n        /* \"#utility.yul\":12380:12384   */\n      dup2\n        /* \"#utility.yul\":12254:12385   */\n      tag_280\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":12246:12385   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:12392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12398:12577   */\n    tag_281:\n        /* \"#utility.yul\":12538:12569   */\n      0x506c6179657273206861766520616c726561647920636f6d6d69746564000000\n        /* \"#utility.yul\":12534:12535   */\n      0x00\n        /* \"#utility.yul\":12526:12532   */\n      dup3\n        /* \"#utility.yul\":12522:12536   */\n      add\n        /* \"#utility.yul\":12515:12570   */\n      mstore\n        /* \"#utility.yul\":12398:12577   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12583:12949   */\n    tag_282:\n        /* \"#utility.yul\":12725:12728   */\n      0x00\n        /* \"#utility.yul\":12746:12813   */\n      tag_403\n        /* \"#utility.yul\":12810:12812   */\n      0x1d\n        /* \"#utility.yul\":12805:12808   */\n      dup4\n        /* \"#utility.yul\":12746:12813   */\n      tag_265\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12739:12813   */\n      swap2\n      pop\n        /* \"#utility.yul\":12822:12915   */\n      tag_404\n        /* \"#utility.yul\":12911:12914   */\n      dup3\n        /* \"#utility.yul\":12822:12915   */\n      tag_281\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12940:12942   */\n      0x20\n        /* \"#utility.yul\":12935:12938   */\n      dup3\n        /* \"#utility.yul\":12931:12943   */\n      add\n        /* \"#utility.yul\":12924:12943   */\n      swap1\n      pop\n        /* \"#utility.yul\":12583:12949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12955:13374   */\n    tag_197:\n        /* \"#utility.yul\":13121:13125   */\n      0x00\n        /* \"#utility.yul\":13159:13161   */\n      0x20\n        /* \"#utility.yul\":13148:13157   */\n      dup3\n        /* \"#utility.yul\":13144:13162   */\n      add\n        /* \"#utility.yul\":13136:13162   */\n      swap1\n      pop\n        /* \"#utility.yul\":13208:13217   */\n      dup2\n        /* \"#utility.yul\":13202:13206   */\n      dup2\n        /* \"#utility.yul\":13198:13218   */\n      sub\n        /* \"#utility.yul\":13194:13195   */\n      0x00\n        /* \"#utility.yul\":13183:13192   */\n      dup4\n        /* \"#utility.yul\":13179:13196   */\n      add\n        /* \"#utility.yul\":13172:13219   */\n      mstore\n        /* \"#utility.yul\":13236:13367   */\n      tag_406\n        /* \"#utility.yul\":13362:13366   */\n      dup2\n        /* \"#utility.yul\":13236:13367   */\n      tag_282\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13228:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":12955:13374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13380:13560   */\n    tag_214:\n        /* \"#utility.yul\":13428:13505   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13425:13426   */\n      0x00\n        /* \"#utility.yul\":13418:13506   */\n      mstore\n        /* \"#utility.yul\":13525:13529   */\n      0x41\n        /* \"#utility.yul\":13522:13523   */\n      0x04\n        /* \"#utility.yul\":13515:13530   */\n      mstore\n        /* \"#utility.yul\":13549:13553   */\n      0x24\n        /* \"#utility.yul\":13546:13547   */\n      0x00\n        /* \"#utility.yul\":13539:13554   */\n      revert\n        /* \"#utility.yul\":13566:13746   */\n    tag_220:\n        /* \"#utility.yul\":13614:13691   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13611:13612   */\n      0x00\n        /* \"#utility.yul\":13604:13692   */\n      mstore\n        /* \"#utility.yul\":13711:13715   */\n      0x12\n        /* \"#utility.yul\":13708:13709   */\n      0x04\n        /* \"#utility.yul\":13701:13716   */\n      mstore\n        /* \"#utility.yul\":13735:13739   */\n      0x24\n        /* \"#utility.yul\":13732:13733   */\n      0x00\n        /* \"#utility.yul\":13725:13740   */\n      revert\n\n    auxdata: 0xa264697066735822122021769a9f4d38f77d98e2037ad2ea9d7c6df399be9c5a3771cd02ebed2f82403564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1190": {
									"entryPoint": null,
									"id": 1190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@newGame_1238": {
									"entryPoint": 1412,
									"id": 1238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:190:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:3"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600460146101000a81548160ff021916908360048111156200002d576200002c620006e9565b5b02179055503480156200003f57600080fd5b50600060056000600160038111156200005d576200005c620006e9565b5b6003811115620000725762000071620006e9565b5b8152602001908152602001600020600060016003811115620000995762000098620006e9565b5b6003811115620000ae57620000ad620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600060056000600380811115620000f057620000ef620006e9565b5b6003811115620001055762000104620006e9565b5b815260200190815260200160002060006003808111156200012b576200012a620006e9565b5b600381111562000140576200013f620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060006005600060026003811115620001835762000182620006e9565b5b6003811115620001985762000197620006e9565b5b8152602001908152602001600020600060026003811115620001bf57620001be620006e9565b5b6003811115620001d457620001d3620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060016005600060016003811115620002175762000216620006e9565b5b60038111156200022c576200022b620006e9565b5b81526020019081526020016000206000600380811115620002525762000251620006e9565b5b6003811115620002675762000266620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060016005600060026003811115620002aa57620002a9620006e9565b5b6003811115620002bf57620002be620006e9565b5b8152602001908152602001600020600060016003811115620002e657620002e5620006e9565b5b6003811115620002fb57620002fa620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506001600560006003808111156200033d576200033c620006e9565b5b6003811115620003525762000351620006e9565b5b8152602001908152602001600020600060026003811115620003795762000378620006e9565b5b60038111156200038e576200038d620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060026005600060016003811115620003d157620003d0620006e9565b5b6003811115620003e657620003e5620006e9565b5b81526020019081526020016000206000600260038111156200040d576200040c620006e9565b5b6003811115620004225762000421620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060026005600060026003811115620004655762000464620006e9565b5b60038111156200047a5762000479620006e9565b5b81526020019081526020016000206000600380811115620004a0576200049f620006e9565b5b6003811115620004b557620004b4620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff160217905550600260056000600380811115620004f757620004f6620006e9565b5b60038111156200050c576200050b620006e9565b5b8152602001908152602001600020600060016003811115620005335762000532620006e9565b5b6003811115620005485762000547620006e9565b5b815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506200057e6200058460201b60201c565b62000718565b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000801b6002819055506000801b6003819055506000600160146101000a81548160ff02191690836003811115620006865762000685620006e9565b5b02179055506000600160156101000a81548160ff02191690836003811115620006b457620006b3620006e9565b5b02179055506000600460146101000a81548160ff02191690836004811115620006e257620006e1620006e9565b5b0217905550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611b4b80620007286000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b688a3631161008c578063d8c4d9da11610066578063d8c4d9da146101a4578063dfbf53ae146101c2578063fb93247f146101e0578063fce55812146101fe576100cf565b8063b688a3631461015e578063c040e6b814610168578063d30895e414610186576100cf565b80631884824c146100d457806359a5f12d146100f25780637d03f5f3146101105780639dd63d6b1461011a578063a45332a714610124578063ab4a6be114610142575b600080fd5b6100dc61021a565b6040516100e991906114fa565b60405180910390f35b6100fa61022d565b6040516101079190611556565b60405180910390f35b610118610253565b005b6101226103af565b005b61012c61068d565b604051610139919061158a565b60405180910390f35b61015c6004803603810190610157919061160b565b610693565b005b610166610c21565b005b610170610e99565b60405161017d9190611693565b60405180910390f35b61018e610eac565b60405161019b9190611556565b60405180910390f35b6101ac610ed0565b6040516101b991906114fa565b60405180910390f35b6101ca610ee3565b6040516101d79190611556565b60405180910390f35b6101e8610f09565b6040516101f5919061158a565b60405180910390f35b610218600480360381019061021391906116da565b610f0f565b005b600160159054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000801b6002819055506000801b6003819055506000600160146101000a81548160ff0219169083600381111561035257610351611483565b5b02179055506000600160156101000a81548160ff0219169083600381111561037d5761037c611483565b5b02179055506000600460146101000a81548160ff021916908360048111156103a8576103a7611483565b5b0217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104565750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611764565b60405180910390fd5b6004808111156104a8576104a7611483565b5b600460149054906101000a900460ff1660048111156104ca576104c9611483565b5b1461050a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610501906117d0565b60405180910390fd5b600060056000600160149054906101000a900460ff16600381111561053257610531611483565b5b600381111561054457610543611483565b5b81526020019081526020016000206000600160159054906101000a900460ff16600381111561057657610575611483565b5b600381111561058857610587611483565b5b815260200190815260200160002060009054906101000a900460ff16905060008160000b14806105bb575060018160000b145b156106265760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061068a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061073a5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090611764565b60405180910390fd5b816001600381111561078e5761078d611483565b5b8160038111156107a1576107a0611483565b5b14806107d15750600260038111156107bc576107bb611483565b5b8160038111156107cf576107ce611483565b5b145b806107ff57506003808111156107ea576107e9611483565b5b8160038111156107fd576107fc611483565b5b145b61083e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108359061183c565b60405180910390fd5b6002600481111561085257610851611483565b5b600460149054906101000a900460ff16600481111561087457610873611483565b5b14806108b357506003600481111561088f5761088e611483565b5b600460149054906101000a900460ff1660048111156108b1576108b0611483565b5b145b6108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e9906117d0565b60405180910390fd5b6000600261091185600381111561090c5761090b611483565b5b611262565b6109208563ffffffff16611262565b6040516020016109319291906118cd565b60405160208183030381529060405260405161094d91906118f1565b602060405180830381855afa15801561096a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061098d919061191d565b9050600060038111156109a3576109a2611483565b5b8460038111156109b6576109b5611483565b5b036109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed90611996565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610a52575060025481145b15610aea5783600160146101000a81548160ff02191690836003811115610a7c57610a7b611483565b5b02179055507f79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b3385604051610ab29291906119b6565b60405180910390a16003600460146101000a81548160ff02191690836004811115610ae057610adf611483565b5b0217905550610c1b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610b48575060035481145b15610bdf5783600160156101000a81548160ff02191690836003811115610b7257610b71611483565b5b02179055507f79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b3385604051610ba89291906119b6565b60405180910390a160048060146101000a81548160ff02191690836004811115610bd557610bd4611483565b5b0217905550610c1a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1190611996565b60405180910390fd5b5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610ccb5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b610cd457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610d7d5750600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390611a2b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e5557336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e97565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b600460149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fb65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90611764565b60405180910390fd5b6000600481111561100957611008611483565b5b600460149054906101000a900460ff16600481111561102b5761102a611483565b5b148061106a57506001600481111561104657611045611483565b5b600460149054906101000a900460ff16600481111561106857611067611483565b5b145b61107357600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156110d257506000801b600254145b156110e35780600281905550611191565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561114457506000801b600354145b156111555780600381905550611190565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118790611a97565b60405180910390fd5b5b7f599481bd81d46ea2372b7f45ab8900ac58961566f184806290d9ede4e0fc7641336040516111c09190611556565b60405180910390a1600060048111156111dc576111db611483565b5b600460149054906101000a900460ff1660048111156111fe576111fd611483565b5b03611233576001600460146101000a81548160ff0219169083600481111561122957611228611483565b5b021790555061125f565b6002600460146101000a81548160ff0219169083600481111561125957611258611483565b5b02179055505b50565b60606000600161127184611330565b01905060008167ffffffffffffffff8111156112905761128f611ab7565b5b6040519080825280601f01601f1916602001820160405280156112c25781602001600182028036833780820191505090505b509050600082602001820190505b600115611325578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161131957611318611ae6565b5b049450600085036112d0575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138457611383611ae6565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cb576d04ee2d6d415b85acef810000000083816113c1576113c0611ae6565b5b0492506020810190505b662386f26fc1000083106113fa57662386f26fc1000083816113f0576113ef611ae6565b5b0492506010810190505b6305f5e1008310611423576305f5e100838161141957611418611ae6565b5b0492506008810190505b612710831061144857612710838161143e5761143d611ae6565b5b0492506004810190505b6064831061146b576064838161146157611460611ae6565b5b0492506002810190505b600a831061147a576001810190505b80915050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106114c3576114c2611483565b5b50565b60008190506114d4826114b2565b919050565b60006114e4826114c6565b9050919050565b6114f4816114d9565b82525050565b600060208201905061150f60008301846114eb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154082611515565b9050919050565b61155081611535565b82525050565b600060208201905061156b6000830184611547565b92915050565b6000819050919050565b61158481611571565b82525050565b600060208201905061159f600083018461157b565b92915050565b600080fd5b600481106115b757600080fd5b50565b6000813590506115c9816115aa565b92915050565b600063ffffffff82169050919050565b6115e8816115cf565b81146115f357600080fd5b50565b600081359050611605816115df565b92915050565b60008060408385031215611622576116216115a5565b5b6000611630858286016115ba565b9250506020611641858286016115f6565b9150509250929050565b6005811061165c5761165b611483565b5b50565b600081905061166d8261164b565b919050565b600061167d8261165f565b9050919050565b61168d81611672565b82525050565b60006020820190506116a86000830184611684565b92915050565b6116b781611571565b81146116c257600080fd5b50565b6000813590506116d4816116ae565b92915050565b6000602082840312156116f0576116ef6115a5565b5b60006116fe848285016116c5565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420706c6179696e6720746869732067616d652e0000600082015250565b600061174e601e83611707565b915061175982611718565b602082019050919050565b6000602082019050818103600083015261177d81611741565b9050919050565b7f696e636f72726563742073746167650000000000000000000000000000000000600082015250565b60006117ba600f83611707565b91506117c582611784565b602082019050919050565b600060208201905081810360008301526117e9816117ad565b9050919050565b7f696e76616c696420776561706f6e000000000000000000000000000000000000600082015250565b6000611826600e83611707565b9150611831826117f0565b602082019050919050565b6000602082019050818103600083015261185581611819565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611890578082015181840152602081019050611875565b60008484015250505050565b60006118a78261185c565b6118b18185611867565b93506118c1818560208601611872565b80840191505092915050565b60006118d9828561189c565b91506118e5828461189c565b91508190509392505050565b60006118fd828461189c565b915081905092915050565b600081519050611917816116ae565b92915050565b600060208284031215611933576119326115a5565b5b600061194184828501611908565b91505092915050565b7f696e636f727265637420776561706f6e00000000000000000000000000000000600082015250565b6000611980601083611707565b915061198b8261194a565b602082019050919050565b600060208201905081810360008301526119af81611973565b9050919050565b60006040820190506119cb6000830185611547565b6119d860208301846114eb565b9392505050565b7f54686520726f6f6d2069732066756c6c2e000000000000000000000000000000600082015250565b6000611a15601183611707565b9150611a20826119df565b602082019050919050565b60006020820190508181036000830152611a4481611a08565b9050919050565b7f506c6179657273206861766520616c726561647920636f6d6d69746564000000600082015250565b6000611a81601d83611707565b9150611a8c82611a4b565b602082019050919050565b60006020820190508181036000830152611ab081611a74565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122021769a9f4d38f77d98e2037ad2ea9d7c6df399be9c5a3771cd02ebed2f82403564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2D JUMPI PUSH3 0x2C PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x5D JUMPI PUSH3 0x5C PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x72 JUMPI PUSH3 0x71 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x99 JUMPI PUSH3 0x98 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0xAE JUMPI PUSH3 0xAD PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0xF0 JUMPI PUSH3 0xEF PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x105 JUMPI PUSH3 0x104 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x12B JUMPI PUSH3 0x12A PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x140 JUMPI PUSH3 0x13F PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x183 JUMPI PUSH3 0x182 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x198 JUMPI PUSH3 0x197 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x1BF JUMPI PUSH3 0x1BE PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x1D4 JUMPI PUSH3 0x1D3 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x217 JUMPI PUSH3 0x216 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x22C JUMPI PUSH3 0x22B PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x252 JUMPI PUSH3 0x251 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x267 JUMPI PUSH3 0x266 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x2AA JUMPI PUSH3 0x2A9 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x2BF JUMPI PUSH3 0x2BE PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x2E6 JUMPI PUSH3 0x2E5 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x2FB JUMPI PUSH3 0x2FA PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x33D JUMPI PUSH3 0x33C PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x352 JUMPI PUSH3 0x351 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x379 JUMPI PUSH3 0x378 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x38E JUMPI PUSH3 0x38D PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x3D1 JUMPI PUSH3 0x3D0 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x3E6 JUMPI PUSH3 0x3E5 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x40D JUMPI PUSH3 0x40C PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x422 JUMPI PUSH3 0x421 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x465 JUMPI PUSH3 0x464 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x47A JUMPI PUSH3 0x479 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x4A0 JUMPI PUSH3 0x49F PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x4B5 JUMPI PUSH3 0x4B4 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x5 PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH3 0x4F7 JUMPI PUSH3 0x4F6 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x50C JUMPI PUSH3 0x50B PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x533 JUMPI PUSH3 0x532 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x548 JUMPI PUSH3 0x547 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x57E PUSH3 0x584 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x718 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x686 JUMPI PUSH3 0x685 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH3 0x6B4 JUMPI PUSH3 0x6B3 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x6E2 JUMPI PUSH3 0x6E1 PUSH3 0x6E9 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1B4B DUP1 PUSH3 0x728 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB688A363 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD8C4D9DA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD8C4D9DA EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xFB93247F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xFCE55812 EQ PUSH2 0x1FE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xB688A363 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xD30895E4 EQ PUSH2 0x186 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1884824C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x59A5F12D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x7D03F5F3 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x9DD63D6B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xA45332A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xAB4A6BE1 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4C9 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND EQ DUP1 PUSH2 0x5BB JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x0 SIGNEXTEND EQ JUMPDEST ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x68A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x73A JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x7A0 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x7D1 JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x7FF JUMPI POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x8B3 JUMPI POP PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x88F JUMPI PUSH2 0x88E PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E9 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x911 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x90C JUMPI PUSH2 0x90B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x920 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x931 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x9B5 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA52 JUMPI POP PUSH1 0x2 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0xAEA JUMPI DUP4 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB2 SWAP3 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB48 JUMPI POP PUSH1 0x3 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0xBDF JUMPI DUP4 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP3 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI PUSH2 0xBD4 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD7D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB3 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE97 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xFB6 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x102B JUMPI PUSH2 0x102A PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x106A JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1046 JUMPI PUSH2 0x1045 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1068 JUMPI PUSH2 0x1067 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x10D2 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0x2 SLOAD EQ JUMPDEST ISZERO PUSH2 0x10E3 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1144 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0x3 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1155 JUMPI DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH32 0x599481BD81D46EA2372B7F45AB8900AC58961566F184806290D9EDE4E0FC7641 CALLER PUSH1 0x40 MLOAD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH2 0x11FD PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1233 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x125F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1271 DUP5 PUSH2 0x1330 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x1AB7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12C2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1325 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1319 JUMPI PUSH2 0x1318 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x12D0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1384 JUMPI PUSH2 0x1383 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FA JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1423 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1448 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143E JUMPI PUSH2 0x143D PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146B JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1461 JUMPI PUSH2 0x1460 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14D4 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP3 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F4 DUP2 PUSH2 0x14D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1584 DUP2 PUSH2 0x1571 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C9 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1605 DUP2 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1630 DUP6 DUP3 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1641 DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x166D DUP3 PUSH2 0x164B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168D DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x1571 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FE DUP5 DUP3 DUP6 ADD PUSH2 0x16C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420706C6179696E6720746869732067616D652E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174E PUSH1 0x1E DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1759 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177D DUP2 PUSH2 0x1741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073746167650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BA PUSH1 0xF DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C5 DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17E9 DUP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420776561706F6E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1826 PUSH1 0xE DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1831 DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1890 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x18B1 DUP2 DUP6 PUSH2 0x1867 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D9 DUP3 DUP6 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP PUSH2 0x18E5 DUP3 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FD DUP3 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1917 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP5 DUP3 DUP6 ADD PUSH2 0x1908 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F727265637420776561706F6E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1980 PUSH1 0x10 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x198B DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AF DUP2 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19CB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x19D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520726F6F6D2069732066756C6C2E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 PUSH1 0x11 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A20 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A44 DUP2 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657273206861766520616C726561647920636F6D6D69746564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A81 PUSH1 0x1D DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP3 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB0 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 PUSH23 0x9A9F4D38F77D98E2037AD2EA9D7C6DF399BE9C5A3771CD MUL 0xEB 0xED 0x2F DUP3 BLOCKHASH CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "126:4226:2:-:0;;;684:17;663:38;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;774:458;;;;;;;;;;830:1;798:3;:16;802:11;798:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:29;815:11;798:29;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;881:1;841:3;:20;845:15;841:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;862:15;841:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;926:1;892:3;:17;896:12;892:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;910:12;892:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;973:1;937:3;:16;941:11;937:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;954:15;937:33;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1017:1;984:3;:17;988:12;984:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:30;1002:11;984:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1065:1;1028:3;:20;1032:15;1028:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;1049:12;1028:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1109:1;1076:3;:16;1080:11;1076:16;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:30;1093:12;1076:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1157:1;1120:3;:17;1124:12;1120:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;1138:15;1120:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1204:1;1168:3;:20;1172:15;1168:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:33;1189:11;1168:33;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1216:9;:7;;;:9;;:::i;:::-;126:4226;;1238:298;1291:3;1274:6;;:21;;;;;;;;;;;;;;;;;;1323:3;1305:7;;:22;;;;;;;;;;;;;;;;;;1355:3;1337:7;;:22;;;;;;;;;;;;;;;;;;1384:3;1370:17;;:11;:17;;;;1411:3;1397:17;;:11;:17;;;;1443:11;1425:15;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1482:11;1464:15;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1512:17;1504:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1238:298::o;7:180:3:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;126:4226:2;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@endgame_1577": {
									"entryPoint": 943,
									"id": 1577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@join_1343": {
									"entryPoint": 3105,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@log10_876": {
									"entryPoint": 4912,
									"id": 876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@makeChoice_1416": {
									"entryPoint": 3855,
									"id": 1416,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@newGame_1238": {
									"entryPoint": 595,
									"id": 1238,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player1Hash_1076": {
									"entryPoint": 1677,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player1_1066": {
									"entryPoint": 3756,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player2Hash_1078": {
									"entryPoint": 3849,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@player2_1068": {
									"entryPoint": 557,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reveal_1534": {
									"entryPoint": 1683,
									"id": 1534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stage_1085": {
									"entryPoint": 3737,
									"id": 1085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toString_57": {
									"entryPoint": 4706,
									"id": 57,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@weaponOfPlayer1_1071": {
									"entryPoint": 3792,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weaponOfPlayer2_1074": {
									"entryPoint": 538,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winner_1080": {
									"entryPoint": 3811,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 6408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_Weapon_$1064": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32": {
									"entryPoint": 5622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 6429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_Weapon_$1064t_uint32": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_Stage_$1059_to_t_uint8_fromStack": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6349,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_enum$_Weapon_$1064__to_t_address_t_uint8__fromStack_reversed": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Stage_$1059__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Weapon_$1064__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Stage_$1059": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Weapon_$1064": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 5583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Stage_$1059_to_t_uint8": {
									"entryPoint": 5746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Weapon_$1064_to_t_uint8": {
									"entryPoint": 5337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 5251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6": {
									"entryPoint": 6623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334": {
									"entryPoint": 6128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Stage_$1059": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Weapon_$1064": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_Weapon_$1064": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 5599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13749:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "52:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "55:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "45:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "45:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "149:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "152:4:3",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "142:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "142:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "173:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "176:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:15:3"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "247:62:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "281:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "283:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "283:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "283:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "270:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "277:1:3",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "267:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "260:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:20:3"
															},
															"nodeType": "YulIf",
															"src": "257:46:3"
														}
													]
												},
												"name": "validator_assert_t_enum$_Weapon_$1064",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "240:5:3",
														"type": ""
													}
												],
												"src": "193:116:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "371:77:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "381:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "392:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "381:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "436:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Weapon_$1064",
																	"nodeType": "YulIdentifier",
																	"src": "398:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "398:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "398:44:3"
														}
													]
												},
												"name": "cleanup_t_enum$_Weapon_$1064",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "353:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "363:7:3",
														"type": ""
													}
												],
												"src": "315:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "523:64:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "533:48:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "575:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Weapon_$1064",
																	"nodeType": "YulIdentifier",
																	"src": "546:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "546:35:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "533:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Weapon_$1064_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "503:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "513:9:3",
														"type": ""
													}
												],
												"src": "454:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "667:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "684:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "729:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Weapon_$1064_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "689:39:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "689:46:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "677:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "677:59:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "677:59:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "662:3:3",
														"type": ""
													}
												],
												"src": "593:149:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "855:133:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "865:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "877:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "888:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "873:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "865:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "954:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "967:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "978:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "963:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "901:52:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "901:80:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "901:80:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Weapon_$1064__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "827:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "839:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "850:4:3",
														"type": ""
													}
												],
												"src": "748:240:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1039:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1049:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1064:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1071:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1060:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1049:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1021:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1031:7:3",
														"type": ""
													}
												],
												"src": "994:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1171:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1181:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1210:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1192:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1181:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1153:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1163:7:3",
														"type": ""
													}
												],
												"src": "1126:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1310:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1333:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1315:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1303:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1281:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1288:3:3",
														"type": ""
													}
												],
												"src": "1228:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1450:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1460:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1472:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1483:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1468:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1468:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1460:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1540:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1564:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1496:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1496:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1496:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1422:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1434:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1445:4:3",
														"type": ""
													}
												],
												"src": "1352:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1625:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1635:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1646:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1635:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1607:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1617:7:3",
														"type": ""
													}
												],
												"src": "1580:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1728:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1745:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1768:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1750:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1750:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1738:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1716:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1723:3:3",
														"type": ""
													}
												],
												"src": "1663:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1885:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1895:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1907:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1918:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1903:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1895:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1999:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1984:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1931:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1931:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1857:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1869:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1880:4:3",
														"type": ""
													}
												],
												"src": "1787:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2055:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2065:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2075:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2048:6:3",
														"type": ""
													}
												],
												"src": "2015:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2185:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2202:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2205:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2195:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2096:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2308:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2325:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2328:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2318:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2318:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2219:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2396:56:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2430:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2439:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2442:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2432:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2432:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2432:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2419:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2426:1:3",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2416:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2409:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:20:3"
															},
															"nodeType": "YulIf",
															"src": "2406:40:3"
														}
													]
												},
												"name": "validator_revert_t_enum$_Weapon_$1064",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2389:5:3",
														"type": ""
													}
												],
												"src": "2342:110:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:98:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2531:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2553:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2540:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2531:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2607:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_Weapon_$1064",
																	"nodeType": "YulIdentifier",
																	"src": "2569:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2569:44:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2569:44:3"
														}
													]
												},
												"name": "abi_decode_t_enum$_Weapon_$1064",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2499:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2507:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2515:5:3",
														"type": ""
													}
												],
												"src": "2458:161:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:49:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2679:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2694:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2701:10:3",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2690:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:22:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2679:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2651:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2661:7:3",
														"type": ""
													}
												],
												"src": "2625:93:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:78:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2822:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2831:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2834:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2824:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2789:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2813:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nodeType": "YulIdentifier",
																					"src": "2796:16:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2796:23:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2786:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2786:34:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2779:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2779:42:3"
															},
															"nodeType": "YulIf",
															"src": "2776:62:3"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2759:5:3",
														"type": ""
													}
												],
												"src": "2724:120:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2901:86:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2911:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2933:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2920:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2911:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2975:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nodeType": "YulIdentifier",
																	"src": "2949:25:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:32:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:32:3"
														}
													]
												},
												"name": "abi_decode_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2879:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2887:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2895:5:3",
														"type": ""
													}
												],
												"src": "2850:137:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3086:401:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3132:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3134:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3134:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3134:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3107:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3103:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3103:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:32:3"
															},
															"nodeType": "YulIf",
															"src": "3096:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "3225:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3240:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3254:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3244:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3269:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3315:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3326:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3311:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3311:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3335:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_Weapon_$1064",
																			"nodeType": "YulIdentifier",
																			"src": "3279:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3279:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3269:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3363:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3378:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3382:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3408:62:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3442:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3453:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3438:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3438:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3462:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint32",
																			"nodeType": "YulIdentifier",
																			"src": "3418:19:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3418:52:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3408:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Weapon_$1064t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3048:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3059:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3071:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3079:6:3",
														"type": ""
													}
												],
												"src": "2993:494:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3546:62:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3580:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "3582:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3582:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3582:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3569:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3576:1:3",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3566:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3566:12:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3559:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3559:20:3"
															},
															"nodeType": "YulIf",
															"src": "3556:46:3"
														}
													]
												},
												"name": "validator_assert_t_enum$_Stage_$1059",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3539:5:3",
														"type": ""
													}
												],
												"src": "3493:115:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3679:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3690:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3679:7:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3733:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Stage_$1059",
																	"nodeType": "YulIdentifier",
																	"src": "3696:36:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:43:3"
														}
													]
												},
												"name": "cleanup_t_enum$_Stage_$1059",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3651:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3661:7:3",
														"type": ""
													}
												],
												"src": "3614:131:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3819:63:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3829:47:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3870:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Stage_$1059",
																	"nodeType": "YulIdentifier",
																	"src": "3842:27:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:34:3"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3829:9:3"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Stage_$1059_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3799:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3809:9:3",
														"type": ""
													}
												],
												"src": "3751:131:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4022:5:3"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Stage_$1059_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "3983:38:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:45:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3971:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3971:58:3"
														}
													]
												},
												"name": "abi_encode_t_enum$_Stage_$1059_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3949:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3956:3:3",
														"type": ""
													}
												],
												"src": "3888:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4147:132:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4157:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4169:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4180:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4165:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4157:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4245:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4258:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4269:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4254:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4254:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Stage_$1059_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4193:51:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:79:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4193:79:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Stage_$1059__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4119:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4131:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4142:4:3",
														"type": ""
													}
												],
												"src": "4041:238:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4328:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4385:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4394:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4397:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4387:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4387:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4387:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4351:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4376:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4358:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4358:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4348:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:43:3"
															},
															"nodeType": "YulIf",
															"src": "4338:63:3"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4321:5:3",
														"type": ""
													}
												],
												"src": "4285:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4465:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4475:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4484:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4484:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4475:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4540:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4513:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4443:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4451:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4459:5:3",
														"type": ""
													}
												],
												"src": "4413:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4624:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4670:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4672:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4672:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4672:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4645:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4654:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4641:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4637:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:32:3"
															},
															"nodeType": "YulIf",
															"src": "4634:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "4763:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4778:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4792:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4782:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4807:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4842:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4853:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4838:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4838:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4862:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4817:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4817:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4807:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4594:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4605:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4617:6:3",
														"type": ""
													}
												],
												"src": "4558:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4989:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5006:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5011:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4999:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4999:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4999:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5027:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5046:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5051:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5042:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5027:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4961:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4966:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4977:11:3",
														"type": ""
													}
												],
												"src": "4893:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5174:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5196:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5204:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5192:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5192:14:3"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420706c6179696e6720746869732067616d652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5208:32:3",
																		"type": "",
																		"value": "You are not playing this game."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:56:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:56:3"
														}
													]
												},
												"name": "store_literal_in_memory_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5166:6:3",
														"type": ""
													}
												],
												"src": "5068:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5400:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5410:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5476:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5481:2:3",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5417:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5410:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5582:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e",
																	"nodeType": "YulIdentifier",
																	"src": "5493:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5493:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5493:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5595:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5606:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5611:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5602:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5595:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5388:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5396:3:3",
														"type": ""
													}
												],
												"src": "5254:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5797:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5807:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5830:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5815:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5815:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5807:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5865:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5850:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5850:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5873:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5879:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5869:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5843:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5899:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6033:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5907:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5899:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5777:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5792:4:3",
														"type": ""
													}
												],
												"src": "5626:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6157:59:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6179:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6187:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6175:14:3"
																	},
																	{
																		"hexValue": "696e636f7272656374207374616765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6191:17:3",
																		"type": "",
																		"value": "incorrect stage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6168:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6168:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6168:41:3"
														}
													]
												},
												"name": "store_literal_in_memory_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6149:6:3",
														"type": ""
													}
												],
												"src": "6051:165:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6368:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6378:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6444:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6449:2:3",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6385:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6378:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6550:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
																	"nodeType": "YulIdentifier",
																	"src": "6461:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6461:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6461:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6563:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6574:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6579:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6570:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6570:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6563:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6356:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6364:3:3",
														"type": ""
													}
												],
												"src": "6222:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6765:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6775:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6787:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6783:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6783:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6775:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6822:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6833:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6818:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6818:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6841:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6847:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6837:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6837:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6811:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6811:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6811:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6867:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7001:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6875:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6875:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6867:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6745:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6760:4:3",
														"type": ""
													}
												],
												"src": "6594:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7125:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7147:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7155:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7143:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7143:14:3"
																	},
																	{
																		"hexValue": "696e76616c696420776561706f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7159:16:3",
																		"type": "",
																		"value": "invalid weapon"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7136:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7136:40:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7136:40:3"
														}
													]
												},
												"name": "store_literal_in_memory_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7117:6:3",
														"type": ""
													}
												],
												"src": "7019:164:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7335:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7345:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7411:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7352:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7345:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7517:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334",
																	"nodeType": "YulIdentifier",
																	"src": "7428:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7428:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7530:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7541:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7546:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7537:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7537:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7530:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7323:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7331:3:3",
														"type": ""
													}
												],
												"src": "7189:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7732:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7742:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7754:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7765:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7750:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7750:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7742:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7800:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7785:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7808:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7814:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7804:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7804:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7778:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7834:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7968:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7842:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7842:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7834:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7712:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7727:4:3",
														"type": ""
													}
												],
												"src": "7561:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8044:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8055:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8071:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8065:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8065:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8055:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8027:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8037:6:3",
														"type": ""
													}
												],
												"src": "7986:98:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8213:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8228:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8213:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8175:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8180:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8191:11:3",
														"type": ""
													}
												],
												"src": "8090:147:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8305:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8315:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8324:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8319:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8384:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8409:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8414:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8405:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8405:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8428:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8433:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8424:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8424:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8418:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8418:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8398:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8398:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8398:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8345:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8348:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8342:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8356:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8358:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8367:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8363:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8363:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8358:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8338:3:3",
																"statements": []
															},
															"src": "8334:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8467:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8472:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8463:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8463:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8481:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8456:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8456:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8456:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8287:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8292:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8297:6:3",
														"type": ""
													}
												],
												"src": "8243:246:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8603:278:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8613:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8659:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8627:31:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8627:38:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8617:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8674:95:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8757:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8762:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8681:75:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8681:88:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8817:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8824:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8813:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8813:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8831:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8836:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8778:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:65:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8852:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8863:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8868:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8859:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8852:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8584:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8591:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8599:3:3",
														"type": ""
													}
												],
												"src": "8495:386:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9067:247:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9078:100:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9165:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9174:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9085:79:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9085:93:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9078:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9188:100:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9275:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9284:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9195:79:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9195:93:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9298:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9305:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9298:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9038:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9044:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9052:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9063:3:3",
														"type": ""
													}
												],
												"src": "8887:427:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9454:137:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9465:100:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9552:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9561:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9472:79:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:93:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9465:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9575:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "9582:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9575:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9433:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9439:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9450:3:3",
														"type": ""
													}
												],
												"src": "9320:271:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9660:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9670:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9685:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9679:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9679:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9670:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9728:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "9701:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9701:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9701:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9638:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9646:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9654:5:3",
														"type": ""
													}
												],
												"src": "9597:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9823:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9869:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9871:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9871:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9871:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9844:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9840:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9840:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9865:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9836:32:3"
															},
															"nodeType": "YulIf",
															"src": "9833:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "9962:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9977:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9991:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9981:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10006:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10052:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10063:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10048:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10048:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10072:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10016:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10006:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9793:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9804:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9816:6:3",
														"type": ""
													}
												],
												"src": "9746:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10209:60:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10231:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10239:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10227:14:3"
																	},
																	{
																		"hexValue": "696e636f727265637420776561706f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10243:18:3",
																		"type": "",
																		"value": "incorrect weapon"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10220:42:3"
														}
													]
												},
												"name": "store_literal_in_memory_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10201:6:3",
														"type": ""
													}
												],
												"src": "10103:166:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10431:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10502:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10438:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10431:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10603:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
																	"nodeType": "YulIdentifier",
																	"src": "10514:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10514:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10514:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10616:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10627:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10632:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10623:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10616:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10409:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10417:3:3",
														"type": ""
													}
												],
												"src": "10275:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10818:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10828:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10840:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10851:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10836:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10836:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10828:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10875:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10886:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10871:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10871:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10894:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10900:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10890:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10890:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10864:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10864:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10864:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10920:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11054:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10928:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "10928:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10920:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10798:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10813:4:3",
														"type": ""
													}
												],
												"src": "10647:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11207:215:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11217:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11229:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11240:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11225:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11225:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11217:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11297:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11310:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11321:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11306:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11306:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11253:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11253:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11253:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11387:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11400:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11411:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11396:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11396:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11334:52:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11334:81:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11334:81:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_enum$_Weapon_$1064__to_t_address_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11171:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11183:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11191:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11202:4:3",
														"type": ""
													}
												],
												"src": "11072:350:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11534:61:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11556:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11564:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11552:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11552:14:3"
																	},
																	{
																		"hexValue": "54686520726f6f6d2069732066756c6c2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11568:19:3",
																		"type": "",
																		"value": "The room is full."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11545:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11545:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11545:43:3"
														}
													]
												},
												"name": "store_literal_in_memory_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11526:6:3",
														"type": ""
													}
												],
												"src": "11428:167:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11747:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11757:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11823:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11828:2:3",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11764:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11764:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11757:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11929:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6",
																	"nodeType": "YulIdentifier",
																	"src": "11840:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11840:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11840:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11942:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11953:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11958:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11949:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "11949:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11942:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11735:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11743:3:3",
														"type": ""
													}
												],
												"src": "11601:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12144:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12154:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12166:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12177:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12162:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12154:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12201:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12212:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12197:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12197:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12220:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12226:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12216:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12216:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12190:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12190:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12190:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12246:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12380:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12254:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12254:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12246:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12124:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12139:4:3",
														"type": ""
													}
												],
												"src": "11973:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12504:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12526:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12534:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12522:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12522:14:3"
																	},
																	{
																		"hexValue": "506c6179657273206861766520616c726561647920636f6d6d69746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12538:31:3",
																		"type": "",
																		"value": "Players have already commited"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12515:55:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12515:55:3"
														}
													]
												},
												"name": "store_literal_in_memory_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12496:6:3",
														"type": ""
													}
												],
												"src": "12398:179:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12729:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12739:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12805:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12810:2:3",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12746:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12746:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12739:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12911:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8",
																	"nodeType": "YulIdentifier",
																	"src": "12822:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12822:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12822:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12924:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12935:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12940:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12931:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "12931:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12924:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12717:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12725:3:3",
														"type": ""
													}
												],
												"src": "12583:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13126:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13136:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13148:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13159:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13144:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13144:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13136:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13183:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13194:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13179:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13179:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13202:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13208:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13198:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13172:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13172:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13172:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13228:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13362:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13236:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13236:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13228:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13106:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13121:4:3",
														"type": ""
													}
												],
												"src": "12955:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13408:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13425:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13428:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13418:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13418:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13418:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13525:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13515:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13515:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13515:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13546:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13549:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13539:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13539:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13380:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13594:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13611:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13614:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13604:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13604:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13604:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13708:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13711:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13701:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13701:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13701:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13732:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13735:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13725:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "13725:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13725:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13566:180:3"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Weapon_$1064(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Weapon_$1064(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Weapon_$1064(value)\n    }\n\n    function convert_t_enum$_Weapon_$1064_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Weapon_$1064(value)\n    }\n\n    function abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Weapon_$1064_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Weapon_$1064__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_enum$_Weapon_$1064(value) {\n        if iszero(lt(value, 4)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_Weapon_$1064(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Weapon_$1064(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_enum$_Weapon_$1064t_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Weapon_$1064(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_assert_t_enum$_Stage_$1059(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Stage_$1059(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Stage_$1059(value)\n    }\n\n    function convert_t_enum$_Stage_$1059_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Stage_$1059(value)\n    }\n\n    function abi_encode_t_enum$_Stage_$1059_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Stage_$1059_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Stage_$1059__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Stage_$1059_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not playing this game.\")\n\n    }\n\n    function abi_encode_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect stage\")\n\n    }\n\n    function abi_encode_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid weapon\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect weapon\")\n\n    }\n\n    function abi_encode_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_enum$_Weapon_$1064__to_t_address_t_uint8__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_Weapon_$1064_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6(memPtr) {\n\n        mstore(add(memPtr, 0), \"The room is full.\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Players have already commited\")\n\n    }\n\n    function abi_encode_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b688a3631161008c578063d8c4d9da11610066578063d8c4d9da146101a4578063dfbf53ae146101c2578063fb93247f146101e0578063fce55812146101fe576100cf565b8063b688a3631461015e578063c040e6b814610168578063d30895e414610186576100cf565b80631884824c146100d457806359a5f12d146100f25780637d03f5f3146101105780639dd63d6b1461011a578063a45332a714610124578063ab4a6be114610142575b600080fd5b6100dc61021a565b6040516100e991906114fa565b60405180910390f35b6100fa61022d565b6040516101079190611556565b60405180910390f35b610118610253565b005b6101226103af565b005b61012c61068d565b604051610139919061158a565b60405180910390f35b61015c6004803603810190610157919061160b565b610693565b005b610166610c21565b005b610170610e99565b60405161017d9190611693565b60405180910390f35b61018e610eac565b60405161019b9190611556565b60405180910390f35b6101ac610ed0565b6040516101b991906114fa565b60405180910390f35b6101ca610ee3565b6040516101d79190611556565b60405180910390f35b6101e8610f09565b6040516101f5919061158a565b60405180910390f35b610218600480360381019061021391906116da565b610f0f565b005b600160159054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000801b6002819055506000801b6003819055506000600160146101000a81548160ff0219169083600381111561035257610351611483565b5b02179055506000600160156101000a81548160ff0219169083600381111561037d5761037c611483565b5b02179055506000600460146101000a81548160ff021916908360048111156103a8576103a7611483565b5b0217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104565750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c90611764565b60405180910390fd5b6004808111156104a8576104a7611483565b5b600460149054906101000a900460ff1660048111156104ca576104c9611483565b5b1461050a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610501906117d0565b60405180910390fd5b600060056000600160149054906101000a900460ff16600381111561053257610531611483565b5b600381111561054457610543611483565b5b81526020019081526020016000206000600160159054906101000a900460ff16600381111561057657610575611483565b5b600381111561058857610587611483565b5b815260200190815260200160002060009054906101000a900460ff16905060008160000b14806105bb575060018160000b145b156106265760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061068a565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061073a5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090611764565b60405180910390fd5b816001600381111561078e5761078d611483565b5b8160038111156107a1576107a0611483565b5b14806107d15750600260038111156107bc576107bb611483565b5b8160038111156107cf576107ce611483565b5b145b806107ff57506003808111156107ea576107e9611483565b5b8160038111156107fd576107fc611483565b5b145b61083e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108359061183c565b60405180910390fd5b6002600481111561085257610851611483565b5b600460149054906101000a900460ff16600481111561087457610873611483565b5b14806108b357506003600481111561088f5761088e611483565b5b600460149054906101000a900460ff1660048111156108b1576108b0611483565b5b145b6108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e9906117d0565b60405180910390fd5b6000600261091185600381111561090c5761090b611483565b5b611262565b6109208563ffffffff16611262565b6040516020016109319291906118cd565b60405160208183030381529060405260405161094d91906118f1565b602060405180830381855afa15801561096a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061098d919061191d565b9050600060038111156109a3576109a2611483565b5b8460038111156109b6576109b5611483565b5b036109f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ed90611996565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610a52575060025481145b15610aea5783600160146101000a81548160ff02191690836003811115610a7c57610a7b611483565b5b02179055507f79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b3385604051610ab29291906119b6565b60405180910390a16003600460146101000a81548160ff02191690836004811115610ae057610adf611483565b5b0217905550610c1b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610b48575060035481145b15610bdf5783600160156101000a81548160ff02191690836003811115610b7257610b71611483565b5b02179055507f79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b3385604051610ba89291906119b6565b60405180910390a160048060146101000a81548160ff02191690836004811115610bd557610bd4611483565b5b0217905550610c1a565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1190611996565b60405180910390fd5b5b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614158015610ccb5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b610cd457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610d7d5750600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db390611a2b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610e5557336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e97565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b565b600460149054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fb65750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610ff5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fec90611764565b60405180910390fd5b6000600481111561100957611008611483565b5b600460149054906101000a900460ff16600481111561102b5761102a611483565b5b148061106a57506001600481111561104657611045611483565b5b600460149054906101000a900460ff16600481111561106857611067611483565b5b145b61107357600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156110d257506000801b600254145b156110e35780600281905550611191565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561114457506000801b600354145b156111555780600381905550611190565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118790611a97565b60405180910390fd5b5b7f599481bd81d46ea2372b7f45ab8900ac58961566f184806290d9ede4e0fc7641336040516111c09190611556565b60405180910390a1600060048111156111dc576111db611483565b5b600460149054906101000a900460ff1660048111156111fe576111fd611483565b5b03611233576001600460146101000a81548160ff0219169083600481111561122957611228611483565b5b021790555061125f565b6002600460146101000a81548160ff0219169083600481111561125957611258611483565b5b02179055505b50565b60606000600161127184611330565b01905060008167ffffffffffffffff8111156112905761128f611ab7565b5b6040519080825280601f01601f1916602001820160405280156112c25781602001600182028036833780820191505090505b509050600082602001820190505b600115611325578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161131957611318611ae6565b5b049450600085036112d0575b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138e577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138457611383611ae6565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cb576d04ee2d6d415b85acef810000000083816113c1576113c0611ae6565b5b0492506020810190505b662386f26fc1000083106113fa57662386f26fc1000083816113f0576113ef611ae6565b5b0492506010810190505b6305f5e1008310611423576305f5e100838161141957611418611ae6565b5b0492506008810190505b612710831061144857612710838161143e5761143d611ae6565b5b0492506004810190505b6064831061146b576064838161146157611460611ae6565b5b0492506002810190505b600a831061147a576001810190505b80915050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106114c3576114c2611483565b5b50565b60008190506114d4826114b2565b919050565b60006114e4826114c6565b9050919050565b6114f4816114d9565b82525050565b600060208201905061150f60008301846114eb565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154082611515565b9050919050565b61155081611535565b82525050565b600060208201905061156b6000830184611547565b92915050565b6000819050919050565b61158481611571565b82525050565b600060208201905061159f600083018461157b565b92915050565b600080fd5b600481106115b757600080fd5b50565b6000813590506115c9816115aa565b92915050565b600063ffffffff82169050919050565b6115e8816115cf565b81146115f357600080fd5b50565b600081359050611605816115df565b92915050565b60008060408385031215611622576116216115a5565b5b6000611630858286016115ba565b9250506020611641858286016115f6565b9150509250929050565b6005811061165c5761165b611483565b5b50565b600081905061166d8261164b565b919050565b600061167d8261165f565b9050919050565b61168d81611672565b82525050565b60006020820190506116a86000830184611684565b92915050565b6116b781611571565b81146116c257600080fd5b50565b6000813590506116d4816116ae565b92915050565b6000602082840312156116f0576116ef6115a5565b5b60006116fe848285016116c5565b91505092915050565b600082825260208201905092915050565b7f596f7520617265206e6f7420706c6179696e6720746869732067616d652e0000600082015250565b600061174e601e83611707565b915061175982611718565b602082019050919050565b6000602082019050818103600083015261177d81611741565b9050919050565b7f696e636f72726563742073746167650000000000000000000000000000000000600082015250565b60006117ba600f83611707565b91506117c582611784565b602082019050919050565b600060208201905081810360008301526117e9816117ad565b9050919050565b7f696e76616c696420776561706f6e000000000000000000000000000000000000600082015250565b6000611826600e83611707565b9150611831826117f0565b602082019050919050565b6000602082019050818103600083015261185581611819565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611890578082015181840152602081019050611875565b60008484015250505050565b60006118a78261185c565b6118b18185611867565b93506118c1818560208601611872565b80840191505092915050565b60006118d9828561189c565b91506118e5828461189c565b91508190509392505050565b60006118fd828461189c565b915081905092915050565b600081519050611917816116ae565b92915050565b600060208284031215611933576119326115a5565b5b600061194184828501611908565b91505092915050565b7f696e636f727265637420776561706f6e00000000000000000000000000000000600082015250565b6000611980601083611707565b915061198b8261194a565b602082019050919050565b600060208201905081810360008301526119af81611973565b9050919050565b60006040820190506119cb6000830185611547565b6119d860208301846114eb565b9392505050565b7f54686520726f6f6d2069732066756c6c2e000000000000000000000000000000600082015250565b6000611a15601183611707565b9150611a20826119df565b602082019050919050565b60006020820190508181036000830152611a4481611a08565b9050919050565b7f506c6179657273206861766520616c726561647920636f6d6d69746564000000600082015250565b6000611a81601d83611707565b9150611a8c82611a4b565b602082019050919050565b60006020820190508181036000830152611ab081611a74565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122021769a9f4d38f77d98e2037ad2ea9d7c6df399be9c5a3771cd02ebed2f82403564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB688A363 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xD8C4D9DA GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD8C4D9DA EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xFB93247F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xFCE55812 EQ PUSH2 0x1FE JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0xB688A363 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xD30895E4 EQ PUSH2 0x186 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1884824C EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x59A5F12D EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x7D03F5F3 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x9DD63D6B EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xA45332A7 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xAB4A6BE1 EQ PUSH2 0x142 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x21A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x22D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x253 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x122 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12C PUSH2 0x68D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x166 PUSH2 0xC21 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x170 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x14FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0x158A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH2 0xF0F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SHL PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x352 JUMPI PUSH2 0x351 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37C PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3A8 JUMPI PUSH2 0x3A7 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x456 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x4A8 JUMPI PUSH2 0x4A7 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4C9 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x50A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x501 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x532 JUMPI PUSH2 0x531 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x543 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 PUSH1 0x15 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x588 JUMPI PUSH2 0x587 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 SIGNEXTEND EQ DUP1 PUSH2 0x5BB JUMPI POP PUSH1 0x1 DUP2 PUSH1 0x0 SIGNEXTEND EQ JUMPDEST ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x68A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x73A JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x770 SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x78E JUMPI PUSH2 0x78D PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x7A0 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x7D1 JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x7FF JUMPI POP PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x7EA JUMPI PUSH2 0x7E9 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FD JUMPI PUSH2 0x7FC PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x852 JUMPI PUSH2 0x851 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x874 JUMPI PUSH2 0x873 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x8B3 JUMPI POP PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x88F JUMPI PUSH2 0x88E PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x8B1 JUMPI PUSH2 0x8B0 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x8F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E9 SWAP1 PUSH2 0x17D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x911 DUP6 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x90C JUMPI PUSH2 0x90B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x920 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x931 SWAP3 SWAP2 SWAP1 PUSH2 0x18CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x94D SWAP2 SWAP1 PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x98D SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST DUP5 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9B6 JUMPI PUSH2 0x9B5 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x9F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9ED SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA52 JUMPI POP PUSH1 0x2 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0xAEA JUMPI DUP4 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA7C JUMPI PUSH2 0xA7B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAB2 SWAP3 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xADF PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB48 JUMPI POP PUSH1 0x3 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0xBDF JUMPI DUP4 PUSH1 0x1 PUSH1 0x15 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB71 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xBA8 SWAP3 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBD5 JUMPI PUSH2 0xBD4 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0xC1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC11 SWAP1 PUSH2 0x1996 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0xCD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD7D JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xDBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB3 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE55 JUMPI CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE97 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xFB6 JUMPI POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xFF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFEC SWAP1 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1009 JUMPI PUSH2 0x1008 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x102B JUMPI PUSH2 0x102A PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ DUP1 PUSH2 0x106A JUMPI POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1046 JUMPI PUSH2 0x1045 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1068 JUMPI PUSH2 0x1067 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST EQ JUMPDEST PUSH2 0x1073 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x10D2 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0x2 SLOAD EQ JUMPDEST ISZERO PUSH2 0x10E3 JUMPI DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1144 JUMPI POP PUSH1 0x0 DUP1 SHL PUSH1 0x3 SLOAD EQ JUMPDEST ISZERO PUSH2 0x1155 JUMPI DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1187 SWAP1 PUSH2 0x1A97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH32 0x599481BD81D46EA2372B7F45AB8900AC58961566F184806290D9EDE4E0FC7641 CALLER PUSH1 0x40 MLOAD PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0x1483 JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x11FE JUMPI PUSH2 0x11FD PUSH2 0x1483 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1233 JUMPI PUSH1 0x1 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1229 JUMPI PUSH2 0x1228 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x125F JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1259 JUMPI PUSH2 0x1258 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1271 DUP5 PUSH2 0x1330 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x1AB7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12C2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1325 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1319 JUMPI PUSH2 0x1318 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x12D0 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138E JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1384 JUMPI PUSH2 0x1383 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FA JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1423 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1419 JUMPI PUSH2 0x1418 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1448 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143E JUMPI PUSH2 0x143D PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146B JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1461 JUMPI PUSH2 0x1460 PUSH2 0x1AE6 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147A JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x14C3 JUMPI PUSH2 0x14C2 PUSH2 0x1483 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x14D4 DUP3 PUSH2 0x14B2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E4 DUP3 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F4 DUP2 PUSH2 0x14D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x150F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1540 DUP3 PUSH2 0x1515 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x1535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x156B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1584 DUP2 PUSH2 0x1571 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x159F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x15B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15C9 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E8 DUP2 PUSH2 0x15CF JUMP JUMPDEST DUP2 EQ PUSH2 0x15F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1605 DUP2 PUSH2 0x15DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1622 JUMPI PUSH2 0x1621 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1630 DUP6 DUP3 DUP7 ADD PUSH2 0x15BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1641 DUP6 DUP3 DUP7 ADD PUSH2 0x15F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x165C JUMPI PUSH2 0x165B PUSH2 0x1483 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x166D DUP3 PUSH2 0x164B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167D DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168D DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1684 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16B7 DUP2 PUSH2 0x1571 JUMP JUMPDEST DUP2 EQ PUSH2 0x16C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F0 JUMPI PUSH2 0x16EF PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16FE DUP5 DUP3 DUP6 ADD PUSH2 0x16C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420706C6179696E6720746869732067616D652E0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174E PUSH1 0x1E DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1759 DUP3 PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x177D DUP2 PUSH2 0x1741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E636F72726563742073746167650000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17BA PUSH1 0xF DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C5 DUP3 PUSH2 0x1784 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17E9 DUP2 PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420776561706F6E000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1826 PUSH1 0xE DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1831 DUP3 PUSH2 0x17F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1855 DUP2 PUSH2 0x1819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1890 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1875 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A7 DUP3 PUSH2 0x185C JUMP JUMPDEST PUSH2 0x18B1 DUP2 DUP6 PUSH2 0x1867 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1872 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D9 DUP3 DUP6 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP PUSH2 0x18E5 DUP3 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18FD DUP3 DUP5 PUSH2 0x189C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1917 DUP2 PUSH2 0x16AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1933 JUMPI PUSH2 0x1932 PUSH2 0x15A5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP5 DUP3 DUP6 ADD PUSH2 0x1908 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E636F727265637420776561706F6E00000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1980 PUSH1 0x10 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x198B DUP3 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AF DUP2 PUSH2 0x1973 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19CB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x19D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686520726F6F6D2069732066756C6C2E000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A15 PUSH1 0x11 DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A20 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A44 DUP2 PUSH2 0x1A08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6179657273206861766520616C726561647920636F6D6D69746564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A81 PUSH1 0x1D DUP4 PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8C DUP3 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AB0 DUP2 PUSH2 0x1A74 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 PUSH23 0x9A9F4D38F77D98E2037AD2EA9D7C6DF399BE9C5A3771CD MUL 0xEB 0xED 0x2F DUP3 BLOCKHASH CALLDATALOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "126:4226:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;472:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1238:298;;;:::i;:::-;;4039:311;;;:::i;:::-;;570:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3045:984;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2233:202;;;:::i;:::-;;663:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;635:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2445:594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;535:29;;;;;;;;;;;;;:::o;472:22::-;;;;;;;;;;;;;:::o;1238:298::-;1291:3;1274:6;;:21;;;;;;;;;;;;;;;;;;1323:3;1305:7;;:22;;;;;;;;;;;;;;;;;;1355:3;1337:7;;:22;;;;;;;;;;;;;;;;;;1384:3;1370:17;;:11;:17;;;;1411:3;1397:17;;:11;:17;;;;1443:11;1425:15;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1482:11;1464:15;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1512:17;1504:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1238:298::o;4039:311::-;1759:7;;;;;;;;;;1745:21;;:10;:21;;;:46;;;;1784:7;;;;;;;;;;;1770:21;;:10;:21;;;1745:46;1737:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;4101:16:::1;4092:25:::0;::::1;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:25;;;;;;;;:::i;:::-;;;4084:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4148:11;4167:3;:20;4171:15;;;;;;;;;;;4167:20;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;4188:15;;;;;;;;;;;4167:37;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4148:57;;4238:1;4228:6;:11;;;:26;;;;4253:1;4243:6;:11;;;4228:26;4224:120;;;4279:7;::::0;::::1;;;;;;;;4270:6;;:16;;;;;;;;;;;;;;;;;;4224:120;;;4326:7;;;;;;;;;;;4317:6;;:16;;;;;;;;;;;;;;;;;;4224:120;4074:276;4039:311::o:0;570:26::-;;;;:::o;3045:984::-;1759:7;;;;;;;;;;1745:21;;:10;:21;;;:46;;;;1784:7;;;;;;;;;;;1770:21;;:10;:21;;;1745:46;1737:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3131:6:::1;1947:11;1937:21;;;;;;;;:::i;:::-;;:6;:21;;;;;;;;:::i;:::-;;;:47;;;;1972:12;1962:22;;;;;;;;:::i;:::-;;:6;:22;;;;;;;;:::i;:::-;;;1937:47;:76;;;;1998:15;1988:25:::0;::::1;;;;;;;:::i;:::-;;:6;:25;;;;;;;;:::i;:::-;;;1937:76;1929:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;3170:17:::2;3161:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;:57;;;;3200:18;3191:27;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:27;;;;;;;;:::i;:::-;;;3161:57;3153:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3249:22;3274:161;3330:33;3355:6;3347:15;;;;;;;;:::i;:::-;;3330:16;:33::i;:::-;3388:22;3405:4;3388:22;;:16;:22::i;:::-;3294:131;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3274:161;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3249:186;;3460:11;3450:21;;;;;;;;:::i;:::-;;:6;:21;;;;;;;;:::i;:::-;;::::0;3446:78:::2;;3487:26;;;;;;;;;;:::i;:::-;;;;;;;;3446:78;3552:7;::::0;::::2;;;;;;;;3538:21;;:10;:21;;;:74;;;;;3601:11;;3583:14;:29;3538:74;3534:489;;;3646:6;3628:15;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3671:26;3678:10;3690:6;3671:26;;;;;;;:::i;:::-;;;;;;;;3719:18;3711:5;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3534:489;;;3772:7;;;;;;;;;;;3758:21;;:10;:21;;;:74;;;;;3821:11;;3803:14;:29;3758:74;3754:269;;;3866:6;3848:15;;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3891:26;3898:10;3910:6;3891:26;;;;;;;:::i;:::-;;;;;;;;3939:16;3931:5:::0;::::2;:24;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3754:269;;;3986:26;;;;;;;;;;:::i;:::-;;;;;;;;3754:269;3534:489;3143:886;1861:1:::1;3045:984:::0;;:::o;2233:202::-;2124:7;;;;;;;;;;2110:21;;:10;:21;;;;:62;;;;;2165:7;;;;;;;;;;;2151:21;;:10;:21;;;;2110:62;2089:93;;;;;;1605:1:::1;1586:21;;:7;::::0;::::1;;;;;;;;:21;;;:46;;;;1630:1;1611:21;;:7;;;;;;;;;;;:21;;;1586:46;1578:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;2328:1:::2;2309:21;;:7;::::0;::::2;;;;;;;;:21;;::::0;2305:123:::2;;2356:10;2346:7;::::0;:20:::2;;;;;;;;;;;;;;;;;;2305:123;;;2418:10;2408:7;;:20;;;;;;;;;;;;;;;;;;2305:123;2233:202::o:0;663:38::-;;;;;;;;;;;;;:::o;444:22::-;;;;;;;;;;;;:::o;500:29::-;;;;;;;;;;;;;:::o;635:21::-;;;;;;;;;;;;;:::o;602:26::-;;;;:::o;2445:594::-;1759:7;;;;;;;;;;1745:21;;:10;:21;;;:46;;;;1784:7;;;;;;;;;;;1770:21;;:10;:21;;;1745:46;1737:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;2522:17:::1;2513:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;;:57;;;;2552:18;2543:27;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:27;;;;;;;;:::i;:::-;;;2513:57;2505:66;;;::::0;::::1;;2600:7;::::0;::::1;;;;;;;;2586:21;;:10;:21;;;:67;;;;;2650:3;2635:18:::0;::::1;:11;;:18;2586:67;2582:308;;;2683:4;2669:11;:18;;;;2582:308;;;2722:7;;;;;;;;;;;2708:21;;:10;:21;;;:67;;;;;2772:3;2757:18:::0;::::1;:11;;:18;2708:67;2704:186;;;2805:4;2791:11;:18;;;;2704:186;;;2840:39;;;;;;;;;;:::i;:::-;;;;;;;;2704:186;2582:308;2905:18;2912:10;2905:18;;;;;;:::i;:::-;;;;;;;;2946:17;2937:26;;;;;;;;:::i;:::-;;:5;;;;;;;;;;;:26;;;;;;;;:::i;:::-;;::::0;2934:98:::1;;2973:18;2965:5;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2934:98;;;3015:17;3007:5;;:25;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2934:98;2445:594:::0;:::o;415:696:0:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;788:280;1032:21;788:280;1088:6;1081:13;;;;;415:696;;;:::o;9889:890:1:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;7:180:3:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:116;277:1;270:5;267:12;257:46;;283:18;;:::i;:::-;257:46;193:116;:::o;315:133::-;363:7;392:5;381:16;;398:44;436:5;398:44;:::i;:::-;315:133;;;:::o;454:::-;513:9;546:35;575:5;546:35;:::i;:::-;533:48;;454:133;;;:::o;593:149::-;689:46;729:5;689:46;:::i;:::-;684:3;677:59;593:149;;:::o;748:240::-;850:4;888:2;877:9;873:18;865:26;;901:80;978:1;967:9;963:17;954:6;901:80;:::i;:::-;748:240;;;;:::o;994:126::-;1031:7;1071:42;1064:5;1060:54;1049:65;;994:126;;;:::o;1126:96::-;1163:7;1192:24;1210:5;1192:24;:::i;:::-;1181:35;;1126:96;;;:::o;1228:118::-;1315:24;1333:5;1315:24;:::i;:::-;1310:3;1303:37;1228:118;;:::o;1352:222::-;1445:4;1483:2;1472:9;1468:18;1460:26;;1496:71;1564:1;1553:9;1549:17;1540:6;1496:71;:::i;:::-;1352:222;;;;:::o;1580:77::-;1617:7;1646:5;1635:16;;1580:77;;;:::o;1663:118::-;1750:24;1768:5;1750:24;:::i;:::-;1745:3;1738:37;1663:118;;:::o;1787:222::-;1880:4;1918:2;1907:9;1903:18;1895:26;;1931:71;1999:1;1988:9;1984:17;1975:6;1931:71;:::i;:::-;1787:222;;;;:::o;2096:117::-;2205:1;2202;2195:12;2342:110;2426:1;2419:5;2416:12;2406:40;;2442:1;2439;2432:12;2406:40;2342:110;:::o;2458:161::-;2515:5;2553:6;2540:20;2531:29;;2569:44;2607:5;2569:44;:::i;:::-;2458:161;;;;:::o;2625:93::-;2661:7;2701:10;2694:5;2690:22;2679:33;;2625:93;;;:::o;2724:120::-;2796:23;2813:5;2796:23;:::i;:::-;2789:5;2786:34;2776:62;;2834:1;2831;2824:12;2776:62;2724:120;:::o;2850:137::-;2895:5;2933:6;2920:20;2911:29;;2949:32;2975:5;2949:32;:::i;:::-;2850:137;;;;:::o;2993:494::-;3071:6;3079;3128:2;3116:9;3107:7;3103:23;3099:32;3096:119;;;3134:79;;:::i;:::-;3096:119;3254:1;3279:64;3335:7;3326:6;3315:9;3311:22;3279:64;:::i;:::-;3269:74;;3225:128;3392:2;3418:52;3462:7;3453:6;3442:9;3438:22;3418:52;:::i;:::-;3408:62;;3363:117;2993:494;;;;;:::o;3493:115::-;3576:1;3569:5;3566:12;3556:46;;3582:18;;:::i;:::-;3556:46;3493:115;:::o;3614:131::-;3661:7;3690:5;3679:16;;3696:43;3733:5;3696:43;:::i;:::-;3614:131;;;:::o;3751:::-;3809:9;3842:34;3870:5;3842:34;:::i;:::-;3829:47;;3751:131;;;:::o;3888:147::-;3983:45;4022:5;3983:45;:::i;:::-;3978:3;3971:58;3888:147;;:::o;4041:238::-;4142:4;4180:2;4169:9;4165:18;4157:26;;4193:79;4269:1;4258:9;4254:17;4245:6;4193:79;:::i;:::-;4041:238;;;;:::o;4285:122::-;4358:24;4376:5;4358:24;:::i;:::-;4351:5;4348:35;4338:63;;4397:1;4394;4387:12;4338:63;4285:122;:::o;4413:139::-;4459:5;4497:6;4484:20;4475:29;;4513:33;4540:5;4513:33;:::i;:::-;4413:139;;;;:::o;4558:329::-;4617:6;4666:2;4654:9;4645:7;4641:23;4637:32;4634:119;;;4672:79;;:::i;:::-;4634:119;4792:1;4817:53;4862:7;4853:6;4842:9;4838:22;4817:53;:::i;:::-;4807:63;;4763:117;4558:329;;;;:::o;4893:169::-;4977:11;5011:6;5006:3;4999:19;5051:4;5046:3;5042:14;5027:29;;4893:169;;;;:::o;5068:180::-;5208:32;5204:1;5196:6;5192:14;5185:56;5068:180;:::o;5254:366::-;5396:3;5417:67;5481:2;5476:3;5417:67;:::i;:::-;5410:74;;5493:93;5582:3;5493:93;:::i;:::-;5611:2;5606:3;5602:12;5595:19;;5254:366;;;:::o;5626:419::-;5792:4;5830:2;5819:9;5815:18;5807:26;;5879:9;5873:4;5869:20;5865:1;5854:9;5850:17;5843:47;5907:131;6033:4;5907:131;:::i;:::-;5899:139;;5626:419;;;:::o;6051:165::-;6191:17;6187:1;6179:6;6175:14;6168:41;6051:165;:::o;6222:366::-;6364:3;6385:67;6449:2;6444:3;6385:67;:::i;:::-;6378:74;;6461:93;6550:3;6461:93;:::i;:::-;6579:2;6574:3;6570:12;6563:19;;6222:366;;;:::o;6594:419::-;6760:4;6798:2;6787:9;6783:18;6775:26;;6847:9;6841:4;6837:20;6833:1;6822:9;6818:17;6811:47;6875:131;7001:4;6875:131;:::i;:::-;6867:139;;6594:419;;;:::o;7019:164::-;7159:16;7155:1;7147:6;7143:14;7136:40;7019:164;:::o;7189:366::-;7331:3;7352:67;7416:2;7411:3;7352:67;:::i;:::-;7345:74;;7428:93;7517:3;7428:93;:::i;:::-;7546:2;7541:3;7537:12;7530:19;;7189:366;;;:::o;7561:419::-;7727:4;7765:2;7754:9;7750:18;7742:26;;7814:9;7808:4;7804:20;7800:1;7789:9;7785:17;7778:47;7842:131;7968:4;7842:131;:::i;:::-;7834:139;;7561:419;;;:::o;7986:98::-;8037:6;8071:5;8065:12;8055:22;;7986:98;;;:::o;8090:147::-;8191:11;8228:3;8213:18;;8090:147;;;;:::o;8243:246::-;8324:1;8334:113;8348:6;8345:1;8342:13;8334:113;;;8433:1;8428:3;8424:11;8418:18;8414:1;8409:3;8405:11;8398:39;8370:2;8367:1;8363:10;8358:15;;8334:113;;;8481:1;8472:6;8467:3;8463:16;8456:27;8305:184;8243:246;;;:::o;8495:386::-;8599:3;8627:38;8659:5;8627:38;:::i;:::-;8681:88;8762:6;8757:3;8681:88;:::i;:::-;8674:95;;8778:65;8836:6;8831:3;8824:4;8817:5;8813:16;8778:65;:::i;:::-;8868:6;8863:3;8859:16;8852:23;;8603:278;8495:386;;;;:::o;8887:427::-;9063:3;9085:93;9174:3;9165:6;9085:93;:::i;:::-;9078:100;;9195:93;9284:3;9275:6;9195:93;:::i;:::-;9188:100;;9305:3;9298:10;;8887:427;;;;;:::o;9320:271::-;9450:3;9472:93;9561:3;9552:6;9472:93;:::i;:::-;9465:100;;9582:3;9575:10;;9320:271;;;;:::o;9597:143::-;9654:5;9685:6;9679:13;9670:22;;9701:33;9728:5;9701:33;:::i;:::-;9597:143;;;;:::o;9746:351::-;9816:6;9865:2;9853:9;9844:7;9840:23;9836:32;9833:119;;;9871:79;;:::i;:::-;9833:119;9991:1;10016:64;10072:7;10063:6;10052:9;10048:22;10016:64;:::i;:::-;10006:74;;9962:128;9746:351;;;;:::o;10103:166::-;10243:18;10239:1;10231:6;10227:14;10220:42;10103:166;:::o;10275:366::-;10417:3;10438:67;10502:2;10497:3;10438:67;:::i;:::-;10431:74;;10514:93;10603:3;10514:93;:::i;:::-;10632:2;10627:3;10623:12;10616:19;;10275:366;;;:::o;10647:419::-;10813:4;10851:2;10840:9;10836:18;10828:26;;10900:9;10894:4;10890:20;10886:1;10875:9;10871:17;10864:47;10928:131;11054:4;10928:131;:::i;:::-;10920:139;;10647:419;;;:::o;11072:350::-;11202:4;11240:2;11229:9;11225:18;11217:26;;11253:71;11321:1;11310:9;11306:17;11297:6;11253:71;:::i;:::-;11334:81;11411:2;11400:9;11396:18;11387:6;11334:81;:::i;:::-;11072:350;;;;;:::o;11428:167::-;11568:19;11564:1;11556:6;11552:14;11545:43;11428:167;:::o;11601:366::-;11743:3;11764:67;11828:2;11823:3;11764:67;:::i;:::-;11757:74;;11840:93;11929:3;11840:93;:::i;:::-;11958:2;11953:3;11949:12;11942:19;;11601:366;;;:::o;11973:419::-;12139:4;12177:2;12166:9;12162:18;12154:26;;12226:9;12220:4;12216:20;12212:1;12201:9;12197:17;12190:47;12254:131;12380:4;12254:131;:::i;:::-;12246:139;;11973:419;;;:::o;12398:179::-;12538:31;12534:1;12526:6;12522:14;12515:55;12398:179;:::o;12583:366::-;12725:3;12746:67;12810:2;12805:3;12746:67;:::i;:::-;12739:74;;12822:93;12911:3;12822:93;:::i;:::-;12940:2;12935:3;12931:12;12924:19;;12583:366;;;:::o;12955:419::-;13121:4;13159:2;13148:9;13144:18;13136:26;;13208:9;13202:4;13198:20;13194:1;13183:9;13179:17;13172:47;13236:131;13362:4;13236:131;:::i;:::-;13228:139;;12955:419;;;:::o;13380:180::-;13428:77;13425:1;13418:88;13525:4;13522:1;13515:15;13549:4;13546:1;13539:15;13566:180;13614:77;13611:1;13604:88;13711:4;13708:1;13701:15;13735:4;13732:1;13725:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1397400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"endgame()": "40076",
								"join()": "35307",
								"makeChoice(bytes32)": "67954",
								"newGame()": "156041",
								"player1()": "2578",
								"player1Hash()": "2518",
								"player2()": "2537",
								"player2Hash()": "2495",
								"reveal(uint8,uint32)": "infinite",
								"stage()": "2655",
								"weaponOfPlayer1()": "2632",
								"weaponOfPlayer2()": "2611",
								"winner()": "2558"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 684,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 663,
									"end": 701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 663,
									"end": 701,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 663,
									"end": 701,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 774,
									"end": 1232,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 801,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 802,
									"end": 813,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 798,
									"end": 814,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 814,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 815,
									"end": 826,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 798,
									"end": 827,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 827,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 798,
									"end": 827,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 798,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 798,
									"end": 831,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 798,
									"end": 831,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 798,
									"end": 831,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 798,
									"end": 831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 881,
									"end": 882,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 844,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 845,
									"end": 860,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 841,
									"end": 861,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 861,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 877,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 841,
									"end": 878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 878,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 841,
									"end": 878,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 882,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 841,
									"end": 882,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 841,
									"end": 882,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 841,
									"end": 882,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 841,
									"end": 882,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 895,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 896,
									"end": 908,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 892,
									"end": 909,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 909,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 910,
									"end": 922,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 892,
									"end": 923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 923,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 892,
									"end": 923,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 927,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 892,
									"end": 927,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 892,
									"end": 927,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 892,
									"end": 927,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 892,
									"end": 927,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 973,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 937,
									"end": 940,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 952,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 937,
									"end": 953,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 953,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 954,
									"end": 969,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 937,
									"end": 970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 970,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 937,
									"end": 970,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 937,
									"end": 974,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 937,
									"end": 974,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 937,
									"end": 974,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 937,
									"end": 974,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 984,
									"end": 987,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 988,
									"end": 1000,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 1001,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1002,
									"end": 1013,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 984,
									"end": 1014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "tag",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1014,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 984,
									"end": 1018,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1065,
									"end": 1066,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1028,
									"end": 1031,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1032,
									"end": 1047,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "tag",
									"source": 2,
									"value": "47"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "tag",
									"source": 2,
									"value": "50"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "tag",
									"source": 2,
									"value": "49"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1028,
									"end": 1048,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "tag",
									"source": 2,
									"value": "52"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "tag",
									"source": 2,
									"value": "51"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1028,
									"end": 1062,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "tag",
									"source": 2,
									"value": "54"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "tag",
									"source": 2,
									"value": "53"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1062,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1028,
									"end": 1066,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1109,
									"end": 1110,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1076,
									"end": 1079,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "tag",
									"source": 2,
									"value": "56"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "tag",
									"source": 2,
									"value": "55"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "tag",
									"source": 2,
									"value": "58"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "tag",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1092,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1093,
									"end": 1105,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "tag",
									"source": 2,
									"value": "59"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1076,
									"end": 1106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "tag",
									"source": 2,
									"value": "62"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "tag",
									"source": 2,
									"value": "61"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1106,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1076,
									"end": 1110,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1157,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1120,
									"end": 1123,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1124,
									"end": 1136,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 2,
									"value": "63"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1137,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "tag",
									"source": 2,
									"value": "65"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1137,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1153,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "68"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "67"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1120,
									"end": 1154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "70"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "tag",
									"source": 2,
									"value": "69"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1154,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1120,
									"end": 1158,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1204,
									"end": 1205,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1168,
									"end": 1171,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1172,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "tag",
									"source": 2,
									"value": "72"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "tag",
									"source": 2,
									"value": "71"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "tag",
									"source": 2,
									"value": "74"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "tag",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1189,
									"end": 1200,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "tag",
									"source": 2,
									"value": "76"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "tag",
									"source": 2,
									"value": "75"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1168,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "tag",
									"source": 2,
									"value": "78"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "tag",
									"source": 2,
									"value": "77"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1201,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1168,
									"end": 1205,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1216,
									"end": 1225,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 1216,
									"end": 1223,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1216,
									"end": 1223,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1216,
									"end": 1223,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1216,
									"end": 1225,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1216,
									"end": 1225,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1216,
									"end": 1225,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1216,
									"end": 1225,
									"name": "tag",
									"source": 2,
									"value": "79"
								},
								{
									"begin": 1216,
									"end": 1225,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1536,
									"name": "tag",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1238,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1291,
									"end": 1294,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1274,
									"end": 1280,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1274,
									"end": 1280,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1274,
									"end": 1295,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1323,
									"end": 1326,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1312,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1305,
									"end": 1327,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1337,
									"end": 1359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1384,
									"end": 1387,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1381,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1387,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1411,
									"end": 1414,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1397,
									"end": 1408,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1397,
									"end": 1414,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1443,
									"end": 1454,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1425,
									"end": 1440,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1425,
									"end": 1440,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1425,
									"end": 1454,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "tag",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "tag",
									"source": 2,
									"value": "83"
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1425,
									"end": 1454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1464,
									"end": 1479,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1464,
									"end": 1479,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1464,
									"end": 1493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "tag",
									"source": 2,
									"value": "86"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "tag",
									"source": 2,
									"value": "85"
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1464,
									"end": 1493,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1512,
									"end": 1529,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1504,
									"end": 1509,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1504,
									"end": 1509,
									"name": "PUSH",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1504,
									"end": 1529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "tag",
									"source": 2,
									"value": "88"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "tag",
									"source": 2,
									"value": "87"
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1504,
									"end": 1529,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1238,
									"end": 1536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "tag",
									"source": 2,
									"value": "81"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 4352,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122021769a9f4d38f77d98e2037ad2ea9d7c6df399be9c5a3771cd02ebed2f82403564736f6c63430008110033",
									".code": [
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "B688A363"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "D8C4D9DA"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "D8C4D9DA"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "DFBF53AE"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "FB93247F"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "FCE55812"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "B688A363"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "C040E6B8"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "D30895E4"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "1884824C"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "59A5F12D"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "7D03F5F3"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "9DD63D6B"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "A45332A7"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "AB4A6BE1"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 126,
											"end": 4352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 535,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 535,
											"end": 564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 472,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 472,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1238,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4039,
											"end": 4350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 570,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 570,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3045,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3045,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2233,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 444,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 444,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 500,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 635,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 635,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 602,
											"end": 628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2445,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2445,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 535,
											"end": 564,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 535,
											"end": 564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 472,
											"end": 494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1238,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1291,
											"end": 1294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1326,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1305,
											"end": 1327,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1337,
											"end": 1344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1381,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1411,
											"end": 1414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1408,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1425,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1425,
											"end": 1454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1425,
											"end": 1454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1464,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1464,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1512,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1504,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1504,
											"end": 1529,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4039,
											"end": 4350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1737,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4101,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4117,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4092,
											"end": 4117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4092,
											"end": 4097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4092,
											"end": 4117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4092,
											"end": 4117,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4084,
											"end": 4137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 4084,
											"end": 4137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4171,
											"end": 4186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4167,
											"end": 4187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4167,
											"end": 4187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4187,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4188,
											"end": 4203,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4167,
											"end": 4204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4167,
											"end": 4204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4167,
											"end": 4204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4205,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4148,
											"end": 4205,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4238,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4239,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4253,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4243,
											"end": 4249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 4243,
											"end": 4254,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4228,
											"end": 4254,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4279,
											"end": 4286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4270,
											"end": 4276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4326,
											"end": 4333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4317,
											"end": 4323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 4317,
											"end": 4333,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4224,
											"end": 4344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4039,
											"end": 4350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 570,
											"end": 596,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 570,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1737,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3131,
											"end": 3137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1937,
											"end": 1958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1937,
											"end": 1958,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1958,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1972,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 1984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 1984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1984,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1937,
											"end": 1984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1998,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1988,
											"end": 2013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1988,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 1994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1988,
											"end": 2013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2013,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1937,
											"end": 2013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1929,
											"end": 2032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 1929,
											"end": 2032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3161,
											"end": 3187,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3161,
											"end": 3166,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3161,
											"end": 3187,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3187,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3200,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3191,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3196,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3191,
											"end": 3218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3191,
											"end": 3218,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 3161,
											"end": 3218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3153,
											"end": 3238,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3153,
											"end": 3238,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3330,
											"end": 3363,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3355,
											"end": 3361,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3347,
											"end": 3362,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3347,
											"end": 3362,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3346,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3330,
											"end": 3363,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3363,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3330,
											"end": 3363,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3405,
											"end": 3409,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3410,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3404,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3388,
											"end": 3410,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3388,
											"end": 3410,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3388,
											"end": 3410,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3294,
											"end": 3425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3425,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 3274,
											"end": 3435,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3274,
											"end": 3435,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3274,
											"end": 3435,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3435,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3249,
											"end": 3435,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3460,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3450,
											"end": 3471,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3456,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3450,
											"end": 3471,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3450,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3524,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3446,
											"end": 3524,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3487,
											"end": 3513,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3513,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3446,
											"end": 3524,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 3446,
											"end": 3524,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3559,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3552,
											"end": 3559,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3548,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3559,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3601,
											"end": 3612,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3597,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3583,
											"end": 3612,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 3538,
											"end": 3612,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3646,
											"end": 3652,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3643,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3628,
											"end": 3643,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3628,
											"end": 3652,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3652,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B"
										},
										{
											"begin": 3678,
											"end": 3688,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3690,
											"end": 3696,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3671,
											"end": 3697,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3697,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3711,
											"end": 3716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3711,
											"end": 3716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3711,
											"end": 3737,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3737,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3772,
											"end": 3779,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3768,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3779,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3821,
											"end": 3832,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3821,
											"end": 3832,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3832,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3758,
											"end": 3832,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3872,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3863,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3848,
											"end": 3863,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3848,
											"end": 3872,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3848,
											"end": 3872,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "79A7276BA83FEF4FE13F88DF855C8420D094DE7D84D1D4A3BC10554A841BD80B"
										},
										{
											"begin": 3898,
											"end": 3908,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3910,
											"end": 3916,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3891,
											"end": 3917,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3917,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 3939,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3931,
											"end": 3955,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3931,
											"end": 3955,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 3986,
											"end": 4012,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3986,
											"end": 4012,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3754,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3534,
											"end": 4023,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3143,
											"end": 4029,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1861,
											"end": 1862,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2233,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2131,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2165,
											"end": 2172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2161,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2151,
											"end": 2172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2110,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2089,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1593,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1593,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1607,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1630,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1618,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1632,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1611,
											"end": 1632,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1632,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 1586,
											"end": 1632,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1578,
											"end": 1679,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 1578,
											"end": 1679,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2329,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2330,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2330,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2316,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2330,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2309,
											"end": 2330,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2309,
											"end": 2330,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2366,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2366,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2428,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2408,
											"end": 2415,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2305,
											"end": 2428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2233,
											"end": 2435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 444,
											"end": 466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 444,
											"end": 466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 500,
											"end": 529,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 500,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 635,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 602,
											"end": 628,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 602,
											"end": 628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1755,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1745,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1737,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1737,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2522,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2513,
											"end": 2539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2513,
											"end": 2518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2513,
											"end": 2539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2539,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2543,
											"end": 2548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2570,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2513,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2505,
											"end": 2571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2505,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2596,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2607,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2607,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2653,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2653,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2635,
											"end": 2646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2635,
											"end": 2653,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 2586,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2669,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2669,
											"end": 2687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2718,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2729,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2772,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2757,
											"end": 2768,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2757,
											"end": 2775,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2708,
											"end": 2775,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2805,
											"end": 2809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2791,
											"end": 2809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2809,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2840,
											"end": 2879,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2840,
											"end": 2879,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2704,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2582,
											"end": 2890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "599481BD81D46EA2372B7F45AB8900AC58961566F184806290D9EDE4E0FC7641"
										},
										{
											"begin": 2912,
											"end": 2922,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2905,
											"end": 2923,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2905,
											"end": 2923,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2937,
											"end": 2963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2937,
											"end": 2942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2937,
											"end": 2963,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2937,
											"end": 2963,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2963,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2973,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2965,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 2970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2965,
											"end": 2991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2965,
											"end": 2991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3015,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3007,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3007,
											"end": 3032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 2934,
											"end": 3032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 3039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 471,
											"end": 484,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 520,
											"end": 534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 548,
											"end": 553,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 537,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 537,
											"end": 554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 537,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 537,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 537,
											"end": 558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 520,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 595,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 595,
											"end": 613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 595,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 627,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 749,
											"end": 751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 760,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 733,
											"end": 761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 726,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 726,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 819,
											"end": 824,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 958,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 946,
											"end": 951,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 942,
											"end": 956,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 937,
											"end": 967,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 932,
											"end": 935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 924,
											"end": 968,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1003,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1032,
											"end": 1053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 788,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 415,
											"end": 1111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10026,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10017,
											"end": 10032,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10067,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10052,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10097,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 10013,
											"end": 10112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10144,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10173,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10164,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10164,
											"end": 10179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10207,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 10125,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10241,
											"end": 10246,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10241,
											"end": 10256,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10291,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10276,
											"end": 10291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10321,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 10237,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10353,
											"end": 10358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10353,
											"end": 10367,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10401,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10387,
											"end": 10401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10387,
											"end": 10401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10419,
											"end": 10430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 10349,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10476,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10462,
											"end": 10476,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10505,
											"end": 10510,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10496,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10538,
											"end": 10539,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10528,
											"end": 10539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 10458,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10585,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10571,
											"end": 10576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10585,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10614,
											"end": 10619,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 10605,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10647,
											"end": 10648,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10567,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 10694,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 10680,
											"end": 10685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10694,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10676,
											"end": 10740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10766,
											"end": 10772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9889,
											"end": 10779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 187,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 7,
											"end": 187,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 55,
											"end": 132,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52,
											"end": 53,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 45,
											"end": 133,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 149,
											"end": 150,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 157,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 176,
											"end": 180,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 173,
											"end": 174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 181,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 193,
											"end": 309,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 193,
											"end": 309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 275,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 267,
											"end": 279,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 257,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 257,
											"end": 303,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 283,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 283,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 283,
											"end": 301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 283,
											"end": 301,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 283,
											"end": 301,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 257,
											"end": 303,
											"name": "tag",
											"source": 3,
											"value": "286"
										},
										{
											"begin": 257,
											"end": 303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 193,
											"end": 309,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 193,
											"end": 309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 315,
											"end": 448,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 315,
											"end": 448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 363,
											"end": 370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 397,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 381,
											"end": 397,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 397,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 398,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 436,
											"end": 441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 398,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 398,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 398,
											"end": 442,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 398,
											"end": 442,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 315,
											"end": 448,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 315,
											"end": 448,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 315,
											"end": 448,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 315,
											"end": 448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 587,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 454,
											"end": 587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 513,
											"end": 522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 546,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 575,
											"end": 580,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 546,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 546,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 546,
											"end": 581,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 546,
											"end": 581,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 533,
											"end": 581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 533,
											"end": 581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 454,
											"end": 587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 454,
											"end": 587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 454,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 742,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 593,
											"end": 742,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 689,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 689,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 689,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 689,
											"end": 735,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 689,
											"end": 735,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 677,
											"end": 736,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 593,
											"end": 742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 742,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 593,
											"end": 742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 748,
											"end": 988,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 850,
											"end": 854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 890,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 873,
											"end": 891,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 865,
											"end": 891,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 865,
											"end": 891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 978,
											"end": 979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 976,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 963,
											"end": 980,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 954,
											"end": 960,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 901,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 901,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 901,
											"end": 981,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 901,
											"end": 981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 748,
											"end": 988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1120,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 994,
											"end": 1120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1031,
											"end": 1038,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1049,
											"end": 1114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 994,
											"end": 1120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1222,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1126,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1163,
											"end": 1170,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1192,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 1210,
											"end": 1215,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 1192,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1192,
											"end": 1216,
											"name": "tag",
											"source": 3,
											"value": "298"
										},
										{
											"begin": 1192,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1216,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1181,
											"end": 1216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1222,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1222,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1222,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1126,
											"end": 1222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1346,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1228,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 1333,
											"end": 1338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 1315,
											"end": 1339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 1315,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1310,
											"end": 1313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1340,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1445,
											"end": 1449,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1485,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1481,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1468,
											"end": 1486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1549,
											"end": 1566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1540,
											"end": 1546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 1496,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 1496,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1352,
											"end": 1574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1657,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1580,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1617,
											"end": 1624,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1651,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1580,
											"end": 1657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1781,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1663,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 1768,
											"end": 1773,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 1750,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1774,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 1750,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1775,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1918,
											"end": 1920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1907,
											"end": 1916,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1903,
											"end": 1921,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 1999,
											"end": 2000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 1931,
											"end": 2002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1931,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 1931,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2096,
											"end": 2213,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 2096,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2207,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2452,
											"name": "tag",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2342,
											"end": 2452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2419,
											"end": 2424,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2416,
											"end": 2428,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2406,
											"end": 2446,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2440,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2444,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2406,
											"end": 2446,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2406,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "tag",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2515,
											"end": 2520,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2560,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2560,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2531,
											"end": 2560,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2607,
											"end": 2612,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "254"
										},
										{
											"begin": 2569,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2569,
											"end": 2613,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2569,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2458,
											"end": 2619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2718,
											"name": "tag",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2625,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2699,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2712,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2712,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2718,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2718,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2718,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2844,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2724,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "256"
										},
										{
											"begin": 2796,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2796,
											"end": 2819,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 2796,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2789,
											"end": 2794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2820,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 2776,
											"end": 2838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2834,
											"end": 2835,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2832,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 2776,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2844,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2900,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2940,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2911,
											"end": 2940,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 2975,
											"end": 2980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 2949,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2949,
											"end": 2981,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 2949,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3107,
											"end": 3114,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3103,
											"end": 3126,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3099,
											"end": 3131,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3215,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3096,
											"end": 3215,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 3134,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 3134,
											"end": 3213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3213,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 3134,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3096,
											"end": 3215,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3096,
											"end": 3215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3324,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "255"
										},
										{
											"begin": 3279,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3343,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 3279,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3269,
											"end": 3343,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3353,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3392,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3418,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3453,
											"end": 3459,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3460,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 3418,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3418,
											"end": 3470,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 3418,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3408,
											"end": 3470,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2993,
											"end": 3487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3608,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3493,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 3577,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 3556,
											"end": 3602,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3582,
											"end": 3600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3602,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 3556,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3493,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3745,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3614,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3695,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 3733,
											"end": 3738,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 3696,
											"end": 3739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3696,
											"end": 3739,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 3696,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3745,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3614,
											"end": 3745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3882,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3751,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3818,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 3842,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3876,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3829,
											"end": 3876,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3882,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3882,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3882,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 3882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4035,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 3888,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 4022,
											"end": 4027,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 3983,
											"end": 4028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 3983,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4035,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 4035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4146,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4182,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4183,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4157,
											"end": 4183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 4269,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4258,
											"end": 4267,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4254,
											"end": 4271,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4245,
											"end": 4251,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 4193,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4272,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 4193,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4041,
											"end": 4279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4407,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4285,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4358,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 4376,
											"end": 4381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4358,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 4358,
											"end": 4382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4358,
											"end": 4382,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 4358,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4356,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4383,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4338,
											"end": 4401,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4338,
											"end": 4401,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4338,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4285,
											"end": 4407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "tag",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4459,
											"end": 4464,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4484,
											"end": 4504,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4475,
											"end": 4504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4540,
											"end": 4545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 4513,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4513,
											"end": 4546,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4513,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4617,
											"end": 4623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4645,
											"end": 4652,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4641,
											"end": 4664,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4637,
											"end": 4669,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4753,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 4634,
											"end": 4753,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 4672,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 4672,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4672,
											"end": 4751,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 4672,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4753,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 4634,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 4862,
											"end": 4869,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4859,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4838,
											"end": 4860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "264"
										},
										{
											"begin": 4817,
											"end": 4870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 4817,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4870,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4763,
											"end": 4880,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4558,
											"end": 4887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 4988,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5017,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5006,
											"end": 5009,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4999,
											"end": 5018,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5051,
											"end": 5055,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5042,
											"end": 5056,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5027,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4893,
											"end": 5062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5248,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5068,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5208,
											"end": 5240,
											"name": "PUSH",
											"source": 3,
											"value": "596F7520617265206E6F7420706C6179696E6720746869732067616D652E0000"
										},
										{
											"begin": 5204,
											"end": 5205,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5202,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5241,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5068,
											"end": 5248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5620,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5254,
											"end": 5620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5396,
											"end": 5399,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 5481,
											"end": 5483,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 5476,
											"end": 5479,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 5417,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5417,
											"end": 5484,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 5417,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5484,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5410,
											"end": 5484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 5582,
											"end": 5585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 5493,
											"end": 5586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5493,
											"end": 5586,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 5493,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5611,
											"end": 5613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5602,
											"end": 5614,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5595,
											"end": 5614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5254,
											"end": 5620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5626,
											"end": 6045,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 5626,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5832,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5877,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5889,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5890,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5907,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 6033,
											"end": 6037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5907,
											"end": 6038,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 5907,
											"end": 6038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5907,
											"end": 6038,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 5907,
											"end": 6038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5899,
											"end": 6038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5899,
											"end": 6038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5626,
											"end": 6045,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5626,
											"end": 6045,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5626,
											"end": 6045,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5626,
											"end": 6045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6216,
											"name": "tag",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6051,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6191,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "696E636F72726563742073746167650000000000000000000000000000000000"
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6175,
											"end": 6189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6168,
											"end": 6209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6216,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6051,
											"end": 6216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6588,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6222,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6364,
											"end": 6367,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6449,
											"end": 6451,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 6444,
											"end": 6447,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 6385,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6385,
											"end": 6452,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 6385,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6378,
											"end": 6452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6550,
											"end": 6553,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 6461,
											"end": 6554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6461,
											"end": 6554,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 6461,
											"end": 6554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6579,
											"end": 6581,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6563,
											"end": 6582,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6588,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6222,
											"end": 6588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7013,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6594,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6764,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6800,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6787,
											"end": 6796,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6801,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6801,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6775,
											"end": 6801,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6841,
											"end": 6845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6837,
											"end": 6857,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6833,
											"end": 6834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6818,
											"end": 6835,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6811,
											"end": 6858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 7001,
											"end": 7005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 6875,
											"end": 7006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 7006,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 6875,
											"end": 7006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 7006,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6867,
											"end": 7006,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6594,
											"end": 7013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7183,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7019,
											"end": 7183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7175,
											"name": "PUSH",
											"source": 3,
											"value": "696E76616C696420776561706F6E000000000000000000000000000000000000"
										},
										{
											"begin": 7155,
											"end": 7156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7153,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7143,
											"end": 7157,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7136,
											"end": 7176,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7183,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7555,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7189,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7331,
											"end": 7334,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7352,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7352,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7352,
											"end": 7419,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7352,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7419,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7345,
											"end": 7419,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 7517,
											"end": 7520,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7428,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7428,
											"end": 7521,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 7428,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7546,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7537,
											"end": 7549,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7530,
											"end": 7549,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7530,
											"end": 7549,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7555,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7555,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7555,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7980,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 7561,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7727,
											"end": 7731,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7767,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7754,
											"end": 7763,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7742,
											"end": 7768,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7808,
											"end": 7812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7804,
											"end": 7824,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7789,
											"end": 7798,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7785,
											"end": 7802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7778,
											"end": 7825,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 7968,
											"end": 7972,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 7973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7842,
											"end": 7973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7842,
											"end": 7973,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 7842,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7834,
											"end": 7973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7834,
											"end": 7973,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7980,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7980,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7561,
											"end": 7980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8084,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7986,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8037,
											"end": 8043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8071,
											"end": 8076,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8055,
											"end": 8077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7986,
											"end": 8084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8191,
											"end": 8202,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8213,
											"end": 8231,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8090,
											"end": 8237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8489,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8243,
											"end": 8489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8342,
											"end": 8355,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8428,
											"end": 8431,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8424,
											"end": 8435,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8418,
											"end": 8436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8409,
											"end": 8412,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8405,
											"end": 8416,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8398,
											"end": 8437,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8370,
											"end": 8372,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8367,
											"end": 8368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8363,
											"end": 8373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 8334,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8472,
											"end": 8478,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8467,
											"end": 8470,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8463,
											"end": 8479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8456,
											"end": 8483,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8305,
											"end": 8489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8489,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8243,
											"end": 8489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8599,
											"end": 8602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8627,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 8659,
											"end": 8664,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8627,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 8627,
											"end": 8665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8627,
											"end": 8665,
											"name": "tag",
											"source": 3,
											"value": "372"
										},
										{
											"begin": 8627,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 8762,
											"end": 8768,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8757,
											"end": 8760,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 8681,
											"end": 8769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8674,
											"end": 8769,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8674,
											"end": 8769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8831,
											"end": 8834,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8824,
											"end": 8828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8817,
											"end": 8822,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8813,
											"end": 8829,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8778,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8778,
											"end": 8843,
											"name": "tag",
											"source": 3,
											"value": "374"
										},
										{
											"begin": 8778,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8863,
											"end": 8866,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8875,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8852,
											"end": 8875,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8603,
											"end": 8881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8495,
											"end": 8881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9063,
											"end": 9066,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9085,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 9174,
											"end": 9177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9165,
											"end": 9171,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9085,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9178,
											"name": "tag",
											"source": 3,
											"value": "376"
										},
										{
											"begin": 9085,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9178,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9078,
											"end": 9178,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 9284,
											"end": 9287,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9195,
											"end": 9288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9195,
											"end": 9288,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 9195,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9288,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9188,
											"end": 9288,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9305,
											"end": 9308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9298,
											"end": 9308,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 9314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9450,
											"end": 9453,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9472,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 9561,
											"end": 9564,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9552,
											"end": 9558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9472,
											"end": 9565,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 9472,
											"end": 9565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9472,
											"end": 9565,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 9472,
											"end": 9565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9465,
											"end": 9565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9465,
											"end": 9565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9582,
											"end": 9585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9320,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9654,
											"end": 9659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9679,
											"end": 9692,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9670,
											"end": 9692,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9670,
											"end": 9692,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 9728,
											"end": 9733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 9701,
											"end": 9734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "tag",
											"source": 3,
											"value": "381"
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9597,
											"end": 9740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9816,
											"end": 9822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9865,
											"end": 9867,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9853,
											"end": 9862,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9844,
											"end": 9851,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 9952,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 9833,
											"end": 9952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 9871,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 9871,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9871,
											"end": 9950,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 9871,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9833,
											"end": 9952,
											"name": "tag",
											"source": 3,
											"value": "383"
										},
										{
											"begin": 9833,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 10072,
											"end": 10079,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10063,
											"end": 10069,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10052,
											"end": 10061,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10048,
											"end": 10070,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 10016,
											"end": 10080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10016,
											"end": 10080,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 10016,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10080,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10080,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9962,
											"end": 10090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9746,
											"end": 10097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10269,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10103,
											"end": 10269,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10243,
											"end": 10261,
											"name": "PUSH",
											"source": 3,
											"value": "696E636F727265637420776561706F6E00000000000000000000000000000000"
										},
										{
											"begin": 10239,
											"end": 10240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10237,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10227,
											"end": 10241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10220,
											"end": 10262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10269,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10641,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10275,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10417,
											"end": 10420,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10438,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 10502,
											"end": 10504,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 10497,
											"end": 10500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10505,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 10438,
											"end": 10505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10438,
											"end": 10505,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 10438,
											"end": 10505,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10431,
											"end": 10505,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10431,
											"end": 10505,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10603,
											"end": 10606,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 10514,
											"end": 10607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10607,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 10514,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10634,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10627,
											"end": 10630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10616,
											"end": 10635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10641,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10641,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10641,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10275,
											"end": 10641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 11066,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 10647,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10813,
											"end": 10817,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10851,
											"end": 10853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10840,
											"end": 10849,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10836,
											"end": 10854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10900,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10894,
											"end": 10898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10910,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10886,
											"end": 10887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10884,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 10888,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10864,
											"end": 10911,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10928,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 11054,
											"end": 11058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10928,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 10928,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10928,
											"end": 11059,
											"name": "tag",
											"source": 3,
											"value": "391"
										},
										{
											"begin": 10928,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10920,
											"end": 11059,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 11066,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 11066,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 11066,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10647,
											"end": 11066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11202,
											"end": 11206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11240,
											"end": 11242,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11229,
											"end": 11238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11217,
											"end": 11243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11217,
											"end": 11243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11253,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 11321,
											"end": 11322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11310,
											"end": 11319,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11306,
											"end": 11323,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11297,
											"end": 11303,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11253,
											"end": 11324,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 11253,
											"end": 11324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11253,
											"end": 11324,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 11253,
											"end": 11324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 11411,
											"end": 11413,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11400,
											"end": 11409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11396,
											"end": 11414,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11387,
											"end": 11393,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 11334,
											"end": 11415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11415,
											"name": "tag",
											"source": 3,
											"value": "394"
										},
										{
											"begin": 11334,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11072,
											"end": 11422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11428,
											"end": 11595,
											"name": "tag",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 11428,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11568,
											"end": 11587,
											"name": "PUSH",
											"source": 3,
											"value": "54686520726F6F6D2069732066756C6C2E000000000000000000000000000000"
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11552,
											"end": 11566,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11545,
											"end": 11588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11428,
											"end": 11595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11428,
											"end": 11595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11743,
											"end": 11746,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 11828,
											"end": 11830,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 11823,
											"end": 11826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 11764,
											"end": 11831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 11764,
											"end": 11831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11757,
											"end": 11831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11757,
											"end": 11831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 11929,
											"end": 11932,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "279"
										},
										{
											"begin": 11840,
											"end": 11933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 11840,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11958,
											"end": 11960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11953,
											"end": 11956,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11949,
											"end": 11961,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11942,
											"end": 11961,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11601,
											"end": 11967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12177,
											"end": 12179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12166,
											"end": 12175,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12162,
											"end": 12180,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12180,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12180,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12226,
											"end": 12235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12220,
											"end": 12224,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12216,
											"end": 12236,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12212,
											"end": 12213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12201,
											"end": 12210,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12197,
											"end": 12214,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12190,
											"end": 12237,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 12380,
											"end": 12384,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 12254,
											"end": 12385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "tag",
											"source": 3,
											"value": "400"
										},
										{
											"begin": 12254,
											"end": 12385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12246,
											"end": 12385,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12246,
											"end": 12385,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11973,
											"end": 12392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12398,
											"end": 12577,
											"name": "tag",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 12398,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12538,
											"end": 12569,
											"name": "PUSH",
											"source": 3,
											"value": "506C6179657273206861766520616C726561647920636F6D6D69746564000000"
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12526,
											"end": 12532,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12522,
											"end": 12536,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12515,
											"end": 12570,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12398,
											"end": 12577,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12398,
											"end": 12577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "tag",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12725,
											"end": 12728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 12810,
											"end": 12812,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 12805,
											"end": 12808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 12746,
											"end": 12813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 12746,
											"end": 12813,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12739,
											"end": 12813,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12739,
											"end": 12813,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 12911,
											"end": 12914,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "281"
										},
										{
											"begin": 12822,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "tag",
											"source": 3,
											"value": "404"
										},
										{
											"begin": 12822,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12940,
											"end": 12942,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12935,
											"end": 12938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12931,
											"end": 12943,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12924,
											"end": 12943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13121,
											"end": 13125,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13148,
											"end": 13157,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13144,
											"end": 13162,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13136,
											"end": 13162,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13136,
											"end": 13162,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 13208,
											"end": 13217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13202,
											"end": 13206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13198,
											"end": 13218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 13194,
											"end": 13195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13192,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13179,
											"end": 13196,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13172,
											"end": 13219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 13362,
											"end": 13366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "282"
										},
										{
											"begin": 13236,
											"end": 13367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "tag",
											"source": 3,
											"value": "406"
										},
										{
											"begin": 13236,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13228,
											"end": 13367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13228,
											"end": 13367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 13374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 12955,
											"end": 13374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 13380,
											"end": 13560,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 13380,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13428,
											"end": 13505,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13425,
											"end": 13426,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13506,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13525,
											"end": 13529,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 13522,
											"end": 13523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13515,
											"end": 13530,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13549,
											"end": 13553,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13546,
											"end": 13547,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13539,
											"end": 13554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 13566,
											"end": 13746,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 13566,
											"end": 13746,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13614,
											"end": 13691,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13611,
											"end": 13612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13604,
											"end": 13692,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13711,
											"end": 13715,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 13708,
											"end": 13709,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 13701,
											"end": 13716,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13735,
											"end": 13739,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 13725,
											"end": 13740,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"endgame()": "9dd63d6b",
							"join()": "b688a363",
							"makeChoice(bytes32)": "fce55812",
							"newGame()": "7d03f5f3",
							"player1()": "d30895e4",
							"player1Hash()": "a45332a7",
							"player2()": "59a5f12d",
							"player2Hash()": "fb93247f",
							"reveal(uint8,uint32)": "ab4a6be1",
							"stage()": "c040e6b8",
							"weaponOfPlayer1()": "d8c4d9da",
							"weaponOfPlayer2()": "1884824c",
							"winner()": "dfbf53ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"Commit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum RPS.Weapon\",\"name\":\"weapon\",\"type\":\"uint8\"}],\"name\":\"Reveal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"endgame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"join\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"makeChoice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player1Hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"player2Hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum RPS.Weapon\",\"name\":\"weapon\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"salt\",\"type\":\"uint32\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"internalType\":\"enum RPS.Stage\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weaponOfPlayer1\",\"outputs\":[{\"internalType\":\"enum RPS.Weapon\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weaponOfPlayer2\",\"outputs\":[{\"internalType\":\"enum RPS.Weapon\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"RPS\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x2d6ce203858ca9ab27158f7976e8122d940a197f0704c596c48b71e64677e71a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d83d23fcbfdd8f1733d9e77c5a64a9d263f6ba104ca47a19715bc0d630da7e7\",\"dweb:/ipfs/QmaDUwnKNSk9EmqxyuYS1wr6EDikzvU9jvi1NFwiqzxoPh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1066,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "player1",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1068,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "player2",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1071,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "weaponOfPlayer1",
								"offset": 20,
								"slot": "1",
								"type": "t_enum(Weapon)1064"
							},
							{
								"astId": 1074,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "weaponOfPlayer2",
								"offset": 21,
								"slot": "1",
								"type": "t_enum(Weapon)1064"
							},
							{
								"astId": 1076,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "player1Hash",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							},
							{
								"astId": 1078,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "player2Hash",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 1080,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "winner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1085,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "stage",
								"offset": 20,
								"slot": "4",
								"type": "t_enum(Stage)1059"
							},
							{
								"astId": 1093,
								"contract": "contracts/MyToken.sol:RPS",
								"label": "map",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_enum(Weapon)1064,t_mapping(t_enum(Weapon)1064,t_uint8))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Stage)1059": {
								"encoding": "inplace",
								"label": "enum RPS.Stage",
								"numberOfBytes": "1"
							},
							"t_enum(Weapon)1064": {
								"encoding": "inplace",
								"label": "enum RPS.Weapon",
								"numberOfBytes": "1"
							},
							"t_mapping(t_enum(Weapon)1064,t_mapping(t_enum(Weapon)1064,t_uint8))": {
								"encoding": "mapping",
								"key": "t_enum(Weapon)1064",
								"label": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(Weapon)1064,t_uint8)"
							},
							"t_mapping(t_enum(Weapon)1064,t_uint8)": {
								"encoding": "mapping",
								"key": "t_enum(Weapon)1064",
								"label": "mapping(enum RPS.Weapon => uint8)",
								"numberOfBytes": "32",
								"value": "t_uint8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1039
						],
						"Strings": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 175,
							"sourceUnit": 1040,
							"src": "126:25:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "Strings",
							"nameLocation": "196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 6,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "210:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 4,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 9,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 174,
									"src": "270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 7,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "486:625:0",
										"statements": [
											{
												"id": 55,
												"nodeType": "UncheckedBlock",
												"src": "496:609:0",
												"statements": [
													{
														"assignments": [
															18
														],
														"declarations": [
															{
																"constant": false,
																"id": 18,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "520:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 17,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 25,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 21,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "548:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 19,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "537:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1039_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 876,
																	"src": "537:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:0"
													},
													{
														"assignments": [
															27
														],
														"declarations": [
															{
																"constant": false,
																"id": 27,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "572:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 26,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 32,
														"initialValue": {
															"arguments": [
																{
																	"id": 30,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "606:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 29,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 28,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:0"
													},
													{
														"assignments": [
															34
														],
														"declarations": [
															{
																"constant": false,
																"id": 34,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 55,
																"src": "627:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 33,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 35,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 27,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:0",
																"valueSize": 1
															},
															{
																"declaration": 18,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:0",
																"valueSize": 1
															},
															{
																"declaration": 34,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:0",
																"valueSize": 1
															}
														],
														"id": 36,
														"nodeType": "InlineAssembly",
														"src": "699:76:0"
													},
													{
														"body": {
															"id": 51,
															"nodeType": "Block",
															"src": "801:267:0",
															"statements": [
																{
																	"expression": {
																		"id": 39,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:0",
																		"subExpression": {
																			"id": 38,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "819:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 40,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:0"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 6,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 34,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 12,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 41,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:0"
																},
																{
																	"expression": {
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 42,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1003:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 43,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 45,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 46,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 12,
																			"src": "1036:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 47,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 50,
																	"nodeType": "IfStatement",
																	"src": "1032:21:0",
																	"trueBody": {
																		"id": 49,
																		"nodeType": "Break",
																		"src": "1048:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 52,
														"nodeType": "WhileStatement",
														"src": "788:280:0"
													},
													{
														"expression": {
															"id": 53,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 16,
														"id": 54,
														"nodeType": "Return",
														"src": "1081:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "433:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "471:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 14,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:0"
									},
									"scope": 174,
									"src": "415:696:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1290:100:0",
										"statements": [
											{
												"id": 75,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 66,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "1343:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 69,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 60,
																				"src": "1362:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 67,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "1350:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1039_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 68,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 999,
																			"src": "1350:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 70,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 65,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	77,
																	153,
																	173
																],
																"referencedDeclaration": 153,
																"src": "1331:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 64,
														"id": 74,
														"nodeType": "Return",
														"src": "1324:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1237:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1275:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:0"
									},
									"scope": 174,
									"src": "1216:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1603:347:0",
										"statements": [
											{
												"assignments": [
													88
												],
												"declarations": [
													{
														"constant": false,
														"id": 88,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "1613:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 87,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 97,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 92,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "1649:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 89,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:0"
											},
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 98,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 100,
														"indexExpression": {
															"hexValue": "30",
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 104,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1695:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 106,
														"indexExpression": {
															"hexValue": "31",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:0"
											},
											{
												"body": {
													"id": 138,
													"nodeType": "Block",
													"src": "1765:83:0",
													"statements": [
														{
															"expression": {
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 124,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1779:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 126,
																	"indexExpression": {
																		"id": 125,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1786:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 127,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 6,
																		"src": "1791:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 131,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 128,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 80,
																			"src": "1800:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 133,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:0"
														},
														{
															"expression": {
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 134,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "1826:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 137,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 118,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1753:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"initializationExpression": {
													"assignments": [
														111
													],
													"declarations": [
														{
															"constant": false,
															"id": 111,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 139,
															"src": "1725:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 110,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 117,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 113,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 82,
																"src": "1741:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:0",
														"subExpression": {
															"id": 121,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1762:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 123,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1865:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 149,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1936:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 147,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 86,
												"id": 151,
												"nodeType": "Return",
												"src": "1922:21:0"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1588:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:0"
									},
									"scope": 174,
									"src": "1513:437:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "2175:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 166,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 156,
																			"src": "2220:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 164,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 162,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 169,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "2228:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 161,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															77,
															153,
															173
														],
														"referencedDeclaration": 153,
														"src": "2192:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 160,
												"id": 171,
												"nodeType": "Return",
												"src": "2185:59:0"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2123:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "2160:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:0"
									},
									"scope": 174,
									"src": "2102:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 175,
							"src": "188:2065:0",
							"usedErrors": []
						}
					],
					"src": "101:2153:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1039
						]
					},
					"id": 1040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 177,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1039,
							"linearizedBaseContracts": [
								1039
							],
							"name": "Math",
							"nameLocation": "210:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 181,
									"members": [
										{
											"id": 178,
											"name": "Down",
											"nameLocation": "245:4:1",
											"nodeType": "EnumValue",
											"src": "245:4:1"
										},
										{
											"id": 179,
											"name": "Up",
											"nameLocation": "287:2:1",
											"nodeType": "EnumValue",
											"src": "287:2:1"
										},
										{
											"id": 180,
											"name": "Zero",
											"nameLocation": "318:4:1",
											"nodeType": "EnumValue",
											"src": "318:4:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:1",
									"nodeType": "EnumDefinition",
									"src": "221:122:1"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "480:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 191,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "497:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 192,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "501:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 195,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "509:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:1",
													"trueExpression": {
														"id": 194,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "505:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 197,
												"nodeType": "Return",
												"src": "490:20:1"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "426:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "437:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:1"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "471:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:1"
									},
									"scope": 1039,
									"src": "413:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "655:37:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 209,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "672:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 210,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "676:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 213,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "684:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:1",
													"trueExpression": {
														"id": 212,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "680:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 215,
												"nodeType": "Return",
												"src": "665:20:1"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "601:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "612:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "646:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:1"
									},
									"scope": 1039,
									"src": "588:104:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "876:82:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "931:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 228,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 222,
																	"src": "935:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 230,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 231,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "941:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 232,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "945:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 234,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 238,
												"nodeType": "Return",
												"src": "923:28:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "822:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "867:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:1"
									},
									"scope": 1039,
									"src": "805:153:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1228:123:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 250,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1316:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 254,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 243,
																			"src": "1330:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 258,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 245,
																"src": "1339:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "1309:35:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1174:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1219:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:1"
									},
									"scope": 1039,
									"src": "1157:194:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1795:3797:1",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:1",
												"statements": [
													{
														"assignments": [
															278
														],
														"declarations": [
															{
																"constant": false,
																"id": 278,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2126:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 277,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 279,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:1"
													},
													{
														"assignments": [
															281
														],
														"declarations": [
															{
																"constant": false,
																"id": 281,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2198:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 280,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 282,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:1",
																"valueSize": 1
															}
														],
														"id": 283,
														"nodeType": "InlineAssembly",
														"src": "2269:166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 284,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "2516:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 292,
														"nodeType": "IfStatement",
														"src": "2512:75:1",
														"trueBody": {
															"id": 291,
															"nodeType": "Block",
															"src": "2528:59:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 287,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "2553:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 288,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "2561:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 276,
																	"id": 290,
																	"nodeType": "Return",
																	"src": "2546:26:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 294,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "2697:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 295,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "2711:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 293,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 298,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:1"
													},
													{
														"assignments": [
															300
														],
														"declarations": [
															{
																"constant": false,
																"id": 300,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "2973:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 299,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 301,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:1"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:1"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:1",
																"valueSize": 1
															},
															{
																"declaration": 281,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:1",
																"valueSize": 1
															},
															{
																"declaration": 300,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:1",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:1",
																"valueSize": 1
															},
															{
																"declaration": 270,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:1",
																"valueSize": 1
															}
														],
														"id": 302,
														"nodeType": "InlineAssembly",
														"src": "3004:300:1"
													},
													{
														"assignments": [
															304
														],
														"declarations": [
															{
																"constant": false,
																"id": 304,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "3611:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 305,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "3626:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:1",
																			"subExpression": {
																				"id": 306,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 272,
																				"src": "3642:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:1"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:1",
																"valueSize": 1
															},
															{
																"declaration": 272,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:1",
																"valueSize": 1
															},
															{
																"declaration": 278,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:1",
																"valueSize": 1
															},
															{
																"declaration": 304,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:1",
																"valueSize": 1
															}
														],
														"id": 313,
														"nodeType": "InlineAssembly",
														"src": "3672:371:1"
													},
													{
														"expression": {
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 314,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "4109:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "4118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 316,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "4126:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:1"
													},
													{
														"assignments": [
															321
														],
														"declarations": [
															{
																"constant": false,
																"id": 321,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4448:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 323,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 272,
																			"src": "4471:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:1"
													},
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4704:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4719:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4733:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:1"
													},
													{
														"expression": {
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4788:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4802:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:1"
													},
													{
														"expression": {
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4843:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4858:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4872:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 352,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:1"
													},
													{
														"expression": {
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4913:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4928:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "4942:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:1"
													},
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "4983:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "4998:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5012:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:1"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "5054:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "5069:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "5083:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:1"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "5524:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "5533:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 379,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "5541:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:1"
													},
													{
														"expression": {
															"id": 383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "5569:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 276,
														"id": 384,
														"nodeType": "Return",
														"src": "5562:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1692:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1711:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1730:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "1779:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:1"
									},
									"scope": 1039,
									"src": "1667:3925:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "5872:189:1",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 430,
														"src": "5882:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5906:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5909:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 407,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5912:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															431
														],
														"referencedDeclaration": 387,
														"src": "5899:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$181",
															"typeString": "enum Math.Rounding"
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 410,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "5938:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$181",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 411,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "5950:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:1",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 179,
															"src": "5950:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$181",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 415,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "5972:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 416,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "5975:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 417,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5978:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 414,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "IfStatement",
												"src": "5934:98:1",
												"trueBody": {
													"id": 426,
													"nodeType": "Block",
													"src": "5996:36:1",
													"statements": [
														{
															"expression": {
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 422,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6010:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 425,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 428,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "6048:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 429,
												"nodeType": "Return",
												"src": "6041:13:1"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5749:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5787:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5816:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "5816:8:1"
													},
													"referencedDeclaration": 181,
													"src": "5816:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:1"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "5863:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:1"
									},
									"scope": 1039,
									"src": "5724:337:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "6337:1585:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "6351:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "6347:45:1",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "6359:33:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 438,
															"id": 443,
															"nodeType": "Return",
															"src": "6373:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 542,
														"src": "7071:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 456,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 450,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 434,
																			"src": "7099:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 449,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			711,
																			747
																		],
																		"referencedDeclaration": 711,
																		"src": "7094:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 454,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:1"
											},
											{
												"id": 541,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:1",
												"statements": [
													{
														"expression": {
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 457,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7532:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 458,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7542:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 459,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7551:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 460,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7555:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 463,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 467,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:1"
													},
													{
														"expression": {
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 468,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7581:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 469,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7591:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 470,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7600:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 471,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7604:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 474,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 478,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:1"
													},
													{
														"expression": {
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 479,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7630:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 480,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7640:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 481,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7649:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 482,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7653:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 485,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 489,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:1"
													},
													{
														"expression": {
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 490,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7679:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 491,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7689:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 492,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7698:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 493,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7702:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 496,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 500,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:1"
													},
													{
														"expression": {
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 501,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7728:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 502,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7738:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 503,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7747:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 504,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7751:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 507,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 511,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:1"
													},
													{
														"expression": {
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 512,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7777:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 513,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7787:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 514,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7796:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 515,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7800:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 522,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:1"
													},
													{
														"expression": {
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 523,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "7826:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 524,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 447,
																				"src": "7836:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 527,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 525,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 434,
																					"src": "7845:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 526,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 447,
																					"src": "7849:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 529,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 533,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 535,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "7886:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 536,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "7894:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 537,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "7898:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 534,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "7882:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 438,
														"id": 540,
														"nodeType": "Return",
														"src": "7875:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6294:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:1"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "6328:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:1"
									},
									"scope": 1039,
									"src": "6280:1642:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "8098:161:1",
										"statements": [
											{
												"id": 577,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:1",
												"statements": [
													{
														"assignments": [
															555
														],
														"declarations": [
															{
																"constant": false,
																"id": 555,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 577,
																"src": "8132:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 554,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"id": 557,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 556,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	543,
																	579
																],
																"referencedDeclaration": 543,
																"src": "8149:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "8177:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 564,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 561,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 549,
																					"src": "8187:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 562,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "8199:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 563,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "8199:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 565,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 555,
																						"src": "8214:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 566,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 555,
																						"src": "8223:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 546,
																					"src": "8232:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 574,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 553,
														"id": 576,
														"nodeType": "Return",
														"src": "8170:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8036:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8047:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 548,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 547,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "8047:8:1"
													},
													"referencedDeclaration": 181,
													"src": "8047:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "8089:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:1"
									},
									"scope": 1039,
									"src": "8022:237:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "8444:922:1",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "8454:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"hexValue": "30",
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:1"
											},
											{
												"id": 707,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8510:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 605,
														"nodeType": "IfStatement",
														"src": "8506:99:1",
														"trueBody": {
															"id": 604,
															"nodeType": "Block",
															"src": "8528:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 596,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8546:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 599,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:1"
																},
																{
																	"expression": {
																		"id": 602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 600,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8577:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 603,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 606,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8622:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 620,
														"nodeType": "IfStatement",
														"src": "8618:96:1",
														"trueBody": {
															"id": 619,
															"nodeType": "Block",
															"src": "8639:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 611,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8657:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 614,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:1"
																},
																{
																	"expression": {
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8687:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 618,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8731:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 635,
														"nodeType": "IfStatement",
														"src": "8727:96:1",
														"trueBody": {
															"id": 634,
															"nodeType": "Block",
															"src": "8748:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 626,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8766:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 629,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:1"
																},
																{
																	"expression": {
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 630,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8796:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 633,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8840:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 650,
														"nodeType": "IfStatement",
														"src": "8836:96:1",
														"trueBody": {
															"id": 649,
															"nodeType": "Block",
															"src": "8857:75:1",
															"statements": [
																{
																	"expression": {
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8875:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 644,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:1"
																},
																{
																	"expression": {
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "8905:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 648,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8949:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 665,
														"nodeType": "IfStatement",
														"src": "8945:93:1",
														"trueBody": {
															"id": 664,
															"nodeType": "Block",
															"src": "8965:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "8983:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 659,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:1"
																},
																{
																	"expression": {
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9012:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 663,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9055:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 680,
														"nodeType": "IfStatement",
														"src": "9051:93:1",
														"trueBody": {
															"id": 679,
															"nodeType": "Block",
															"src": "9071:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "9089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 674,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:1"
																},
																{
																	"expression": {
																		"id": 677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9118:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 678,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9161:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 695,
														"nodeType": "IfStatement",
														"src": "9157:93:1",
														"trueBody": {
															"id": 694,
															"nodeType": "Block",
															"src": "9177:73:1",
															"statements": [
																{
																	"expression": {
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 582,
																			"src": "9195:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 689,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:1"
																},
																{
																	"expression": {
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9224:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 693,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "9267:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 706,
														"nodeType": "IfStatement",
														"src": "9263:64:1",
														"trueBody": {
															"id": 705,
															"nodeType": "Block",
															"src": "9283:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "9301:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 704,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 708,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "9353:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 709,
												"nodeType": "Return",
												"src": "9346:13:1"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:1",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8397:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:1"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "8435:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:1"
									},
									"scope": 1039,
									"src": "8383:983:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "9599:165:1",
										"statements": [
											{
												"id": 745,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:1",
												"statements": [
													{
														"assignments": [
															723
														],
														"declarations": [
															{
																"constant": false,
																"id": 723,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 745,
																"src": "9633:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 722,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 727,
														"initialValue": {
															"arguments": [
																{
																	"id": 725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "9655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 724,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	711,
																	747
																],
																"referencedDeclaration": 711,
																"src": "9650:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "9682:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 729,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 717,
																					"src": "9692:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 730,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "9704:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 731,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "9704:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 737,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 735,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 734,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 723,
																						"src": "9724:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 736,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 714,
																					"src": "9733:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 742,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 721,
														"id": 744,
														"nodeType": "Return",
														"src": "9675:72:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9533:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9548:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 715,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "9548:8:1"
													},
													"referencedDeclaration": 181,
													"src": "9548:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:1"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "9590:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:1"
									},
									"scope": 1039,
									"src": "9519:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "9951:828:1",
										"statements": [
											{
												"assignments": [
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "9961:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 755,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"hexValue": "30",
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:1"
											},
											{
												"id": 872,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 759,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10017:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 775,
														"nodeType": "IfStatement",
														"src": "10013:99:1",
														"trueBody": {
															"id": 774,
															"nodeType": "Block",
															"src": "10034:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10052:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 765,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 766,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 769,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:1"
																},
																{
																	"expression": {
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 770,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10085:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 771,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 773,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 776,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10129:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 792,
														"nodeType": "IfStatement",
														"src": "10125:99:1",
														"trueBody": {
															"id": 791,
															"nodeType": "Block",
															"src": "10146:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 781,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10164:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 783,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 786,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:1"
																},
																{
																	"expression": {
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10197:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 790,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10241:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "10237:99:1",
														"trueBody": {
															"id": 808,
															"nodeType": "Block",
															"src": "10258:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10276:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 799,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 800,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 803,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:1"
																},
																{
																	"expression": {
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 804,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10309:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 807,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10353:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 826,
														"nodeType": "IfStatement",
														"src": "10349:96:1",
														"trueBody": {
															"id": 825,
															"nodeType": "Block",
															"src": "10369:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10387:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 820,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:1"
																},
																{
																	"expression": {
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10419:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 824,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10462:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "10458:96:1",
														"trueBody": {
															"id": 842,
															"nodeType": "Block",
															"src": "10478:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 832,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10496:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 834,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 837,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:1"
																},
																{
																	"expression": {
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 838,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10528:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 841,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10571:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 860,
														"nodeType": "IfStatement",
														"src": "10567:96:1",
														"trueBody": {
															"id": 859,
															"nodeType": "Block",
															"src": "10587:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 750,
																			"src": "10605:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 854,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:1"
																},
																{
																	"expression": {
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10637:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "10680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 871,
														"nodeType": "IfStatement",
														"src": "10676:64:1",
														"trueBody": {
															"id": 870,
															"nodeType": "Block",
															"src": "10696:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 866,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "10714:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 869,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 873,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 756,
													"src": "10766:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 874,
												"nodeType": "Return",
												"src": "10759:13:1"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:1",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "9904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:1"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "9942:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:1"
									},
									"scope": 1039,
									"src": "9889:890:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "11014:165:1",
										"statements": [
											{
												"id": 910,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:1",
												"statements": [
													{
														"assignments": [
															888
														],
														"declarations": [
															{
																"constant": false,
																"id": 888,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 910,
																"src": "11048:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 887,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 892,
														"initialValue": {
															"arguments": [
																{
																	"id": 890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 879,
																	"src": "11071:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 889,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	876,
																	912
																],
																"referencedDeclaration": 876,
																"src": "11065:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 893,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "11098:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 897,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 894,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 882,
																					"src": "11108:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 895,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "11120:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "11120:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 900,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 898,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 899,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "11139:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 901,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 879,
																					"src": "11148:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 907,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 886,
														"id": 909,
														"nodeType": "Return",
														"src": "11091:71:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10948:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "10963:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 881,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 880,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "10963:8:1"
													},
													"referencedDeclaration": 181,
													"src": "10963:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:1"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "11005:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:1"
									},
									"scope": 1039,
									"src": "10933:246:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "11493:600:1",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 998,
														"src": "11503:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 923,
												"initialValue": {
													"hexValue": "30",
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:1"
											},
											{
												"id": 995,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11559:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "IfStatement",
														"src": "11555:98:1",
														"trueBody": {
															"id": 937,
															"nodeType": "Block",
															"src": "11577:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11595:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:1"
																},
																{
																	"expression": {
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11626:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 936,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11670:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 953,
														"nodeType": "IfStatement",
														"src": "11666:95:1",
														"trueBody": {
															"id": 952,
															"nodeType": "Block",
															"src": "11687:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11705:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:1"
																},
																{
																	"expression": {
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11735:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 951,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11778:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "11774:95:1",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "11795:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11813:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:1"
																},
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11843:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11886:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 983,
														"nodeType": "IfStatement",
														"src": "11882:95:1",
														"trueBody": {
															"id": 982,
															"nodeType": "Block",
															"src": "11903:74:1",
															"statements": [
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "11921:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:1"
																},
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "11951:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "11994:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 994,
														"nodeType": "IfStatement",
														"src": "11990:64:1",
														"trueBody": {
															"id": 993,
															"nodeType": "Block",
															"src": "12010:44:1",
															"statements": [
																{
																	"expression": {
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "12028:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 992,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 996,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "12080:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 997,
												"nodeType": "Return",
												"src": "12073:13:1"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:1",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:1"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "11484:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:1"
									},
									"scope": 1039,
									"src": "11430:663:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "12329:173:1",
										"statements": [
											{
												"id": 1036,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:1",
												"statements": [
													{
														"assignments": [
															1011
														],
														"declarations": [
															{
																"constant": false,
																"id": 1011,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1036,
																"src": "12363:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1010,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1015,
														"initialValue": {
															"arguments": [
																{
																	"id": 1013,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "12387:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1012,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	999,
																	1038
																],
																"referencedDeclaration": 999,
																"src": "12380:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1016,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "12414:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$181",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1017,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "12424:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1018,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 181,
																						"src": "12436:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$181_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1019,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:1",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 179,
																					"src": "12436:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$181",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1026,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1021,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1022,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1011,
																									"src": "12457:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1023,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1025,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1027,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "12471:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1009,
														"id": 1035,
														"nodeType": "Return",
														"src": "12407:78:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12263:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12278:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$181",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1004,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1003,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "12278:8:1"
													},
													"referencedDeclaration": 181,
													"src": "12278:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$181",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:1"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "12320:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:1"
									},
									"scope": 1039,
									"src": "12247:255:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1040,
							"src": "202:12302:1",
							"usedErrors": []
						}
					],
					"src": "103:12402:1"
				},
				"id": 1
			},
			"contracts/MyToken.sol": {
				"ast": {
					"absolutePath": "contracts/MyToken.sol",
					"exportedSymbols": {
						"Math": [
							1039
						],
						"RPS": [
							1578
						],
						"Strings": [
							174
						]
					},
					"id": 1579,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1041,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1579,
							"sourceUnit": 175,
							"src": "73:51:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "RPS",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1578,
							"linearizedBaseContracts": [
								1578
							],
							"name": "RPS",
							"nameLocation": "135:3:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "599481bd81d46ea2372b7f45ab8900ac58961566f184806290d9ede4e0fc7641",
									"id": 1046,
									"name": "Commit",
									"nameLocation": "152:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "167:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "159:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "159:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "158:16:2"
									},
									"src": "146:29:2"
								},
								{
									"anonymous": false,
									"eventSelector": "79a7276ba83fef4fe13f88df855c8420d094de7d84d1d4a3bc10554a841bd80b",
									"id": 1053,
									"name": "Reveal",
									"nameLocation": "186:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "201:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "193:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "193:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"indexed": false,
												"mutability": "mutable",
												"name": "weapon",
												"nameLocation": "216:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "209:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Weapon_$1064",
													"typeString": "enum RPS.Weapon"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "Weapon",
														"nameLocations": [
															"209:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1064,
														"src": "209:6:2"
													},
													"referencedDeclaration": 1064,
													"src": "209:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:31:2"
									},
									"src": "180:44:2"
								},
								{
									"canonicalName": "RPS.Stage",
									"id": 1059,
									"members": [
										{
											"id": 1054,
											"name": "FirstCommit",
											"nameLocation": "251:11:2",
											"nodeType": "EnumValue",
											"src": "251:11:2"
										},
										{
											"id": 1055,
											"name": "SecondCommit",
											"nameLocation": "272:12:2",
											"nodeType": "EnumValue",
											"src": "272:12:2"
										},
										{
											"id": 1056,
											"name": "FirstReveal",
											"nameLocation": "294:11:2",
											"nodeType": "EnumValue",
											"src": "294:11:2"
										},
										{
											"id": 1057,
											"name": "SecondReveal",
											"nameLocation": "315:12:2",
											"nodeType": "EnumValue",
											"src": "315:12:2"
										},
										{
											"id": 1058,
											"name": "FinishGame",
											"nameLocation": "337:10:2",
											"nodeType": "EnumValue",
											"src": "337:10:2"
										}
									],
									"name": "Stage",
									"nameLocation": "235:5:2",
									"nodeType": "EnumDefinition",
									"src": "230:123:2"
								},
								{
									"canonicalName": "RPS.Weapon",
									"id": 1064,
									"members": [
										{
											"id": 1060,
											"name": "None",
											"nameLocation": "381:4:2",
											"nodeType": "EnumValue",
											"src": "381:4:2"
										},
										{
											"id": 1061,
											"name": "Rock",
											"nameLocation": "395:4:2",
											"nodeType": "EnumValue",
											"src": "395:4:2"
										},
										{
											"id": 1062,
											"name": "Paper",
											"nameLocation": "409:5:2",
											"nodeType": "EnumValue",
											"src": "409:5:2"
										},
										{
											"id": 1063,
											"name": "Scissors",
											"nameLocation": "424:8:2",
											"nodeType": "EnumValue",
											"src": "424:8:2"
										}
									],
									"name": "Weapon",
									"nameLocation": "364:6:2",
									"nodeType": "EnumDefinition",
									"src": "359:79:2"
								},
								{
									"constant": false,
									"functionSelector": "d30895e4",
									"id": 1066,
									"mutability": "mutable",
									"name": "player1",
									"nameLocation": "459:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "444:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1065,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "444:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "59a5f12d",
									"id": 1068,
									"mutability": "mutable",
									"name": "player2",
									"nameLocation": "487:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "472:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1067,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "472:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d8c4d9da",
									"id": 1071,
									"mutability": "mutable",
									"name": "weaponOfPlayer1",
									"nameLocation": "514:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "500:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Weapon_$1064",
										"typeString": "enum RPS.Weapon"
									},
									"typeName": {
										"id": 1070,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1069,
											"name": "Weapon",
											"nameLocations": [
												"500:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1064,
											"src": "500:6:2"
										},
										"referencedDeclaration": 1064,
										"src": "500:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Weapon_$1064",
											"typeString": "enum RPS.Weapon"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1884824c",
									"id": 1074,
									"mutability": "mutable",
									"name": "weaponOfPlayer2",
									"nameLocation": "549:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "535:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Weapon_$1064",
										"typeString": "enum RPS.Weapon"
									},
									"typeName": {
										"id": 1073,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1072,
											"name": "Weapon",
											"nameLocations": [
												"535:6:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1064,
											"src": "535:6:2"
										},
										"referencedDeclaration": 1064,
										"src": "535:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Weapon_$1064",
											"typeString": "enum RPS.Weapon"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a45332a7",
									"id": 1076,
									"mutability": "mutable",
									"name": "player1Hash",
									"nameLocation": "585:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "570:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1075,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb93247f",
									"id": 1078,
									"mutability": "mutable",
									"name": "player2Hash",
									"nameLocation": "617:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "602:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1077,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 1080,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "650:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "635:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1079,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c040e6b8",
									"id": 1085,
									"mutability": "mutable",
									"name": "stage",
									"nameLocation": "676:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "663:38:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$1059",
										"typeString": "enum RPS.Stage"
									},
									"typeName": {
										"id": 1082,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1081,
											"name": "Stage",
											"nameLocations": [
												"663:5:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1059,
											"src": "663:5:2"
										},
										"referencedDeclaration": 1059,
										"src": "663:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$1059",
											"typeString": "enum RPS.Stage"
										}
									},
									"value": {
										"expression": {
											"id": 1083,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1059,
											"src": "684:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
												"typeString": "type(enum RPS.Stage)"
											}
										},
										"id": 1084,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "690:11:2",
										"memberName": "FirstCommit",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 1054,
										"src": "684:17:2",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$1059",
											"typeString": "enum RPS.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1093,
									"mutability": "mutable",
									"name": "map",
									"nameLocation": "764:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 1578,
									"src": "712:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
										"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
									},
									"typeName": {
										"id": 1092,
										"keyType": {
											"id": 1087,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1086,
												"name": "Weapon",
												"nameLocations": [
													"720:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1064,
												"src": "720:6:2"
											},
											"referencedDeclaration": 1064,
											"src": "720:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Weapon_$1064",
												"typeString": "enum RPS.Weapon"
											}
										},
										"nodeType": "Mapping",
										"src": "712:43:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
											"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
										},
										"valueType": {
											"id": 1091,
											"keyType": {
												"id": 1089,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1088,
													"name": "Weapon",
													"nameLocations": [
														"738:6:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1064,
													"src": "738:6:2"
												},
												"referencedDeclaration": 1064,
												"src": "738:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Weapon_$1064",
													"typeString": "enum RPS.Weapon"
												}
											},
											"nodeType": "Mapping",
											"src": "730:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
												"typeString": "mapping(enum RPS.Weapon => uint8)"
											},
											"valueType": {
												"id": 1090,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "748:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "788:444:2",
										"statements": [
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1096,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "798:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1101,
															"indexExpression": {
																"expression": {
																	"id": 1097,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "802:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "809:4:2",
																"memberName": "Rock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1061,
																"src": "802:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "798:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1102,
														"indexExpression": {
															"expression": {
																"id": 1099,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "815:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "822:4:2",
															"memberName": "Rock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "815:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "798:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "830:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "798:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "798:33:2"
											},
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1106,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "841:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1111,
															"indexExpression": {
																"expression": {
																	"id": 1107,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "845:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "852:8:2",
																"memberName": "Scissors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1063,
																"src": "845:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "841:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1112,
														"indexExpression": {
															"expression": {
																"id": 1109,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "862:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "869:8:2",
															"memberName": "Scissors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1063,
															"src": "862:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "841:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "881:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "841:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "841:41:2"
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1116,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "892:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1121,
															"indexExpression": {
																"expression": {
																	"id": 1117,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "896:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "903:5:2",
																"memberName": "Paper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "896:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "892:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1122,
														"indexExpression": {
															"expression": {
																"id": 1119,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "910:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "917:5:2",
															"memberName": "Paper",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1062,
															"src": "910:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "892:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "926:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "892:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "892:35:2"
											},
											{
												"expression": {
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1126,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "937:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1131,
															"indexExpression": {
																"expression": {
																	"id": 1127,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "941:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "948:4:2",
																"memberName": "Rock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1061,
																"src": "941:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "937:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1132,
														"indexExpression": {
															"expression": {
																"id": 1129,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "954:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "961:8:2",
															"memberName": "Scissors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1063,
															"src": "954:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "937:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "973:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "937:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "937:37:2"
											},
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1136,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "984:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1141,
															"indexExpression": {
																"expression": {
																	"id": 1137,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "988:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "995:5:2",
																"memberName": "Paper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "988:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "984:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1142,
														"indexExpression": {
															"expression": {
																"id": 1139,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1002:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1009:4:2",
															"memberName": "Rock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "1002:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "984:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1017:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "984:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "984:34:2"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1146,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1028:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1151,
															"indexExpression": {
																"expression": {
																	"id": 1147,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1032:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1039:8:2",
																"memberName": "Scissors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1063,
																"src": "1032:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1028:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1152,
														"indexExpression": {
															"expression": {
																"id": 1149,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1049:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1056:5:2",
															"memberName": "Paper",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1062,
															"src": "1049:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1028:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1065:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1028:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1028:38:2"
											},
											{
												"expression": {
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1156,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1076:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1161,
															"indexExpression": {
																"expression": {
																	"id": 1157,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1080:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1087:4:2",
																"memberName": "Rock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1061,
																"src": "1080:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1076:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1162,
														"indexExpression": {
															"expression": {
																"id": 1159,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1093:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1100:5:2",
															"memberName": "Paper",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1062,
															"src": "1093:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1076:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1109:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1076:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "1076:34:2"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1166,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1120:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1171,
															"indexExpression": {
																"expression": {
																	"id": 1167,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1124:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1131:5:2",
																"memberName": "Paper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1062,
																"src": "1124:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1120:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1172,
														"indexExpression": {
															"expression": {
																"id": 1169,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1138:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1145:8:2",
															"memberName": "Scissors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1063,
															"src": "1138:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1120:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1157:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1120:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "1120:38:2"
											},
											{
												"expression": {
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1176,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "1168:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																	"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																}
															},
															"id": 1181,
															"indexExpression": {
																"expression": {
																	"id": 1177,
																	"name": "Weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "1172:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																		"typeString": "type(enum RPS.Weapon)"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1179:8:2",
																"memberName": "Scissors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1063,
																"src": "1172:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1168:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																"typeString": "mapping(enum RPS.Weapon => uint8)"
															}
														},
														"id": 1182,
														"indexExpression": {
															"expression": {
																"id": 1179,
																"name": "Weapon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "1189:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																	"typeString": "type(enum RPS.Weapon)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1196:4:2",
															"memberName": "Rock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1061,
															"src": "1189:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Weapon_$1064",
																"typeString": "enum RPS.Weapon"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1168:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1204:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1168:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "1168:37:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1186,
														"name": "newGame",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "1216:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1216:9:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "1216:9:2"
											}
										]
									},
									"id": 1190,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:2:2"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:0:2"
									},
									"scope": 1578,
									"src": "774:458:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1264:272:2",
										"statements": [
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1291:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1283:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1194,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1283:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1283:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1274:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "1274:21:2"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1200,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1305:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1323:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1315:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1201,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1315:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1315:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1305:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "1305:22:2"
											},
											{
												"expression": {
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "player2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1337:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307830",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1355:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1347:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1208,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1347:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1347:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1337:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "1337:22:2"
											},
											{
												"expression": {
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1214,
														"name": "player1Hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "1370:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1384:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0x0"
													},
													"src": "1370:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1370:17:2"
											},
											{
												"expression": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1218,
														"name": "player2Hash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1397:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307830",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1411:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0x0"
													},
													"src": "1397:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1221,
												"nodeType": "ExpressionStatement",
												"src": "1397:17:2"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1222,
														"name": "weaponOfPlayer1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1071,
														"src": "1425:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1223,
															"name": "Weapon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1443:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																"typeString": "type(enum RPS.Weapon)"
															}
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1450:4:2",
														"memberName": "None",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "1443:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"src": "1425:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "1425:29:2"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "weaponOfPlayer2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "1464:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1228,
															"name": "Weapon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1482:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																"typeString": "type(enum RPS.Weapon)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1489:4:2",
														"memberName": "None",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "1482:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"src": "1464:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "1464:29:2"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1232,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "1504:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1233,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "1512:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																"typeString": "type(enum RPS.Stage)"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1518:11:2",
														"memberName": "FirstCommit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "1512:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"src": "1504:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$1059",
														"typeString": "enum RPS.Stage"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1504:25:2"
											}
										]
									},
									"functionSelector": "7d03f5f3",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "newGame",
									"nameLocation": "1247:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1254:2:2"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1264:0:2"
									},
									"scope": 1578,
									"src": "1238:298:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "1568:129:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1241,
																	"name": "player1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "1586:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1605:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1597:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1242,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1597:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1597:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1586:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1247,
																	"name": "player2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "1611:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1630:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1622:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1248,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1622:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1622:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1611:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1586:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520726f6f6d2069732066756c6c2e",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1650:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6",
																"typeString": "literal_string \"The room is full.\""
															},
															"value": "The room is full."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc50596f8e203b05db8d9e22e5210ad7f6639ba7c070777d0bb9b8a5f3becbf6",
																"typeString": "literal_string \"The room is full.\""
															}
														],
														"id": 1240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1578:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1578:101:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "1578:101:2"
											},
											{
												"id": 1257,
												"nodeType": "PlaceholderStatement",
												"src": "1689:1:2"
											}
										]
									},
									"id": 1259,
									"name": "isJoinable",
									"nameLocation": "1555:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:2"
									},
									"src": "1546:151:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "1727:142:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1262,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1745:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1749:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1745:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1264,
																	"name": "player1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "1759:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1745:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1266,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1770:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1774:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1770:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1268,
																	"name": "player2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "1784:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1770:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1745:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420706c6179696e6720746869732067616d652e",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1809:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e",
																"typeString": "literal_string \"You are not playing this game.\""
															},
															"value": "You are not playing this game."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde545d1cdecbc21a3a69302842fc12972e8a05a3a154ba191c7150dfe280b7e",
																"typeString": "literal_string \"You are not playing this game.\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1737:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:114:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "1737:114:2"
											},
											{
												"id": 1274,
												"nodeType": "PlaceholderStatement",
												"src": "1861:1:2"
											}
										]
									},
									"id": 1276,
									"name": "isPlayer",
									"nameLocation": "1716:8:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:2:2"
									},
									"src": "1707:162:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1300,
										"nodeType": "Block",
										"src": "1919:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	},
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1282,
																		"name": "weapon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1937:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1283,
																			"name": "Weapon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1064,
																			"src": "1947:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																				"typeString": "type(enum RPS.Weapon)"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1954:4:2",
																		"memberName": "Rock",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1061,
																		"src": "1947:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"src": "1937:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1286,
																		"name": "weapon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1962:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1287,
																			"name": "Weapon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1064,
																			"src": "1972:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																				"typeString": "type(enum RPS.Weapon)"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1979:5:2",
																		"memberName": "Paper",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1062,
																		"src": "1972:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"src": "1962:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1937:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1291,
																	"name": "weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "1988:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1292,
																		"name": "Weapon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1064,
																		"src": "1998:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																			"typeString": "type(enum RPS.Weapon)"
																		}
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2005:8:2",
																	"memberName": "Scissors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1063,
																	"src": "1998:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"src": "1988:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1937:76:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420776561706f6e",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2015:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334",
																"typeString": "literal_string \"invalid weapon\""
															},
															"value": "invalid weapon"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2f340b222a8e8b2ecfc8c2e644084e38091d9672281a8cd8ae95b02e010f334",
																"typeString": "literal_string \"invalid weapon\""
															}
														],
														"id": 1281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1929:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:103:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1298,
												"nodeType": "ExpressionStatement",
												"src": "1929:103:2"
											},
											{
												"id": 1299,
												"nodeType": "PlaceholderStatement",
												"src": "2042:1:2"
											}
										]
									},
									"id": 1301,
									"name": "isCorrectChoice",
									"nameLocation": "1888:15:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "weapon",
												"nameLocation": "1911:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "1904:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Weapon_$1064",
													"typeString": "enum RPS.Weapon"
												},
												"typeName": {
													"id": 1278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1277,
														"name": "Weapon",
														"nameLocations": [
															"1904:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1064,
														"src": "1904:6:2"
													},
													"referencedDeclaration": 1064,
													"src": "1904:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1903:15:2"
									},
									"src": "1879:171:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2079:121:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1304,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2110:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2114:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2110:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1306,
																	"name": "player1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "2124:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2110:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1308,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2151:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2155:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2151:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1310,
																	"name": "player2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "2165:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2151:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2110:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2089:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2089:93:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2089:93:2"
											},
											{
												"id": 1315,
												"nodeType": "PlaceholderStatement",
												"src": "2192:1:2"
											}
										]
									},
									"id": 1317,
									"name": "isAlreadyIn",
									"nameLocation": "2065:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:2:2"
									},
									"src": "2056:144:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "2295:140:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1324,
														"name": "player1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "2309:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2328:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2320:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1325,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2320:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2320:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2309:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1336,
															"name": "player2",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1337,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2418:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2422:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2418:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2408:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1340,
													"nodeType": "ExpressionStatement",
													"src": "2408:20:2"
												},
												"id": 1341,
												"nodeType": "IfStatement",
												"src": "2305:123:2",
												"trueBody": {
													"id": 1335,
													"nodeType": "Block",
													"src": "2332:58:2",
													"statements": [
														{
															"expression": {
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1330,
																	"name": "player1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "2346:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1331,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2356:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2360:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2356:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2346:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "2346:20:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b688a363",
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1319,
												"name": "isAlreadyIn",
												"nameLocations": [
													"2249:11:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "2249:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2249:11:2"
										},
										{
											"arguments": [],
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "isJoinable",
												"nameLocations": [
													"2278:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1259,
												"src": "2278:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2278:12:2"
										}
									],
									"name": "join",
									"nameLocation": "2242:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:2:2"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:0:2"
									},
									"scope": 1578,
									"src": "2233:202:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "2495:544:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1351,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "2513:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1352,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "2522:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																			"typeString": "type(enum RPS.Stage)"
																		}
																	},
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2528:11:2",
																	"memberName": "FirstCommit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1054,
																	"src": "2522:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"src": "2513:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1355,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "2543:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1356,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "2552:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																			"typeString": "type(enum RPS.Stage)"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2558:12:2",
																	"memberName": "SecondCommit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1055,
																	"src": "2552:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"src": "2543:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2513:57:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1350,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "2505:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1362,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2586:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2590:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2586:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1364,
															"name": "player1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2600:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2586:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1366,
															"name": "player1Hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "2635:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "307830",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2650:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0x0"
														},
														"src": "2635:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2586:67:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1375,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2708:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2712:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2708:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1377,
																"name": "player2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "2722:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2708:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1379,
																"name": "player2Hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "2757:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "307830",
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2772:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0x0"
															},
															"src": "2757:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2708:67:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1392,
														"nodeType": "Block",
														"src": "2826:64:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "506c6179657273206861766520616c726561647920636f6d6d69746564",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2847:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8",
																				"typeString": "literal_string \"Players have already commited\""
																			},
																			"value": "Players have already commited"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_92c1623c96f2f4c7342af835dc199caafbcd061f4787ad1db004898b9c03d0c8",
																				"typeString": "literal_string \"Players have already commited\""
																			}
																		],
																		"id": 1388,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "2840:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2840:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1391,
																"nodeType": "ExpressionStatement",
																"src": "2840:39:2"
															}
														]
													},
													"id": 1393,
													"nodeType": "IfStatement",
													"src": "2704:186:2",
													"trueBody": {
														"id": 1387,
														"nodeType": "Block",
														"src": "2777:43:2",
														"statements": [
															{
																"expression": {
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1383,
																		"name": "player2Hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "2791:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1384,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "2805:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "2791:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1386,
																"nodeType": "ExpressionStatement",
																"src": "2791:18:2"
															}
														]
													}
												},
												"id": 1394,
												"nodeType": "IfStatement",
												"src": "2582:308:2",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "2655:43:2",
													"statements": [
														{
															"expression": {
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1370,
																	"name": "player1Hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "2669:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1371,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "2683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2669:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1373,
															"nodeType": "ExpressionStatement",
															"src": "2669:18:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1396,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2912:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2916:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2912:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1395,
														"name": "Commit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2905:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "EmitStatement",
												"src": "2900:23:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$1059",
														"typeString": "enum RPS.Stage"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1400,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "2937:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1401,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "2946:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																"typeString": "type(enum RPS.Stage)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2952:11:2",
														"memberName": "FirstCommit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1054,
														"src": "2946:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"src": "2937:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1409,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "3007:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$1059",
																"typeString": "enum RPS.Stage"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1410,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "3015:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																	"typeString": "type(enum RPS.Stage)"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3021:11:2",
															"memberName": "FirstReveal",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1056,
															"src": "3015:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$1059",
																"typeString": "enum RPS.Stage"
															}
														},
														"src": "3007:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"id": 1413,
													"nodeType": "ExpressionStatement",
													"src": "3007:25:2"
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "2934:98:2",
												"trueBody": {
													"expression": {
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1404,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2965:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$1059",
																"typeString": "enum RPS.Stage"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 1405,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "2973:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																	"typeString": "type(enum RPS.Stage)"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2979:12:2",
															"memberName": "SecondCommit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1055,
															"src": "2973:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$1059",
																"typeString": "enum RPS.Stage"
															}
														},
														"src": "2965:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$1059",
															"typeString": "enum RPS.Stage"
														}
													},
													"id": 1408,
													"nodeType": "ExpressionStatement",
													"src": "2965:26:2"
												}
											}
										]
									},
									"functionSelector": "fce55812",
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1348,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1347,
												"name": "isPlayer",
												"nameLocations": [
													"2479:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1276,
												"src": "2479:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2479:8:2"
										}
									],
									"name": "makeChoice",
									"nameLocation": "2454:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2473:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "2465:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:14:2"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:0:2"
									},
									"scope": 1578,
									"src": "2445:594:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "3143:886:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1430,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "3161:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1431,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "3170:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																			"typeString": "type(enum RPS.Stage)"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3176:11:2",
																	"memberName": "FirstReveal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1056,
																	"src": "3170:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"src": "3161:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1434,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "3191:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1435,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "3200:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																			"typeString": "type(enum RPS.Stage)"
																		}
																	},
																	"id": 1436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3206:12:2",
																	"memberName": "SecondReveal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1057,
																	"src": "3200:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"src": "3191:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3161:57:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e636f7272656374207374616765",
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3220:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
																"typeString": "literal_string \"incorrect stage\""
															},
															"value": "incorrect stage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
																"typeString": "literal_string \"incorrect stage\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3153:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "3153:85:2"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "calculatedHash",
														"nameLocation": "3257:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "3249:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1442,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1467,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1454,
																							"name": "weapon",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1419,
																							"src": "3355:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_Weapon_$1064",
																								"typeString": "enum RPS.Weapon"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_enum$_Weapon_$1064",
																								"typeString": "enum RPS.Weapon"
																							}
																						],
																						"id": 1453,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3347:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1452,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "3347:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1455,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3347:15:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1450,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "3330:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$174_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3338:8:2",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 57,
																				"src": "3330:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3330:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3324:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1448,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3324:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3324:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1462,
																					"name": "salt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "3405:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint32",
																						"typeString": "uint32"
																					}
																				],
																				"expression": {
																					"id": 1460,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 174,
																					"src": "3388:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$174_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3396:8:2",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 57,
																				"src": "3388:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3388:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3382:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1458,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3382:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3382:29:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3294:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1445,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3294:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3300:6:2",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "3294:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3294:131:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1444,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "3274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3274:161:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3249:186:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													},
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1468,
														"name": "weapon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "3450:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1469,
															"name": "Weapon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "3460:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Weapon_$1064_$",
																"typeString": "type(enum RPS.Weapon)"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3467:4:2",
														"memberName": "None",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1060,
														"src": "3460:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Weapon_$1064",
															"typeString": "enum RPS.Weapon"
														}
													},
													"src": "3450:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1477,
												"nodeType": "IfStatement",
												"src": "3446:78:2",
												"trueBody": {
													"id": 1476,
													"nodeType": "Block",
													"src": "3473:51:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "696e636f727265637420776561706f6e",
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3494:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
																			"typeString": "literal_string \"incorrect weapon\""
																		},
																		"value": "incorrect weapon"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
																			"typeString": "literal_string \"incorrect weapon\""
																		}
																	],
																	"id": 1472,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3487:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3487:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1475,
															"nodeType": "ExpressionStatement",
															"src": "3487:26:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3538:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3542:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3538:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1480,
															"name": "player1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "3552:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3538:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1482,
															"name": "calculatedHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "3583:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1483,
															"name": "player1Hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3601:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3583:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3538:74:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1502,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3758:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3762:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3758:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1504,
																"name": "player2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "3772:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3758:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1506,
																"name": "calculatedHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "3803:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1507,
																"name": "player2Hash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1078,
																"src": "3821:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "3803:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "3758:74:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1530,
														"nodeType": "Block",
														"src": "3972:51:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "696e636f727265637420776561706f6e",
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3993:18:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
																				"typeString": "literal_string \"incorrect weapon\""
																			},
																			"value": "incorrect weapon"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_0569888de57ae7d10805259dd2182b94ff8ad2a65efa1306a02ea0b64b59799d",
																				"typeString": "literal_string \"incorrect weapon\""
																			}
																		],
																		"id": 1526,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "3986:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3986:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1529,
																"nodeType": "ExpressionStatement",
																"src": "3986:26:2"
															}
														]
													},
													"id": 1531,
													"nodeType": "IfStatement",
													"src": "3754:269:2",
													"trueBody": {
														"id": 1525,
														"nodeType": "Block",
														"src": "3834:132:2",
														"statements": [
															{
																"expression": {
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1510,
																		"name": "weaponOfPlayer2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "3848:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1511,
																		"name": "weapon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "3866:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	},
																	"src": "3848:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"id": 1513,
																"nodeType": "ExpressionStatement",
																"src": "3848:24:2"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1515,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3898:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3902:6:2",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3898:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1517,
																			"name": "weapon",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "3910:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Weapon_$1064",
																				"typeString": "enum RPS.Weapon"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_enum$_Weapon_$1064",
																				"typeString": "enum RPS.Weapon"
																			}
																		],
																		"id": 1514,
																		"name": "Reveal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "3891:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_Weapon_$1064_$returns$__$",
																			"typeString": "function (address,enum RPS.Weapon)"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3891:26:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1519,
																"nodeType": "EmitStatement",
																"src": "3886:31:2"
															},
															{
																"expression": {
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1520,
																		"name": "stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "3931:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stage_$1059",
																			"typeString": "enum RPS.Stage"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 1521,
																			"name": "Stage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "3939:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																				"typeString": "type(enum RPS.Stage)"
																			}
																		},
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3945:10:2",
																		"memberName": "FinishGame",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1058,
																		"src": "3939:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Stage_$1059",
																			"typeString": "enum RPS.Stage"
																		}
																	},
																	"src": "3931:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"id": 1524,
																"nodeType": "ExpressionStatement",
																"src": "3931:24:2"
															}
														]
													}
												},
												"id": 1532,
												"nodeType": "IfStatement",
												"src": "3534:489:2",
												"trueBody": {
													"id": 1501,
													"nodeType": "Block",
													"src": "3614:134:2",
													"statements": [
														{
															"expression": {
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1486,
																	"name": "weaponOfPlayer1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "3628:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1487,
																	"name": "weapon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "3646:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"src": "3628:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"id": 1489,
															"nodeType": "ExpressionStatement",
															"src": "3628:24:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1491,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3678:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3682:6:2",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3678:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1493,
																		"name": "weapon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "3690:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_enum$_Weapon_$1064",
																			"typeString": "enum RPS.Weapon"
																		}
																	],
																	"id": 1490,
																	"name": "Reveal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "3671:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_Weapon_$1064_$returns$__$",
																		"typeString": "function (address,enum RPS.Weapon)"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3671:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1495,
															"nodeType": "EmitStatement",
															"src": "3666:31:2"
														},
														{
															"expression": {
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1496,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "3711:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1497,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "3719:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																			"typeString": "type(enum RPS.Stage)"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3725:12:2",
																	"memberName": "SecondReveal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1057,
																	"src": "3719:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$1059",
																		"typeString": "enum RPS.Stage"
																	}
																},
																"src": "3711:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																}
															},
															"id": 1500,
															"nodeType": "ExpressionStatement",
															"src": "3711:26:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "ab4a6be1",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1424,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "isPlayer",
												"nameLocations": [
													"3089:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1276,
												"src": "3089:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3089:8:2"
										},
										{
											"arguments": [
												{
													"id": 1426,
													"name": "weapon",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1419,
													"src": "3131:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												}
											],
											"id": 1427,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1425,
												"name": "isCorrectChoice",
												"nameLocations": [
													"3115:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1301,
												"src": "3115:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3115:23:2"
										}
									],
									"name": "reveal",
									"nameLocation": "3054:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "weapon",
												"nameLocation": "3068:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3061:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Weapon_$1064",
													"typeString": "enum RPS.Weapon"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "Weapon",
														"nameLocations": [
															"3061:6:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1064,
														"src": "3061:6:2"
													},
													"referencedDeclaration": 1064,
													"src": "3061:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Weapon_$1064",
														"typeString": "enum RPS.Weapon"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "3083:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "3076:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1420,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "3076:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:28:2"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3143:0:2"
									},
									"scope": 1578,
									"src": "3045:984:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "4074:276:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$1059",
																"typeString": "enum RPS.Stage"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1540,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "4092:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1541,
																	"name": "Stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "4101:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Stage_$1059_$",
																		"typeString": "type(enum RPS.Stage)"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4107:10:2",
																"memberName": "FinishGame",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1058,
																"src": "4101:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$1059",
																	"typeString": "enum RPS.Stage"
																}
															},
															"src": "4092:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e636f7272656374207374616765",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4119:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
																"typeString": "literal_string \"incorrect stage\""
															},
															"value": "incorrect stage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c19b387864f36953271d2aa0fab91c51215769f722318e48152aef213d2ce90b",
																"typeString": "literal_string \"incorrect stage\""
															}
														],
														"id": 1539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4084:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "4084:53:2"
											},
											{
												"assignments": [
													1548
												],
												"declarations": [
													{
														"constant": false,
														"id": 1548,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4153:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "4148:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														},
														"typeName": {
															"id": 1547,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "4148:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int8",
																"typeString": "int8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1551,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "4167:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$_$",
																		"typeString": "mapping(enum RPS.Weapon => mapping(enum RPS.Weapon => uint8))"
																	}
																},
																"id": 1553,
																"indexExpression": {
																	"id": 1552,
																	"name": "weaponOfPlayer1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "4171:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Weapon_$1064",
																		"typeString": "enum RPS.Weapon"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4167:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_Weapon_$1064_$_t_uint8_$",
																	"typeString": "mapping(enum RPS.Weapon => uint8)"
																}
															},
															"id": 1555,
															"indexExpression": {
																"id": 1554,
																"name": "weaponOfPlayer2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "4188:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Weapon_$1064",
																	"typeString": "enum RPS.Weapon"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4167:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4162:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int8_$",
															"typeString": "type(int8)"
														},
														"typeName": {
															"id": 1549,
															"name": "int8",
															"nodeType": "ElementaryTypeName",
															"src": "4162:4:2",
															"typeDescriptions": {}
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4162:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4148:57:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1558,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "4228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int8",
																"typeString": "int8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4238:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4228:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1561,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "4243:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int8",
																"typeString": "int8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4253:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4243:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4228:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1574,
													"nodeType": "Block",
													"src": "4303:41:2",
													"statements": [
														{
															"expression": {
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1570,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "4317:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1571,
																	"name": "player2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "4326:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4317:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1573,
															"nodeType": "ExpressionStatement",
															"src": "4317:16:2"
														}
													]
												},
												"id": 1575,
												"nodeType": "IfStatement",
												"src": "4224:120:2",
												"trueBody": {
													"id": 1569,
													"nodeType": "Block",
													"src": "4256:41:2",
													"statements": [
														{
															"expression": {
																"id": 1567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1565,
																	"name": "winner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "4270:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1566,
																	"name": "player1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "4279:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1568,
															"nodeType": "ExpressionStatement",
															"src": "4270:16:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9dd63d6b",
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1536,
												"name": "isPlayer",
												"nameLocations": [
													"4065:8:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1276,
												"src": "4065:8:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4065:8:2"
										}
									],
									"name": "endgame",
									"nameLocation": "4048:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4055:2:2"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4074:0:2"
									},
									"scope": 1578,
									"src": "4039:311:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1579,
							"src": "126:4226:2",
							"usedErrors": []
						}
					],
					"src": "40:4313:2"
				},
				"id": 2
			}
		}
	}
}